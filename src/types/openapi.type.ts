/**
 * Generated by @skyleague/therefore@v1.0.0-local
 * Do not manually touch this
 */
/* eslint-disable */

export interface APIKeySecurityScheme {
    description?: string | undefined
    in: 'header' | 'query' | 'cookie'
    name: string
    type: 'apiKey'
    [k: `x-${string}`]: unknown
}

export interface AuthorizationCodeOAuthFlow {
    authorizationUrl: string
    refreshUrl?: string | undefined
    scopes: {
        [k: string]: string | undefined
    }
    tokenUrl: string
    [k: `x-${string}`]: unknown
}

export interface Callback {
    [k: string]: (PathItem | undefined) | unknown
    [k: `x-${string}`]: unknown
}

export interface ClientCredentialsFlow {
    refreshUrl?: string | undefined
    scopes: {
        [k: string]: string | undefined
    }
    tokenUrl: string
    [k: `x-${string}`]: unknown
}

export interface Components {
    callbacks?:
        | {
              [k: string]: Reference | Callback
          }
        | undefined
    examples?:
        | {
              [k: string]: Reference | Example
          }
        | undefined
    headers?:
        | {
              [k: string]: Reference | Header
          }
        | undefined
    links?:
        | {
              [k: string]: Reference | Link
          }
        | undefined
    parameters?:
        | {
              [k: string]: Reference | Parameter
          }
        | undefined
    requestBodies?:
        | {
              [k: string]: Reference | RequestBody
          }
        | undefined
    responses?:
        | {
              [k: string]: Reference | Response
          }
        | undefined
    schemas?:
        | {
              [k: string]: Schema | Reference
          }
        | undefined
    securitySchemes?:
        | {
              [k: string]: Reference | SecurityScheme
          }
        | undefined
    [k: `x-${string}`]: unknown
}

export interface Contact {
    email?: string | undefined
    name?: string | undefined
    url?: string | undefined
    [k: `x-${string}`]: unknown
}

export interface Discriminator {
    mapping?:
        | {
              [k: string]: string | undefined
          }
        | undefined
    propertyName: string
}

export interface Encoding {
    /**
     * @default false
     */
    allowReserved?: boolean | undefined
    contentType?: string | undefined
    explode?: boolean | undefined
    headers?:
        | {
              [k: string]: (Header | Reference) | undefined
          }
        | undefined
    style?: 'form' | 'spaceDelimited' | 'pipeDelimited' | 'deepObject' | undefined
    [k: `x-${string}`]: unknown
}

export interface Example {
    description?: string | undefined
    externalValue?: string | undefined
    summary?: string | undefined
    value?: unknown
    [k: `x-${string}`]: unknown
}

/**
 * Example and examples are mutually exclusive
 */
export type ExampleXORExamples = unknown

export interface ExternalDocumentation {
    description?: string | undefined
    url: string
    [k: `x-${string}`]: unknown
}

export type Header = {
    /**
     * @default false
     */
    allowEmptyValue?: boolean | undefined
    /**
     * @default false
     */
    allowReserved?: boolean | undefined
    content?:
        | {
              [k: string]: MediaType | undefined
          }
        | undefined
    /**
     * @default false
     */
    deprecated?: boolean | undefined
    description?: string | undefined
    example?: unknown
    examples?:
        | {
              [k: string]: (Example | Reference) | undefined
          }
        | undefined
    explode?: boolean | undefined
    /**
     * @default false
     */
    required?: boolean | undefined
    schema?: (Schema | Reference) | undefined
    /**
     * @default 'simple'
     */
    style?: 'simple' | undefined
    [k: `x-${string}`]: unknown
} & ExampleXORExamples &
    SchemaXORContent

export type HTTPSecurityScheme =
    | {
          bearerFormat?: string | undefined
          description?: string | undefined
          scheme: string
          type: 'http'
          [k: `x-${string}`]: unknown
      }
    | {
          scheme?: string | undefined
      }
    | {
          scheme?: unknown
      }

export interface ImplicitOAuthFlow {
    authorizationUrl: string
    refreshUrl?: string | undefined
    scopes: {
        [k: string]: string | undefined
    }
    [k: `x-${string}`]: unknown
}

export interface Info {
    contact?: Contact | undefined
    description?: string | undefined
    license?: License | undefined
    termsOfService?: string | undefined
    title: string
    version: string
    [k: `x-${string}`]: unknown
}

export interface License {
    name: string
    url?: string | undefined
    [k: `x-${string}`]: unknown
}

export interface Link {
    description?: string | undefined
    operationId?: string | undefined
    operationRef?: string | undefined
    parameters?:
        | {
              [k: string]: unknown
          }
        | undefined
    requestBody?: unknown
    server?: Server | undefined
    [k: `x-${string}`]: unknown
}

export type MediaType = {
    encoding?:
        | {
              [k: string]: Encoding | undefined
          }
        | undefined
    example?: unknown
    examples?:
        | {
              [k: string]: (Example | Reference) | undefined
          }
        | undefined
    schema?: (Schema | Reference) | undefined
    [k: `x-${string}`]: unknown
} & ExampleXORExamples

export interface OAuth2SecurityScheme {
    description?: string | undefined
    flows: OAuthFlows
    type: 'oauth2'
    [k: `x-${string}`]: unknown
}

export interface OAuthFlows {
    authorizationCode?: AuthorizationCodeOAuthFlow | undefined
    clientCredentials?: ClientCredentialsFlow | undefined
    implicit?: ImplicitOAuthFlow | undefined
    password?: PasswordOAuthFlow | undefined
    [k: `x-${string}`]: unknown
}

/**
 * The description of OpenAPI v3.0.x documents, as defined by https://spec.openapis.org/oas/v3.0.3
 */
export interface OpenapiV3 {
    components?: Components | undefined
    externalDocs?: ExternalDocumentation | undefined
    info: Info
    openapi: string
    paths: Paths
    security?: SecurityRequirement[] | undefined
    servers?: Server[] | undefined
    tags?: Tag[] | undefined
    [k: `x-${string}`]: unknown
}

export interface OpenIdConnectSecurityScheme {
    description?: string | undefined
    openIdConnectUrl: string
    type: 'openIdConnect'
    [k: `x-${string}`]: unknown
}

export interface Operation {
    callbacks?:
        | {
              [k: string]: (Callback | Reference) | undefined
          }
        | undefined
    /**
     * @default false
     */
    deprecated?: boolean | undefined
    description?: string | undefined
    externalDocs?: ExternalDocumentation | undefined
    operationId?: string | undefined
    parameters?: (Parameter | Reference)[] | undefined
    requestBody?: (RequestBody | Reference) | undefined
    responses: Responses
    security?: SecurityRequirement[] | undefined
    servers?: Server[] | undefined
    summary?: string | undefined
    tags?: string[] | undefined
    [k: `x-${string}`]: unknown
}

export type Parameter = {
    /**
     * @default false
     */
    allowEmptyValue?: boolean | undefined
    /**
     * @default false
     */
    allowReserved?: boolean | undefined
    content?:
        | {
              [k: string]: MediaType | undefined
          }
        | undefined
    /**
     * @default false
     */
    deprecated?: boolean | undefined
    description?: string | undefined
    example?: unknown
    examples?:
        | {
              [k: string]: (Example | Reference) | undefined
          }
        | undefined
    explode?: boolean | undefined
    in: string
    name: string
    /**
     * @default false
     */
    required?: boolean | undefined
    schema?: (Schema | Reference) | undefined
    style?: string | undefined
    [k: `x-${string}`]: unknown
} & ExampleXORExamples &
    SchemaXORContent &
    ParameterLocation

/**
 * Parameter location
 */
export type ParameterLocation =
    | {
          in?: 'path' | undefined
          required: true
          /**
           * @default 'simple'
           */
          style?: 'matrix' | 'label' | 'simple' | undefined
      }
    | {
          in?: 'query' | undefined
          /**
           * @default 'form'
           */
          style?: 'form' | 'spaceDelimited' | 'pipeDelimited' | 'deepObject' | undefined
      }
    | {
          in?: 'header' | undefined
          /**
           * @default 'simple'
           */
          style?: 'simple' | undefined
      }
    | {
          in?: 'cookie' | undefined
          /**
           * @default 'form'
           */
          style?: 'form' | undefined
      }

export interface PasswordOAuthFlow {
    refreshUrl?: string | undefined
    scopes: {
        [k: string]: string | undefined
    }
    tokenUrl: string
    [k: `x-${string}`]: unknown
}

export interface PathItem {
    $ref?: string | undefined
    delete?: Operation | undefined
    description?: string | undefined
    get?: Operation | undefined
    head?: Operation | undefined
    options?: Operation | undefined
    parameters?: (Parameter | Reference)[] | undefined
    patch?: Operation | undefined
    post?: Operation | undefined
    put?: Operation | undefined
    servers?: Server[] | undefined
    summary?: string | undefined
    trace?: Operation | undefined
    [k: `x-${string}`]: unknown
}

export interface Paths {
    [k: `/${string}`]: PathItem
    [k: `x-${string}`]: unknown
}

export interface Reference {
    $ref: string
}

export interface RequestBody {
    content: {
        [k: string]: MediaType | undefined
    }
    description?: string | undefined
    /**
     * @default false
     */
    required?: boolean | undefined
    [k: `x-${string}`]: unknown
}

export interface Response {
    content?:
        | {
              [k: string]: MediaType | undefined
          }
        | undefined
    description: string
    headers?:
        | {
              [k: string]: (Header | Reference) | undefined
          }
        | undefined
    links?:
        | {
              [k: string]: (Link | Reference) | undefined
          }
        | undefined
    [k: `x-${string}`]: unknown
}

export interface Responses {
    default?: (Response | Reference) | undefined
    [k: string]: (Response | Reference) | unknown
    [k: `x-${string}`]: unknown
}

export interface Schema {
    /**
     * @default true
     */
    additionalProperties?: (Schema | Reference | boolean) | undefined
    allOf?: (Schema | Reference)[] | undefined
    anyOf?: (Schema | Reference)[] | undefined
    default?: unknown
    /**
     * @default false
     */
    deprecated?: boolean | undefined
    description?: string | undefined
    discriminator?: Discriminator | undefined
    enum?: [unknown, ...unknown[]] | undefined
    example?: unknown
    /**
     * @default false
     */
    exclusiveMaximum?: boolean | undefined
    /**
     * @default false
     */
    exclusiveMinimum?: boolean | undefined
    externalDocs?: ExternalDocumentation | undefined
    format?: string | undefined
    items?: (Schema | Reference) | undefined
    maximum?: number | undefined
    maxItems?: number | undefined
    maxLength?: number | undefined
    maxProperties?: number | undefined
    minimum?: number | undefined
    /**
     * @default 0
     */
    minItems?: number | undefined
    /**
     * @default 0
     */
    minLength?: number | undefined
    /**
     * @default 0
     */
    minProperties?: number | undefined
    multipleOf?: number | undefined
    not?: (Schema | Reference) | undefined
    /**
     * @default false
     */
    nullable?: boolean | undefined
    oneOf?: (Schema | Reference)[] | undefined
    pattern?: string | undefined
    properties?:
        | {
              [k: string]: (Schema | Reference) | undefined
          }
        | undefined
    /**
     * @default false
     */
    readOnly?: boolean | undefined
    required?: [string, ...string[]] | undefined
    title?: string | undefined
    type?: 'array' | 'boolean' | 'integer' | 'number' | 'object' | 'string' | undefined
    /**
     * @default false
     */
    uniqueItems?: boolean | undefined
    /**
     * @default false
     */
    writeOnly?: boolean | undefined
    xml?: XML | undefined
    [k: `x-${string}`]: unknown
}

/**
 * Schema and content are mutually exclusive, at least one is required
 */
export type SchemaXORContent = unknown | unknown

export interface SecurityRequirement {
    [k: string]: string[] | undefined
}

export type SecurityScheme = APIKeySecurityScheme | HTTPSecurityScheme | OAuth2SecurityScheme | OpenIdConnectSecurityScheme

export interface Server {
    description?: string | undefined
    url: string
    variables?:
        | {
              [k: string]: ServerVariable | undefined
          }
        | undefined
    [k: `x-${string}`]: unknown
}

export interface ServerVariable {
    default: string
    description?: string | undefined
    enum?: string[] | undefined
    [k: `x-${string}`]: unknown
}

export interface Tag {
    description?: string | undefined
    externalDocs?: ExternalDocumentation | undefined
    name: string
    [k: `x-${string}`]: unknown
}

export interface XML {
    /**
     * @default false
     */
    attribute?: boolean | undefined
    name?: string | undefined
    namespace?: string | undefined
    prefix?: string | undefined
    /**
     * @default false
     */
    wrapped?: boolean | undefined
    [k: `x-${string}`]: unknown
}
