/**
 * Generated by @skyleague/therefore
 * Do not manually touch this
 */
/* eslint-disable */

import { z } from 'zod'

import { Employee, Office, Task } from './task.js'

export const TaskEntity = z
    .object({
        pk: z.string(),
        sk: z.string(),
        gsi1pk: z.string().optional(),
        gsi1sk: z.string().optional(),
        gsi2pk: z.string().optional(),
        gsi2sk: z.string().optional(),
        gsi3pk: z.string().optional(),
        gsi3sk: z.string().optional(),
        gsi4pk: z.string().optional(),
        gsi4sk: z.string().optional(),
        gsi5pk: z.string().optional(),
        gsi5sk: z.string().optional(),
    })
    .merge(Task)

export type TaskEntity = z.infer<typeof TaskEntity>

export const EmployeeEntity = z
    .object({
        pk: z.string(),
        sk: z.string(),
        gsi1pk: z.string().optional(),
        gsi1sk: z.string().optional(),
        gsi2pk: z.string().optional(),
        gsi2sk: z.string().optional(),
        gsi3pk: z.string().optional(),
        gsi3sk: z.string().optional(),
        gsi4pk: z.string().optional(),
        gsi4sk: z.string().optional(),
        gsi5pk: z.string().optional(),
        gsi5sk: z.string().optional(),
    })
    .merge(Employee)

export type EmployeeEntity = z.infer<typeof EmployeeEntity>

export const OfficeEntity = z
    .object({
        pk: z.string(),
        sk: z.string(),
        gsi1pk: z.string().optional(),
        gsi1sk: z.string().optional(),
        gsi2pk: z.string().optional(),
        gsi2sk: z.string().optional(),
        gsi3pk: z.string().optional(),
        gsi3sk: z.string().optional(),
        gsi4pk: z.string().optional(),
        gsi4sk: z.string().optional(),
        gsi5pk: z.string().optional(),
        gsi5sk: z.string().optional(),
    })
    .merge(Office)

export type OfficeEntity = z.infer<typeof OfficeEntity>
