/**
 * Generated by @skyleague/therefore
 * Do not manually touch this
 */
/* eslint-disable */

import type { PutCommandInput, QueryCommandInput } from '@aws-sdk/lib-dynamodb'

import type { CreateEmployeeInput, CreateOfficeInput, CreateTaskInput } from './task.type.js'

export const getJuniorDevelopersCommand = ({
    tableName,
}: {
    tableName: string
}): QueryCommandInput => {
    return {
        TableName: tableName,
        IndexName: 'gsi4',
        KeyConditionExpression: 'gsi4pk = :gsi4pk0',
        FilterExpression: 'salary > :salary0',
        ExpressionAttributeValues: {
            ':gsi4pk0': 'title#Junior Developer',
            ':salary0': 100000,
        },
    }
}

export const createEmployeeCommand = ({
    tableName,
    args: { employee, firstName, lastName, officeName, title, team, salary, manager, dateHired, birthday },
}: {
    tableName: string
    args: CreateEmployeeInput
}): PutCommandInput => {
    return {
        TableName: tableName,
        Item: {
            // Key elements
            pk: `employee#${employee}`,
            sk: 'organization#user_1',
            gsi1pk: `officename#${officeName}`,
            gsi1sk: `team#${team}#title#${title}#employee#${employee}`,
            gsi2pk: `team#${team}`,
            gsi2sk: `datehired#${dateHired}#title#${title}`,
            gsi3pk: `employee#${employee}`,
            gsi3sk: 'TODOO',
            gsi4pk: `title#${title}`,
            gsi4sk: `salary#${salary}`,
            gsi5pk: `manager#${manager}`,
            gsi5sk: `team#${team}#officename#${officeName}`,

            // Other properties
            birthday,
            dateHired,
            employee,
            firstName,
            lastName,
            manager,
            officeName,
            salary,
            team,
            title,
        },
    }
}

export const createOfficeCommand = ({
    tableName,
    args: {
        gsi1pk,
        gsi1sk,
        gsi2pk,
        gsi2sk,
        gsi3pk,
        gsi3sk,
        gsi4pk,
        gsi4sk,
        gsi5pk,
        gsi5sk,
        officeName,
        country,
        state,
        city,
        zip,
        address,
    },
}: {
    tableName: string
    args: CreateOfficeInput
}): PutCommandInput => {
    return {
        TableName: tableName,
        Item: {
            // Key elements
            pk: `country#${country}#state#${state}`,
            sk: `city#${city}#zip#${zip}#officeName#${officeName}`,
            gsi1pk: gsi1pk,
            gsi1sk: gsi1sk,
            gsi2pk: gsi2pk,
            gsi2sk: gsi2sk,
            gsi3pk: gsi3pk,
            gsi3sk: gsi3sk,
            gsi4pk: gsi4pk,
            gsi4sk: gsi4sk,
            gsi5pk: gsi5pk,
            gsi5sk: gsi5sk,

            // Other properties
            address,
            city,
            country,
            officeName,
            state,
            zip,
        },
    }
}

export const createTaskCommand = ({
    tableName,
    args: {
        gsi1pk,
        gsi1sk,
        gsi2pk,
        gsi2sk,
        gsi3pk,
        gsi3sk,
        gsi4pk,
        gsi4sk,
        gsi5pk,
        gsi5sk,
        task,
        project,
        employee,
        description,
        status,
        points,
        comments,
    },
}: {
    tableName: string
    args: CreateTaskInput
}): PutCommandInput => {
    return {
        TableName: tableName,
        Item: Object.fromEntries(
            Object.entries({
                // Key elements
                pk: `${task}`,
                sk: `${project}#${employee}`,
                gsi1pk: gsi1pk,
                gsi1sk: gsi1sk,
                gsi2pk: gsi2pk,
                gsi2sk: gsi2sk,
                gsi3pk: gsi3pk,
                gsi3sk: gsi3sk,
                gsi4pk: gsi4pk,
                gsi4sk: gsi4sk,
                gsi5pk: gsi5pk,
                gsi5sk: gsi5sk,

                // Other properties
                comments,
                description,
                employee,
                points,
                project,
                status,
                task,
            }).filter(([, v]) => v !== undefined),
        ),
    }
}
