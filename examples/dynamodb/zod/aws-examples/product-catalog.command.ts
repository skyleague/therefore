/**
 * Generated by @skyleague/therefore
 * Do not manually touch this
 */
/* eslint-disable */

import type { GetCommandInput, PutCommandInput, ScanCommandInput, UpdateCommandInput } from '@aws-sdk/lib-dynamodb'

import type {
    CreateBicycleInput,
    CreateBookInput,
    CreateHomeImprovementInput,
    GetBicycleProjectionInput,
    GetBookReservedKeywordsInput,
    GetBookSpecialCharactersInput,
    GetHomeImprovementInput,
    GetProductsByColourAndPriceInput,
    UpdateHomeImprovementInput,
} from './product-catalog.type.js'

export const updateHomeImprovementCommand = ({
    tableName,
    args: { Id, ProductCategory, Price },
}: {
    tableName: string
    args: UpdateHomeImprovementInput
}): UpdateCommandInput => {
    return {
        TableName: tableName,
        Key: {
            Id: Id,
        },
        UpdateExpression: 'SET ProductCategory = :ProductCategory, Price = :Price',
        ExpressionAttributeValues: {
            ':ProductCategory': ProductCategory,
            ':Price': Price,
        },
    }
}

export const getProductsByColourAndPriceCommand = ({
    tableName,
    args: { color, price },
}: {
    tableName: string
    args: GetProductsByColourAndPriceInput
}): ScanCommandInput => {
    return {
        TableName: tableName,
        FilterExpression: 'contains(Color, :color) AND Price <= :price',
        ExpressionAttributeValues: {
            ':color': color,
            ':price': price,
        },
    }
}

export const getBookSpecialCharactersCommand = ({
    tableName,
    args: { Id },
}: {
    tableName: string
    args: GetBookSpecialCharactersInput
}): GetCommandInput => {
    return {
        TableName: tableName,
        Key: {
            Id: Id,
        },
        ProjectionExpression: '#Safety_Warning',
        ExpressionAttributeNames: {
            '#Safety_Warning': 'Safety.Warning',
        },
    }
}

export const createBicycleCommand = ({
    tableName,
    args: {
        Id,
        Price,
        ProductCategory,
        Title,
        Dimensions,
        InStock,
        QuantityOnHand,
        RelatedItems,
        Pictures,
        ProductReviews,
        Comment,
        'Safety.Warning': _Safety_Warning,
        Description,
        BicycleType,
        Brand,
        Color,
    },
}: {
    tableName: string
    args: CreateBicycleInput
}): PutCommandInput => {
    return {
        TableName: tableName,
        Item: Object.fromEntries(
            Object.entries({
                // Key elements
                Id: Id,

                // Other properties
                BicycleType,
                Brand,
                Color,
                Comment,
                Description,
                Dimensions,
                InStock,
                Pictures,
                Price,
                ProductCategory,
                ProductReviews,
                QuantityOnHand,
                RelatedItems,
                'Safety.Warning': _Safety_Warning,
                Title,
            }).filter(([, v]) => v !== undefined),
        ),
    }
}

export const createBookCommand = ({
    tableName,
    args: {
        Id,
        Price,
        ProductCategory,
        Title,
        Dimensions,
        InStock,
        QuantityOnHand,
        RelatedItems,
        Pictures,
        ProductReviews,
        Comment,
        'Safety.Warning': _Safety_Warning,
        ISBN,
        Authors,
        PageCount,
        InPublication,
    },
}: {
    tableName: string
    args: CreateBookInput
}): PutCommandInput => {
    return {
        TableName: tableName,
        Item: Object.fromEntries(
            Object.entries({
                // Key elements
                Id: Id,

                // Other properties
                Authors,
                Comment,
                Dimensions,
                ISBN,
                InPublication,
                InStock,
                PageCount,
                Pictures,
                Price,
                ProductCategory,
                ProductReviews,
                QuantityOnHand,
                RelatedItems,
                'Safety.Warning': _Safety_Warning,
                Title,
            }).filter(([, v]) => v !== undefined),
        ),
    }
}

export const createHomeImprovementCommand = ({
    tableName,
    args: {
        Id,
        Price,
        ProductCategory,
        Title,
        Dimensions,
        InStock,
        QuantityOnHand,
        RelatedItems,
        Pictures,
        ProductReviews,
        Comment,
        'Safety.Warning': _Safety_Warning,
    },
}: {
    tableName: string
    args: CreateHomeImprovementInput
}): PutCommandInput => {
    return {
        TableName: tableName,
        Item: Object.fromEntries(
            Object.entries({
                // Key elements
                Id: Id,

                // Other properties
                Comment,
                Dimensions,
                InStock,
                Pictures,
                Price,
                ProductCategory,
                ProductReviews,
                QuantityOnHand,
                RelatedItems,
                'Safety.Warning': _Safety_Warning,
                Title,
            }).filter(([, v]) => v !== undefined),
        ),
    }
}

export const getBicycleProjectionCommand = ({
    tableName,
    args: { Id },
}: {
    tableName: string
    args: GetBicycleProjectionInput
}): GetCommandInput => {
    return {
        TableName: tableName,
        Key: {
            Id: Id,
        },
        ProjectionExpression: 'Description',
    }
}

export const getBookReservedKeywordsCommand = ({
    tableName,
    args: { Id },
}: {
    tableName: string
    args: GetBookReservedKeywordsInput
}): GetCommandInput => {
    return {
        TableName: tableName,
        Key: {
            Id: Id,
        },
        ProjectionExpression: '#Comment',
        ExpressionAttributeNames: {
            '#Comment': 'Comment',
        },
    }
}

export const getHomeImprovementCommand = ({
    tableName,
    args: { Id },
}: {
    tableName: string
    args: GetHomeImprovementInput
}): GetCommandInput => {
    return {
        TableName: tableName,
        Key: {
            Id: Id,
        },
    }
}
