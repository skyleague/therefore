/**
 * Generated by @skyleague/therefore
 * Do not manually touch this
 */
/* eslint-disable */

import type { GetCommandInput, PutCommandInput } from '@aws-sdk/lib-dynamodb'

import type { CreateCustomerInput, GetCustomerInput } from './bookmark.type.js'

export const getCustomerCommand = ({
    tableName,
    args: { customerId },
}: {
    tableName: string
    args: GetCustomerInput
}): GetCommandInput => {
    return {
        TableName: tableName,
        Key: {
            customerId: `${customerId}`,
            sk: `CUST#${customerId}`,
        },
    }
}

export const createCustomerCommand = ({
    tableName,
    args: { customerId, creationDate, updateDate, email, fullName, userPreferences },
}: {
    tableName: string
    args: CreateCustomerInput
}): PutCommandInput => {
    const _now = new Date().toISOString()

    return {
        TableName: tableName,
        ConditionExpression: 'attribute_not_exists(customerId)',
        Item: Object.fromEntries(
            Object.entries({
                // Key elements
                customerId: `${customerId}`,
                sk: `CUST#${customerId}`,
                undefined: 'customer',
                creationDate: creationDate ?? _now,
                updateDate: updateDate ?? _now,

                // Other properties
                email,
                fullName,
                userPreferences,
            }).filter(([, v]) => v !== undefined),
        ),
    }
}
