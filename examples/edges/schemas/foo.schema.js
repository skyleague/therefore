/* eslint-disable */
// @ts-nocheck
/**
 * Generated by Ajv https://ajv.js.org/guide/managing-schemas.html#standalone-validation-code
 */
"use strict";
/** @type {unknown} */
export const validate = validate10;export default validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","title":"Foo","type":"object","properties":{"foo":{"$ref":"#/$defs/Bar"}},"additionalProperties":true,"$defs":{"Bar":{"type":"object","properties":{"bar":{"type":"string"},"aliased":{"$ref":"#/$defs/Bar2"}},"additionalProperties":true},"Bar2":{"type":"number"}}};const schema12 = {"type":"object","properties":{"bar":{"type":"string"},"aliased":{"$ref":"#/$defs/Bar2"}},"additionalProperties":true};const schema13 = {"type":"number"};function validate11(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){if(data.bar !== undefined){const _errs2 = errors;if(typeof data.bar !== "string"){validate11.errors = [{instancePath:instancePath+"/bar",schemaPath:"#/properties/bar/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.aliased !== undefined){let data1 = data.aliased;const _errs4 = errors;if(!((typeof data1 == "number") && (isFinite(data1)))){validate11.errors = [{instancePath:instancePath+"/aliased",schemaPath:"#/$defs/Bar2/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs4 === errors;}else {var valid0 = true;}}}else {validate11.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate11.errors = vErrors;return errors === 0;}function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){if(data.foo !== undefined){if(!(validate11(data.foo, {instancePath:instancePath+"/foo",parentData:data,parentDataProperty:"foo",rootData}))){vErrors = vErrors === null ? validate11.errors : vErrors.concat(validate11.errors);errors = vErrors.length;}}}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate10.errors = vErrors;return errors === 0;};validate.schema=schema11;