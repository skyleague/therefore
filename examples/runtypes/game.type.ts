/**
 * Generated by @skyleague/therefore@v1.0.0-local
 * Do not manually touch this
 */
/* eslint-disable */
import AjvValidator from 'ajv'
import type { ValidateFunction } from 'ajv'

export interface Asteroid {
    type: 'asteroid'
    location: Vector
    mass: number
}

export interface CrewMember {
    name: string
    age: number
    rank: Rank
    home: Planet
}

export interface Fleet {
    [k: string]: Ship | undefined
}

export interface Planet {
    type: 'planet'
    location: Vector
    mass: number
    population: number
    habitable: boolean
}

export type Rank = 'captain' | 'first mate' | 'officer' | 'ensign'

export interface Ship {
    type: 'ship'
    location: Vector
    mass: number
    name: string
    crew: CrewMember[]
}

export type SpaceObject = Asteroid | Planet | Ship

export const SpaceObject = {
    validate: (await import('./schemas/space-object.schema.js')).validate10 as unknown as ValidateFunction<SpaceObject>,
    get schema() {
        return SpaceObject.validate.schema
    },
    get errors() {
        return SpaceObject.validate.errors ?? undefined
    },
    is: (o: unknown): o is SpaceObject => SpaceObject.validate(o) === true,
    assert: (o: unknown) => {
        if (!SpaceObject.validate(o)) {
            throw new AjvValidator.ValidationError(SpaceObject.errors ?? [])
        }
    },
} as const

type Vector = [number, number, number]
