/**
 * Generated by @skyleague/therefore@v1.0.0-local
 * Do not manually touch this
 */
/* eslint-disable */
import type { ValidateFunction } from 'ajv'
import { ValidationError } from 'ajv'
import { CartItem } from './item.type.js'

export interface Cart {
    id: string
    items: CartItem[]
    createdAt: string
    updatedAt: string
}

export const Cart = {
    validate: (await import('./schemas/cart.schema.js')).validate as ValidateFunction<Cart>,
    get schema() {
        return Cart.validate.schema
    },
    get errors() {
        return Cart.validate.errors ?? undefined
    },
    is: (o: unknown): o is Cart => Cart.validate(o) === true,
    assert: (o: unknown) => {
        if (!Cart.validate(o)) {
            throw new ValidationError(Cart.errors ?? [])
        }
    },
} as const
