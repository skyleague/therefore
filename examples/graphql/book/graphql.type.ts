/**
 * Generated by @skyleague/therefore@v1.0.0-local
 * Do not manually touch this
 */
/* eslint-disable */

export interface Author {
    name: string
    books: Book
}

export interface AuthorInput {
    name: string
    books?: BookInput[] | undefined
}

export interface Book {
    title: string
    authors: Author
}

export interface BookInput {
    title: string
    authors?: AuthorInput[] | undefined
}

export const introspection = {
    __schema: {
        queryType: { name: 'Query', kind: 'OBJECT' },
        mutationType: { name: 'Mutation', kind: 'OBJECT' },
        subscriptionType: null,
        types: [
            {
                kind: 'OBJECT',
                name: 'Mutation',
                fields: [
                    {
                        name: 'addAuthor',
                        type: { kind: 'NON_NULL', ofType: { kind: 'OBJECT', name: 'Author', ofType: null } },
                        args: [{ name: 'input', type: { kind: 'NON_NULL', ofType: { kind: 'SCALAR', name: 'Any' } } }],
                    },
                    {
                        name: 'addBook',
                        type: { kind: 'NON_NULL', ofType: { kind: 'OBJECT', name: 'Book', ofType: null } },
                        args: [{ name: 'input', type: { kind: 'NON_NULL', ofType: { kind: 'SCALAR', name: 'Any' } } }],
                    },
                ],
                interfaces: [],
            },
            {
                kind: 'OBJECT',
                name: 'Query',
                fields: [
                    {
                        name: 'getAuthor',
                        type: { kind: 'NON_NULL', ofType: { kind: 'OBJECT', name: 'Author', ofType: null } },
                        args: [{ name: 'authorName', type: { kind: 'NON_NULL', ofType: { kind: 'SCALAR', name: 'Any' } } }],
                    },
                    {
                        name: 'getBook',
                        type: { kind: 'NON_NULL', ofType: { kind: 'OBJECT', name: 'Book', ofType: null } },
                        args: [{ name: 'bookName', type: { kind: 'NON_NULL', ofType: { kind: 'SCALAR', name: 'Any' } } }],
                    },
                ],
                interfaces: [],
            },
            {
                kind: 'OBJECT',
                name: 'Author',
                fields: [
                    {
                        name: 'books',
                        type: { kind: 'NON_NULL', ofType: { kind: 'OBJECT', name: 'Book', ofType: null } },
                        args: [],
                    },
                    { name: 'name', type: { kind: 'NON_NULL', ofType: { kind: 'SCALAR', name: 'Any' } }, args: [] },
                ],
                interfaces: [],
            },
            {
                kind: 'OBJECT',
                name: 'Book',
                fields: [
                    {
                        name: 'authors',
                        type: { kind: 'NON_NULL', ofType: { kind: 'OBJECT', name: 'Author', ofType: null } },
                        args: [],
                    },
                    { name: 'title', type: { kind: 'NON_NULL', ofType: { kind: 'SCALAR', name: 'Any' } }, args: [] },
                ],
                interfaces: [],
            },
            { kind: 'SCALAR', name: 'Any' },
        ],
        directives: [],
    },
} as const
