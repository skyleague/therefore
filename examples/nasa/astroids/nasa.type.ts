/**
 * Generated by @skyleague/therefore@v1.0.0-local
 * Do not manually touch this
 */
/* eslint-disable */
import type { ValidateFunction } from 'ajv'

/**
 * Top-level TechPort object representing a NASA technology project and its associated data.
 */
export interface Project {
    /**
     * Abbreviated name of the project.
     */
    acronym?: string
    /**
     * List of additional and cross-cutting technology areas associated with the project.
     */
    additionalTas?: TechnologyArea[]
    /**
     * Describes the benefits offered to NASA funded and planned missions, unfunded or planned missions, commercial space industry, and to the nation.
     */
    benefits?: string
    /**
     * List of document files or links to the project final report closeout documentation.
     */
    closeoutDocuments?: CloseoutDocument[]
    /**
     * The project closeout summary excerpt.
     */
    closeoutSummary?: string
    /**
     * Other government agencies, NASA Mission Directoratres, universities, or commercial entities performing contributing resources to this project.
     */
    coFundingPartners?: Organization[]
    /**
     * Names of the additional investigators who are scientists or engineers for this project.
     */
    coInvestigators?: CoInvestigator[]
    /**
     * A detailed description of the project.
     */
    description?: string
    /**
     * List of the NASA destinations the technology on this project helps achieve.
     */
    destinations?: Destination[]
    /**
     * The month and year the project is expected to complete its work.
     */
    endDate?: string
    /**
     * Unique identifier for the project.
     */
    id?: number
    /**
     * ISO 8601 full-date in the format YYYY-MM-DD describing the last time this project was updated.
     */
    lastUpdated?: string
    leadOrganization?: Organization
    /**
     * List of library items in the project library.
     */
    libraryItems?: LibraryItem[]
    /**
     * List of primary technolgy areas (from the NASA Technology Roadmap) associated with the project.
     */
    primaryTas?: TechnologyArea[]
    /**
     * Names of the Principal Investigators who are the lead scientists or engineers for this project.
     */
    principalInvestigators?: PrincipalInvestigator[]
    /**
     * Names of the Program Directors responsible for the management of this project.
     */
    programDirectors?: ProgramDirector[]
    /**
     * Names of the Program Managers responsible for the management of this project.
     */
    programManagers?: ProgramManager[]
    /**
     * Names of the Project Managers responsible for the management of this project.
     */
    projectManagers?: ProjectManager[]
    /**
     * The NASA Mission Directorate or Office that is the primary funding source for this project.
     */
    responsibleMissionDirectorateOrOffice?: string
    /**
     * The NASA program that is the primary funding source for this project.
     */
    responsibleProgram?: string
    /**
     * The month and year the project was authorized to proceed.
     */
    startDate?: string
    /**
     * Indicates whether the project is currently active, completed, or canceled.
     */
    status?: string
    /**
     * The supported mission type (Projected Mission, Planned Mission, or Pull).
     */
    supportedMissionType?: string
    /**
     * The supporting organizations for this project that are conducting work on the project.
     */
    supportingOrganizations?: Organization[]
    /**
     * The current technology maturity (technology readiness level) of the project.
     */
    technologyMaturityCurrent?: string
    /**
     * The estimated technology maturity (technology readiness level) of the project at its end.
     */
    technologyMaturityEnd?: string
    /**
     * The technology maturity (technology readiness level) of the project at its beginning.
     */
    technologyMaturityStart?: string
    /**
     * Title of the project.
     */
    title?: string
    /**
     * The URL for the associated website.
     */
    website?: string
    /**
     * States and territories with people performing work on this project.
     */
    workLocations?: WorkLocation[]
}

export const Project = {
    validate: require('./schemas/project.schema.js') as ValidateFunction<Project>,
    get schema() {
        return Project.validate.schema
    },
    is: (o: unknown): o is Project => Project.validate(o) === true,
} as const

export interface GetApiByResponse {
    id?: number
    lastUpdated?: string
}

export const GetApiByResponse = {
    validate: require('./schemas/get-api-by-response.schema.js') as ValidateFunction<GetApiByResponse>,
    get schema() {
        return GetApiByResponse.validate.schema
    },
    is: (o: unknown): o is GetApiByResponse => GetApiByResponse.validate(o) === true,
} as const

/**
 * The Technology Area for a given technology that corresponds to the NASA Technology Roadmap.
 */
export interface TechnologyArea {
    /**
     * The code identifier for the Technology Area.
     */
    code?: string
    /**
     * Unique identifier for the Technology Area.
     */
    id?: number
    /**
     * The name of the Technology Area.
     */
    name?: string
}

/**
 * Represents a file hyperlink or external hyperlink to a project closeout final report artifact.
 */
export type CloseoutDocument = string

/**
 * A NASA center/facility associated with an project.
 */
export interface Organization {
    /**
     * The acronym of the organization.
     */
    acronym?: string
    /**
     * The city in which the organization is located.
     */
    city?: string
    /**
     * The name of the organization.
     */
    name?: string
    /**
     * The state in which the organization is located.
     */
    state?: string
}

/**
 * The name of an investigator who is a scientist or engineer for an project.
 */
export type CoInvestigator = string

/**
 * Represents a destination towards which the technology on this project helps advance the Agency goals.
 */
export type Destination = string

/**
 * Represents a specific library item that is part of this project.
 */
export interface LibraryItem {
    /**
     * Date the library item was completed.
     */
    completionDate?: string
    /**
     * Description of the library item.
     */
    description?: string
    /**
     * External URL for the library item.
     */
    externalUrl?: string
    /**
     * List of files associated with the library item.
     */
    files?: File[]
    /**
     * Unique identifier for the library item.
     */
    id?: number
    /**
     * Publisher of the library item.
     */
    publishedBy?: string
    /**
     * Date the library item was published.
     */
    publishedDate?: string
    /**
     * Title of the library item
     */
    title?: string
    /**
     * Identifies the type of library item, e.g. Image
     */
    type?: string
}

/**
 * Represents a file associated with a library item.
 */
export interface File {
    /**
     * Unique identifier for the file.
     */
    id?: number
    /**
     * The size of the file in bytes.
     */
    size?: string
    /**
     * The TechPort URL at which the file is accessible for download.
     */
    url?: string
}

/**
 * The name of the Principal Investigator who is a lead scientist or engineer for an project.
 */
export type PrincipalInvestigator = string

/**
 * The name of a Program Director responsible for management of an project.
 */
export type ProgramDirector = string

/**
 * The name of a Program Manager responsible for management of an project.
 */
export type ProgramManager = string

/**
 * The name of a Project Manager responsible for management of an project.
 */
export type ProjectManager = string

/**
 * A state/territory where work on this project is performed.
 */
export type WorkLocation = string
