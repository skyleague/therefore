/**
 * Generated by @skyleague/therefore@v1.0.0-local
 * Do not manually touch this
 */
/* eslint-disable */

import { z } from 'zod'
import type { ZodType } from 'zod'

export const OtherModel = z.object({
    name: z.string().optional(),
})

export type BusinessRelationModel = {
    other?: z.infer<typeof OtherModel> | undefined
    relations?: z.infer<typeof BusinessRelationModel>[] | undefined
}
export const BusinessRelationModel: ZodType<BusinessRelationModel> = z.object({
    other: OtherModel.optional(),
    relations: z
        .lazy(() => BusinessRelationModel)
        .array()
        .optional(),
})

export type GetBusinessesResponse = z.infer<typeof GetBusinessesResponse>

export const GetBusinessesResponse = BusinessRelationModel.array()
