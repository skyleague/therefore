/* eslint-disable */
// @ts-nocheck
/**
 * Generated by Ajv https://ajv.js.org/guide/managing-schemas.html#standalone-validation-code
 */
"use strict";
/** @type {unknown} */
export const validate = validate10;export default validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","title":"ModelThatExtends","description":"This is a model that extends another model","allOf":[{"type":"object","description":"This is a model that extends another model","additionalProperties":true},{"$ref":"#/$defs/ModelWithString"},{"type":"object","properties":{"propExtendsA":{"type":"string"},"propExtendsB":{"$ref":"#/$defs/ModelWithString"}},"additionalProperties":true}],"$defs":{"ModelWithString":{"type":"object","description":"This is a model with one string property","properties":{"prop":{"type":"string","description":"This is a simple string property"}},"additionalProperties":true}}};const schema12 = {"type":"object","description":"This is a model with one string property","properties":{"prop":{"type":"string","description":"This is a simple string property"}},"additionalProperties":true};function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;const _errs0 = errors;if(errors === _errs0){if(data && typeof data == "object" && !Array.isArray(data)){}else {validate10.errors = [{instancePath,schemaPath:"#/allOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs0 === errors;if(valid0){const _errs3 = errors;const _errs4 = errors;if(errors === _errs4){if(data && typeof data == "object" && !Array.isArray(data)){if(data.prop !== undefined){if(typeof data.prop !== "string"){validate10.errors = [{instancePath:instancePath+"/prop",schemaPath:"#/$defs/ModelWithString/properties/prop/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}else {validate10.errors = [{instancePath,schemaPath:"#/$defs/ModelWithString/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs3 === errors;if(valid0){const _errs9 = errors;if(errors === _errs9){if(data && typeof data == "object" && !Array.isArray(data)){if(data.propExtendsA !== undefined){const _errs12 = errors;if(typeof data.propExtendsA !== "string"){validate10.errors = [{instancePath:instancePath+"/propExtendsA",schemaPath:"#/allOf/2/properties/propExtendsA/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs12 === errors;}else {var valid3 = true;}if(valid3){if(data.propExtendsB !== undefined){let data2 = data.propExtendsB;const _errs14 = errors;const _errs15 = errors;if(errors === _errs15){if(data2 && typeof data2 == "object" && !Array.isArray(data2)){if(data2.prop !== undefined){if(typeof data2.prop !== "string"){validate10.errors = [{instancePath:instancePath+"/propExtendsB/prop",schemaPath:"#/$defs/ModelWithString/properties/prop/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}else {validate10.errors = [{instancePath:instancePath+"/propExtendsB",schemaPath:"#/$defs/ModelWithString/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid3 = _errs14 === errors;}else {var valid3 = true;}}}else {validate10.errors = [{instancePath,schemaPath:"#/allOf/2/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs9 === errors;}}validate10.errors = vErrors;return errors === 0;};validate.schema=schema11;