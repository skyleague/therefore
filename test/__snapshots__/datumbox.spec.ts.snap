// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`output generation 1`] = `
[
  {
    "data": {
      "00016-000": {
        "referenceName": "{{00016-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "DocumentSimilarityRequest",
        "uniqueSymbolName": "{{00016-000:symbolName}}",
      },
      "00021-000": {
        "referenceName": "{{00021-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "EducationalDetectionRequest",
        "uniqueSymbolName": "{{00021-000:symbolName}}",
      },
      "00026-000": {
        "referenceName": "{{00026-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "GenderDetectionRequest",
        "uniqueSymbolName": "{{00026-000:symbolName}}",
      },
      "00033-000": {
        "referenceName": "{{00033-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "KeywordExtractionRequest",
        "uniqueSymbolName": "{{00033-000:symbolName}}",
      },
      "00038-000": {
        "referenceName": "{{00038-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "LanguageDetectionRequest",
        "uniqueSymbolName": "{{00038-000:symbolName}}",
      },
      "0004-000": {
        "referenceName": "{{0004-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "AdultContentDetectionRequest",
        "uniqueSymbolName": "{{0004-000:symbolName}}",
      },
      "00043-000": {
        "referenceName": "{{00043-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "ReadabilityAssessmentRequest",
        "uniqueSymbolName": "{{00043-000:symbolName}}",
      },
      "00048-000": {
        "referenceName": "{{00048-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SentimentAnalysisRequest",
        "uniqueSymbolName": "{{00048-000:symbolName}}",
      },
      "00053-000": {
        "referenceName": "{{00053-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SpamDetectionRequest",
        "uniqueSymbolName": "{{00053-000:symbolName}}",
      },
      "00058-000": {
        "referenceName": "{{00058-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SubjectivityAnalysisRequest",
        "uniqueSymbolName": "{{00058-000:symbolName}}",
      },
      "00063-000": {
        "referenceName": "{{00063-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TextExtractionRequest",
        "uniqueSymbolName": "{{00063-000:symbolName}}",
      },
      "00068-000": {
        "referenceName": "{{00068-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TopicClassificationRequest",
        "uniqueSymbolName": "{{00068-000:symbolName}}",
      },
      "00073-000": {
        "referenceName": "{{00073-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TwitterSentimentAnalysisRequest",
        "uniqueSymbolName": "{{00073-000:symbolName}}",
      },
      "00075-000": {
        "referenceName": "{{00075-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.ts",
        "symbolName": "PetStore",
        "uniqueSymbolName": "{{00075-000:symbolName}}",
      },
      "0009-000": {
        "referenceName": "{{0009-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "CommercialDetectionRequest",
        "uniqueSymbolName": "{{0009-000:symbolName}}",
      },
    },
    "prettify": true,
    "relativeSource": "./datumbox.schema",
    "targetPath": "examples/datumbox/datumbox.client.ts",
    "template": "/**
* Generated by @skyleague/therefore@v1.0.0-local
* Do not manually touch this
*/
/* eslint-disable */
import got from 'got'
import type { CancelableRequest, Got, Options, Response } from 'got'
import { AdultContentDetectionRequest, CommercialDetectionRequest, DocumentSimilarityRequest, EducationalDetectionRequest, GenderDetectionRequest, KeywordExtractionRequest, LanguageDetectionRequest, ReadabilityAssessmentRequest, SentimentAnalysisRequest, SpamDetectionRequest, SubjectivityAnalysisRequest, TextExtractionRequest, TopicClassificationRequest, TwitterSentimentAnalysisRequest } from './datumbox.client.type'


export class {{00075-000:symbolName}} {
    public client: Got

    public constructor(
    {
        prefixUrl = 'http://api.datumbox.com/',
        options,
    }: {
        prefixUrl?: string | 'http://api.datumbox.com/',
        options?: Options,
    } = {}) {
        this.client = got.extend(...[{ prefixUrl, throwHttpErrors: false }, options].filter((o): o is Options => o !== undefined))
    }


    /**
     * Classifies the Document as adult or noadult
     * 
     * The Adult Content Detection function classifies the documents as adult or noadult based on their context. It can be used to detect whether a document contains content unsuitable for minors.
     */
    public async adultContentDetection({body}: {body: {{0004-000:uniqueSymbolName}}})
    {
        this.validateRequestBody({{0004-000:symbolName}}, body)

        return this.client.post(\`1.0/AdultContentDetection.json\`, {
            form: body,
        })
    }

    /**
     * Classifies the Document as commercial or nocommercial
     * 
     * The Commercial Detection function labels the documents as commercial or non-commercial based on their keywords and expressions. It can be used to detect whether a website is commercial or not.
     */
    public async commercialDetection({body}: {body: {{0009-000:uniqueSymbolName}}})
    {
        this.validateRequestBody({{0009-000:symbolName}}, body)

        return this.client.post(\`1.0/CommercialDetection.json\`, {
            form: body,
        })
    }

    /**
     * Estimates the similarity between 2 Documents
     * 
     * The Document Similarity function estimates the degree of similarity between two documents. It can be used to detect duplicate webpages or detect plagiarism.
     */
    public async documentSimilarity({body}: {body: {{00016-000:uniqueSymbolName}}})
    {
        this.validateRequestBody({{00016-000:symbolName}}, body)

        return this.client.post(\`1.0/DocumentSimilarity.json\`, {
            form: body,
        })
    }

    /**
     * Classifies the Document as educational or noeducational
     * 
     * The Educational Detection function classifies the documents as educational or non-educational based on their context. It can be used to detect whether a website is educational or not.
     */
    public async educationalDetection({body}: {body: {{00021-000:uniqueSymbolName}}})
    {
        this.validateRequestBody({{00021-000:symbolName}}, body)

        return this.client.post(\`1.0/EducationalDetection.json\`, {
            form: body,
        })
    }

    /**
     * Gender Detection Service
     * 
     * The Gender Detection function identifies if a particular document is written-by or targets-to a man or a woman based on the context, the words and the idioms found in the text.
     */
    public async genderDetection({body}: {body: {{00026-000:uniqueSymbolName}}})
    {
        this.validateRequestBody({{00026-000:symbolName}}, body)

        return this.client.post(\`1.0/GenderDetection.json\`, {
            form: body,
        })
    }

    /**
     * Extracts the Keywords of the Document
     * 
     * The Keyword Extraction function enables you to extract from an arbitrary document all the keywords and word-combinations along with their occurrences in the text.
     */
    public async keywordExtraction({body}: {body: {{00033-000:uniqueSymbolName}}})
    {
        this.validateRequestBody({{00033-000:symbolName}}, body)

        return this.client.post(\`1.0/KeywordExtraction.json\`, {
            form: body,
        })
    }

    /**
     * Identifies the Language of the Document
     * 
     * The Language Detection function identifies the natural language of the given document based on its words and context. This classifier is able to detect 96 different languages.
     */
    public async languageDetection({body}: {body: {{00038-000:uniqueSymbolName}}})
    {
        this.validateRequestBody({{00038-000:symbolName}}, body)

        return this.client.post(\`1.0/LanguageDetection.json\`, {
            form: body,
        })
    }

    /**
     * Evaluates the Readability of the Document
     * 
     * The Readability Assessment function determines the degree of readability of a document based on its terms and idioms. The texts are classified as basic, intermediate and advanced depending their difficulty.
     */
    public async readabilityAssessment({body}: {body: {{00043-000:uniqueSymbolName}}})
    {
        this.validateRequestBody({{00043-000:symbolName}}, body)

        return this.client.post(\`1.0/ReadabilityAssessment.json\`, {
            form: body,
        })
    }

    /**
     * Identifies the Sentiment of the Document
     * 
     * The Sentiment Analysis function classifies documents as positive, negative or neutral (lack of sentiment) depending on whether they express a positive, negative or neutral opinion.
     */
    public async sentimentAnalysis({body}: {body: {{00048-000:uniqueSymbolName}}})
    {
        this.validateRequestBody({{00048-000:symbolName}}, body)

        return this.client.post(\`1.0/SentimentAnalysis.json\`, {
            form: body,
        })
    }

    /**
     * Classifies the Document as spam or nospam
     * 
     * The Spam Detection function labels documents as spam or nospam by taking into account their context. It can be used to filter out spam emails and comments.
     */
    public async spamDetection({body}: {body: {{00053-000:uniqueSymbolName}}})
    {
        this.validateRequestBody({{00053-000:symbolName}}, body)

        return this.client.post(\`1.0/SpamDetection.json\`, {
            form: body,
        })
    }

    /**
     * Classifies Document as Subjective or Objective
     * 
     * The Subjectivity Analysis function categorizes documents as subjective or objective based on their writing style. Texts that express personal opinions are labeled as subjective and the others as objective.
     */
    public async subjectivityAnalysis({body}: {body: {{00058-000:uniqueSymbolName}}})
    {
        this.validateRequestBody({{00058-000:symbolName}}, body)

        return this.client.post(\`1.0/SubjectivityAnalysis.json\`, {
            form: body,
        })
    }

    /**
     * Extracts the clear text from Webpage
     * 
     * The Text Extraction function enables you to extract the important information from a given webpage. Extracting the clear text of the documents is an important step before any other analysis.
     */
    public async textExtraction({body}: {body: {{00063-000:uniqueSymbolName}}})
    {
        this.validateRequestBody({{00063-000:symbolName}}, body)

        return this.client.post(\`1.0/TextExtraction.json\`, {
            form: body,
        })
    }

    /**
     * Identifies the Topic of the Document
     * 
     * The Topic Classification function assigns documents in 12 thematic categories based on their keywords, idioms and jargon. It can be used to identify the topic of the texts.
     */
    public async topicClassification({body}: {body: {{00068-000:uniqueSymbolName}}})
    {
        this.validateRequestBody({{00068-000:symbolName}}, body)

        return this.client.post(\`1.0/TopicClassification.json\`, {
            form: body,
        })
    }

    /**
     * Identifies the Sentiment of Twitter Messages
     * 
     * The Twitter Sentiment Analysis function allows you to perform Sentiment Analysis on Twitter. It classifies the tweets as positive, negative or neutral depending on their context.
     */
    public async twitterSentimentAnalysis({body}: {body: {{00073-000:uniqueSymbolName}}})
    {
        this.validateRequestBody({{00073-000:symbolName}}, body)

        return this.client.post(\`1.0/TwitterSentimentAnalysis.json\`, {
            form: body,
        })
    }

    public validateRequestBody<T>(schema: { is: (o: unknown) => o is T, assert: (o: unknown) => void}, body: T)
    {
        schema.assert(body)
        return body
    }
}

",
    "type": "typescript",
  },
  {
    "data": {
      "00016-000": {
        "referenceName": "{{00016-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "DocumentSimilarityRequest",
        "uniqueSymbolName": "{{00016-000:symbolName}}",
      },
      "00021-000": {
        "referenceName": "{{00021-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "EducationalDetectionRequest",
        "uniqueSymbolName": "{{00021-000:symbolName}}",
      },
      "00026-000": {
        "referenceName": "{{00026-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "GenderDetectionRequest",
        "uniqueSymbolName": "{{00026-000:symbolName}}",
      },
      "00033-000": {
        "referenceName": "{{00033-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "KeywordExtractionRequest",
        "uniqueSymbolName": "{{00033-000:symbolName}}",
      },
      "00038-000": {
        "referenceName": "{{00038-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "LanguageDetectionRequest",
        "uniqueSymbolName": "{{00038-000:symbolName}}",
      },
      "0004-000": {
        "referenceName": "{{0004-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "AdultContentDetectionRequest",
        "uniqueSymbolName": "{{0004-000:symbolName}}",
      },
      "00043-000": {
        "referenceName": "{{00043-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "ReadabilityAssessmentRequest",
        "uniqueSymbolName": "{{00043-000:symbolName}}",
      },
      "00048-000": {
        "referenceName": "{{00048-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SentimentAnalysisRequest",
        "uniqueSymbolName": "{{00048-000:symbolName}}",
      },
      "00053-000": {
        "referenceName": "{{00053-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SpamDetectionRequest",
        "uniqueSymbolName": "{{00053-000:symbolName}}",
      },
      "00058-000": {
        "referenceName": "{{00058-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SubjectivityAnalysisRequest",
        "uniqueSymbolName": "{{00058-000:symbolName}}",
      },
      "00063-000": {
        "referenceName": "{{00063-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TextExtractionRequest",
        "uniqueSymbolName": "{{00063-000:symbolName}}",
      },
      "00068-000": {
        "referenceName": "{{00068-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TopicClassificationRequest",
        "uniqueSymbolName": "{{00068-000:symbolName}}",
      },
      "00073-000": {
        "referenceName": "{{00073-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TwitterSentimentAnalysisRequest",
        "uniqueSymbolName": "{{00073-000:symbolName}}",
      },
      "00075-000": {
        "referenceName": "{{00075-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.ts",
        "symbolName": "PetStore",
        "uniqueSymbolName": "{{00075-000:symbolName}}",
      },
      "0009-000": {
        "referenceName": "{{0009-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "CommercialDetectionRequest",
        "uniqueSymbolName": "{{0009-000:symbolName}}",
      },
    },
    "prettify": true,
    "relativeSource": "./datumbox.schema",
    "targetPath": "examples/datumbox/datumbox.client.type.ts",
    "template": "/**
* Generated by @skyleague/therefore@v1.0.0-local
* Do not manually touch this
*/
/* eslint-disable */
import AjvValidator from 'ajv'
import type { ValidateFunction } from 'ajv'


export interface {{0004-000:symbolName}} {
    /**
     * Your API Key
     */
    api_key: string
    /**
     * The text that you want to analyze. It should not contain HTML tags.
     */
    text?: string
}

export const {{0004-000:symbolName}} = {
    validate: require('./schemas/adult-content-detection-request.schema.js') as ValidateFunction<{{0004-000:symbolName}}>,
    get schema() { return {{0004-000:symbolName}}.validate.schema},
    is: (o: unknown): o is {{0004-000:symbolName}} => {{0004-000:symbolName}}.validate(o) === true,
    assert: (o: unknown) => {
        if (!{{0004-000:symbolName}}.validate(o)) {
            throw new AjvValidator.ValidationError({{0004-000:symbolName}}.validate.errors ?? [])
        }
    },
} as const

export interface {{0009-000:symbolName}} {
    /**
     * Your API Key
     */
    api_key: string
    /**
     * The text that you want to analyze. It should not contain HTML tags.
     */
    text?: string
}

export const {{0009-000:symbolName}} = {
    validate: require('./schemas/commercial-detection-request.schema.js') as ValidateFunction<{{0009-000:symbolName}}>,
    get schema() { return {{0009-000:symbolName}}.validate.schema},
    is: (o: unknown): o is {{0009-000:symbolName}} => {{0009-000:symbolName}}.validate(o) === true,
    assert: (o: unknown) => {
        if (!{{0009-000:symbolName}}.validate(o)) {
            throw new AjvValidator.ValidationError({{0009-000:symbolName}}.validate.errors ?? [])
        }
    },
} as const

export interface {{00016-000:symbolName}} {
    /**
     * Your API Key
     */
    api_key: string
    /**
     * The second text. It should not contain HTML tags.
     */
    copy?: string
    /**
     * The first text. It should not contain HTML tags.
     */
    original?: string
}

export const {{00016-000:symbolName}} = {
    validate: require('./schemas/document-similarity-request.schema.js') as ValidateFunction<{{00016-000:symbolName}}>,
    get schema() { return {{00016-000:symbolName}}.validate.schema},
    is: (o: unknown): o is {{00016-000:symbolName}} => {{00016-000:symbolName}}.validate(o) === true,
    assert: (o: unknown) => {
        if (!{{00016-000:symbolName}}.validate(o)) {
            throw new AjvValidator.ValidationError({{00016-000:symbolName}}.validate.errors ?? [])
        }
    },
} as const

export interface {{00021-000:symbolName}} {
    /**
     * Your API Key
     */
    api_key: string
    /**
     * The text that you want to analyze. It should not contain HTML tags.
     */
    text?: string
}

export const {{00021-000:symbolName}} = {
    validate: require('./schemas/educational-detection-request.schema.js') as ValidateFunction<{{00021-000:symbolName}}>,
    get schema() { return {{00021-000:symbolName}}.validate.schema},
    is: (o: unknown): o is {{00021-000:symbolName}} => {{00021-000:symbolName}}.validate(o) === true,
    assert: (o: unknown) => {
        if (!{{00021-000:symbolName}}.validate(o)) {
            throw new AjvValidator.ValidationError({{00021-000:symbolName}}.validate.errors ?? [])
        }
    },
} as const

export interface {{00026-000:symbolName}} {
    /**
     * Your API Key
     */
    api_key: string
    /**
     * The text that you want to analyze. It should not contain HTML tags.
     */
    text?: string
}

export const {{00026-000:symbolName}} = {
    validate: require('./schemas/gender-detection-request.schema.js') as ValidateFunction<{{00026-000:symbolName}}>,
    get schema() { return {{00026-000:symbolName}}.validate.schema},
    is: (o: unknown): o is {{00026-000:symbolName}} => {{00026-000:symbolName}}.validate(o) === true,
    assert: (o: unknown) => {
        if (!{{00026-000:symbolName}}.validate(o)) {
            throw new AjvValidator.ValidationError({{00026-000:symbolName}}.validate.errors ?? [])
        }
    },
} as const

export interface {{00033-000:symbolName}} {
    /**
     * Your API Key
     */
    api_key: string
    /**
     * The number of keyword combinations (n-grams) that you wish to extract.
     */
    n?: number
    /**
     * The text that you want to analyze. It should not contain HTML tags.
     */
    text?: string
}

export const {{00033-000:symbolName}} = {
    validate: require('./schemas/keyword-extraction-request.schema.js') as ValidateFunction<{{00033-000:symbolName}}>,
    get schema() { return {{00033-000:symbolName}}.validate.schema},
    is: (o: unknown): o is {{00033-000:symbolName}} => {{00033-000:symbolName}}.validate(o) === true,
    assert: (o: unknown) => {
        if (!{{00033-000:symbolName}}.validate(o)) {
            throw new AjvValidator.ValidationError({{00033-000:symbolName}}.validate.errors ?? [])
        }
    },
} as const

export interface {{00038-000:symbolName}} {
    /**
     * Your API Key
     */
    api_key: string
    /**
     * The text that you want to analyze. It should not contain HTML tags.
     */
    text?: string
}

export const {{00038-000:symbolName}} = {
    validate: require('./schemas/language-detection-request.schema.js') as ValidateFunction<{{00038-000:symbolName}}>,
    get schema() { return {{00038-000:symbolName}}.validate.schema},
    is: (o: unknown): o is {{00038-000:symbolName}} => {{00038-000:symbolName}}.validate(o) === true,
    assert: (o: unknown) => {
        if (!{{00038-000:symbolName}}.validate(o)) {
            throw new AjvValidator.ValidationError({{00038-000:symbolName}}.validate.errors ?? [])
        }
    },
} as const

export interface {{00043-000:symbolName}} {
    /**
     * Your API Key
     */
    api_key: string
    /**
     * The text that you want to analyze. It should not contain HTML tags.
     */
    text?: string
}

export const {{00043-000:symbolName}} = {
    validate: require('./schemas/readability-assessment-request.schema.js') as ValidateFunction<{{00043-000:symbolName}}>,
    get schema() { return {{00043-000:symbolName}}.validate.schema},
    is: (o: unknown): o is {{00043-000:symbolName}} => {{00043-000:symbolName}}.validate(o) === true,
    assert: (o: unknown) => {
        if (!{{00043-000:symbolName}}.validate(o)) {
            throw new AjvValidator.ValidationError({{00043-000:symbolName}}.validate.errors ?? [])
        }
    },
} as const

export interface {{00048-000:symbolName}} {
    /**
     * Your API Key
     */
    api_key: string
    /**
     * The text that you want to analyze. It should not contain HTML tags.
     */
    text?: string
}

export const {{00048-000:symbolName}} = {
    validate: require('./schemas/sentiment-analysis-request.schema.js') as ValidateFunction<{{00048-000:symbolName}}>,
    get schema() { return {{00048-000:symbolName}}.validate.schema},
    is: (o: unknown): o is {{00048-000:symbolName}} => {{00048-000:symbolName}}.validate(o) === true,
    assert: (o: unknown) => {
        if (!{{00048-000:symbolName}}.validate(o)) {
            throw new AjvValidator.ValidationError({{00048-000:symbolName}}.validate.errors ?? [])
        }
    },
} as const

export interface {{00053-000:symbolName}} {
    /**
     * Your API Key
     */
    api_key: string
    /**
     * The text that you want to analyze. It should not contain HTML tags.
     */
    text?: string
}

export const {{00053-000:symbolName}} = {
    validate: require('./schemas/spam-detection-request.schema.js') as ValidateFunction<{{00053-000:symbolName}}>,
    get schema() { return {{00053-000:symbolName}}.validate.schema},
    is: (o: unknown): o is {{00053-000:symbolName}} => {{00053-000:symbolName}}.validate(o) === true,
    assert: (o: unknown) => {
        if (!{{00053-000:symbolName}}.validate(o)) {
            throw new AjvValidator.ValidationError({{00053-000:symbolName}}.validate.errors ?? [])
        }
    },
} as const

export interface {{00058-000:symbolName}} {
    /**
     * Your API Key
     */
    api_key: string
    /**
     * The text that you want to analyze. It should not contain HTML tags.
     */
    text?: string
}

export const {{00058-000:symbolName}} = {
    validate: require('./schemas/subjectivity-analysis-request.schema.js') as ValidateFunction<{{00058-000:symbolName}}>,
    get schema() { return {{00058-000:symbolName}}.validate.schema},
    is: (o: unknown): o is {{00058-000:symbolName}} => {{00058-000:symbolName}}.validate(o) === true,
    assert: (o: unknown) => {
        if (!{{00058-000:symbolName}}.validate(o)) {
            throw new AjvValidator.ValidationError({{00058-000:symbolName}}.validate.errors ?? [])
        }
    },
} as const

export interface {{00063-000:symbolName}} {
    /**
     * Your API Key
     */
    api_key: string
    /**
     * The HTML source of the webpage.
     */
    text?: string
}

export const {{00063-000:symbolName}} = {
    validate: require('./schemas/text-extraction-request.schema.js') as ValidateFunction<{{00063-000:symbolName}}>,
    get schema() { return {{00063-000:symbolName}}.validate.schema},
    is: (o: unknown): o is {{00063-000:symbolName}} => {{00063-000:symbolName}}.validate(o) === true,
    assert: (o: unknown) => {
        if (!{{00063-000:symbolName}}.validate(o)) {
            throw new AjvValidator.ValidationError({{00063-000:symbolName}}.validate.errors ?? [])
        }
    },
} as const

export interface {{00068-000:symbolName}} {
    /**
     * Your API Key
     */
    api_key: string
    /**
     * The text that you want to analyze. It should not contain HTML tags.
     */
    text?: string
}

export const {{00068-000:symbolName}} = {
    validate: require('./schemas/topic-classification-request.schema.js') as ValidateFunction<{{00068-000:symbolName}}>,
    get schema() { return {{00068-000:symbolName}}.validate.schema},
    is: (o: unknown): o is {{00068-000:symbolName}} => {{00068-000:symbolName}}.validate(o) === true,
    assert: (o: unknown) => {
        if (!{{00068-000:symbolName}}.validate(o)) {
            throw new AjvValidator.ValidationError({{00068-000:symbolName}}.validate.errors ?? [])
        }
    },
} as const

export interface {{00073-000:symbolName}} {
    /**
     * Your API Key
     */
    api_key: string
    /**
     * The text of the tweet that we evaluate.
     */
    text?: string
}

export const {{00073-000:symbolName}} = {
    validate: require('./schemas/twitter-sentiment-analysis-request.schema.js') as ValidateFunction<{{00073-000:symbolName}}>,
    get schema() { return {{00073-000:symbolName}}.validate.schema},
    is: (o: unknown): o is {{00073-000:symbolName}} => {{00073-000:symbolName}}.validate(o) === true,
    assert: (o: unknown) => {
        if (!{{00073-000:symbolName}}.validate(o)) {
            throw new AjvValidator.ValidationError({{00073-000:symbolName}}.validate.errors ?? [])
        }
    },
} as const

",
    "type": "typescript",
  },
  {
    "data": {
      "00016-000": {
        "referenceName": "{{00016-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "DocumentSimilarityRequest",
        "uniqueSymbolName": "{{00016-000:symbolName}}",
      },
      "00021-000": {
        "referenceName": "{{00021-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "EducationalDetectionRequest",
        "uniqueSymbolName": "{{00021-000:symbolName}}",
      },
      "00026-000": {
        "referenceName": "{{00026-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "GenderDetectionRequest",
        "uniqueSymbolName": "{{00026-000:symbolName}}",
      },
      "00033-000": {
        "referenceName": "{{00033-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "KeywordExtractionRequest",
        "uniqueSymbolName": "{{00033-000:symbolName}}",
      },
      "00038-000": {
        "referenceName": "{{00038-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "LanguageDetectionRequest",
        "uniqueSymbolName": "{{00038-000:symbolName}}",
      },
      "0004-000": {
        "referenceName": "{{0004-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "AdultContentDetectionRequest",
        "uniqueSymbolName": "{{0004-000:symbolName}}",
      },
      "00043-000": {
        "referenceName": "{{00043-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "ReadabilityAssessmentRequest",
        "uniqueSymbolName": "{{00043-000:symbolName}}",
      },
      "00048-000": {
        "referenceName": "{{00048-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SentimentAnalysisRequest",
        "uniqueSymbolName": "{{00048-000:symbolName}}",
      },
      "00053-000": {
        "referenceName": "{{00053-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SpamDetectionRequest",
        "uniqueSymbolName": "{{00053-000:symbolName}}",
      },
      "00058-000": {
        "referenceName": "{{00058-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SubjectivityAnalysisRequest",
        "uniqueSymbolName": "{{00058-000:symbolName}}",
      },
      "00063-000": {
        "referenceName": "{{00063-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TextExtractionRequest",
        "uniqueSymbolName": "{{00063-000:symbolName}}",
      },
      "00068-000": {
        "referenceName": "{{00068-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TopicClassificationRequest",
        "uniqueSymbolName": "{{00068-000:symbolName}}",
      },
      "00073-000": {
        "referenceName": "{{00073-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TwitterSentimentAnalysisRequest",
        "uniqueSymbolName": "{{00073-000:symbolName}}",
      },
      "00075-000": {
        "referenceName": "{{00075-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.ts",
        "symbolName": "PetStore",
        "uniqueSymbolName": "{{00075-000:symbolName}}",
      },
      "0009-000": {
        "referenceName": "{{0009-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "CommercialDetectionRequest",
        "uniqueSymbolName": "{{0009-000:symbolName}}",
      },
    },
    "prettify": false,
    "relativeSource": "./datumbox.schema",
    "targetPath": "examples/datumbox/schemas/adult-content-detection-request.schema.js",
    "template": "/**
 * Generated by @skyleague/therefore
 * eslint-disable
 */
"use strict";module.exports = validate10;module.exports.default = validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","title":"adultContentDetectionRequest","type":"object","properties":{"api_key":{"type":"string","title":"api_key","description":"Your API Key"},"text":{"type":"string","title":"text","description":"The text that you want to analyze. It should not contain HTML tags."}},"required":["api_key"],"additionalProperties":false};function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.api_key === undefined) && (missing0 = "api_key")){validate10.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs1 = errors;for(const key0 in data){if(!((key0 === "api_key") || (key0 === "text"))){validate10.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.api_key !== undefined){const _errs2 = errors;if(typeof data.api_key !== "string"){validate10.errors = [{instancePath:instancePath+"/api_key",schemaPath:"#/properties/api_key/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.text !== undefined){const _errs4 = errors;if(typeof data.text !== "string"){validate10.errors = [{instancePath:instancePath+"/text",schemaPath:"#/properties/text/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs4 === errors;}else {var valid0 = true;}}}}}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate10.errors = vErrors;return errors === 0;};validate10.schema=schema11;",
    "type": "validator",
  },
  {
    "data": {
      "00016-000": {
        "referenceName": "{{00016-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "DocumentSimilarityRequest",
        "uniqueSymbolName": "{{00016-000:symbolName}}",
      },
      "00021-000": {
        "referenceName": "{{00021-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "EducationalDetectionRequest",
        "uniqueSymbolName": "{{00021-000:symbolName}}",
      },
      "00026-000": {
        "referenceName": "{{00026-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "GenderDetectionRequest",
        "uniqueSymbolName": "{{00026-000:symbolName}}",
      },
      "00033-000": {
        "referenceName": "{{00033-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "KeywordExtractionRequest",
        "uniqueSymbolName": "{{00033-000:symbolName}}",
      },
      "00038-000": {
        "referenceName": "{{00038-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "LanguageDetectionRequest",
        "uniqueSymbolName": "{{00038-000:symbolName}}",
      },
      "0004-000": {
        "referenceName": "{{0004-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "AdultContentDetectionRequest",
        "uniqueSymbolName": "{{0004-000:symbolName}}",
      },
      "00043-000": {
        "referenceName": "{{00043-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "ReadabilityAssessmentRequest",
        "uniqueSymbolName": "{{00043-000:symbolName}}",
      },
      "00048-000": {
        "referenceName": "{{00048-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SentimentAnalysisRequest",
        "uniqueSymbolName": "{{00048-000:symbolName}}",
      },
      "00053-000": {
        "referenceName": "{{00053-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SpamDetectionRequest",
        "uniqueSymbolName": "{{00053-000:symbolName}}",
      },
      "00058-000": {
        "referenceName": "{{00058-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SubjectivityAnalysisRequest",
        "uniqueSymbolName": "{{00058-000:symbolName}}",
      },
      "00063-000": {
        "referenceName": "{{00063-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TextExtractionRequest",
        "uniqueSymbolName": "{{00063-000:symbolName}}",
      },
      "00068-000": {
        "referenceName": "{{00068-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TopicClassificationRequest",
        "uniqueSymbolName": "{{00068-000:symbolName}}",
      },
      "00073-000": {
        "referenceName": "{{00073-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TwitterSentimentAnalysisRequest",
        "uniqueSymbolName": "{{00073-000:symbolName}}",
      },
      "00075-000": {
        "referenceName": "{{00075-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.ts",
        "symbolName": "PetStore",
        "uniqueSymbolName": "{{00075-000:symbolName}}",
      },
      "0009-000": {
        "referenceName": "{{0009-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "CommercialDetectionRequest",
        "uniqueSymbolName": "{{0009-000:symbolName}}",
      },
    },
    "prettify": false,
    "relativeSource": "./datumbox.schema",
    "targetPath": "examples/datumbox/schemas/commercial-detection-request.schema.js",
    "template": "/**
 * Generated by @skyleague/therefore
 * eslint-disable
 */
"use strict";module.exports = validate10;module.exports.default = validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","title":"commercialDetectionRequest","type":"object","properties":{"api_key":{"type":"string","title":"api_key","description":"Your API Key"},"text":{"type":"string","title":"text","description":"The text that you want to analyze. It should not contain HTML tags."}},"required":["api_key"],"additionalProperties":false};function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.api_key === undefined) && (missing0 = "api_key")){validate10.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs1 = errors;for(const key0 in data){if(!((key0 === "api_key") || (key0 === "text"))){validate10.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.api_key !== undefined){const _errs2 = errors;if(typeof data.api_key !== "string"){validate10.errors = [{instancePath:instancePath+"/api_key",schemaPath:"#/properties/api_key/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.text !== undefined){const _errs4 = errors;if(typeof data.text !== "string"){validate10.errors = [{instancePath:instancePath+"/text",schemaPath:"#/properties/text/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs4 === errors;}else {var valid0 = true;}}}}}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate10.errors = vErrors;return errors === 0;};validate10.schema=schema11;",
    "type": "validator",
  },
  {
    "data": {
      "00016-000": {
        "referenceName": "{{00016-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "DocumentSimilarityRequest",
        "uniqueSymbolName": "{{00016-000:symbolName}}",
      },
      "00021-000": {
        "referenceName": "{{00021-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "EducationalDetectionRequest",
        "uniqueSymbolName": "{{00021-000:symbolName}}",
      },
      "00026-000": {
        "referenceName": "{{00026-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "GenderDetectionRequest",
        "uniqueSymbolName": "{{00026-000:symbolName}}",
      },
      "00033-000": {
        "referenceName": "{{00033-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "KeywordExtractionRequest",
        "uniqueSymbolName": "{{00033-000:symbolName}}",
      },
      "00038-000": {
        "referenceName": "{{00038-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "LanguageDetectionRequest",
        "uniqueSymbolName": "{{00038-000:symbolName}}",
      },
      "0004-000": {
        "referenceName": "{{0004-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "AdultContentDetectionRequest",
        "uniqueSymbolName": "{{0004-000:symbolName}}",
      },
      "00043-000": {
        "referenceName": "{{00043-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "ReadabilityAssessmentRequest",
        "uniqueSymbolName": "{{00043-000:symbolName}}",
      },
      "00048-000": {
        "referenceName": "{{00048-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SentimentAnalysisRequest",
        "uniqueSymbolName": "{{00048-000:symbolName}}",
      },
      "00053-000": {
        "referenceName": "{{00053-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SpamDetectionRequest",
        "uniqueSymbolName": "{{00053-000:symbolName}}",
      },
      "00058-000": {
        "referenceName": "{{00058-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SubjectivityAnalysisRequest",
        "uniqueSymbolName": "{{00058-000:symbolName}}",
      },
      "00063-000": {
        "referenceName": "{{00063-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TextExtractionRequest",
        "uniqueSymbolName": "{{00063-000:symbolName}}",
      },
      "00068-000": {
        "referenceName": "{{00068-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TopicClassificationRequest",
        "uniqueSymbolName": "{{00068-000:symbolName}}",
      },
      "00073-000": {
        "referenceName": "{{00073-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TwitterSentimentAnalysisRequest",
        "uniqueSymbolName": "{{00073-000:symbolName}}",
      },
      "00075-000": {
        "referenceName": "{{00075-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.ts",
        "symbolName": "PetStore",
        "uniqueSymbolName": "{{00075-000:symbolName}}",
      },
      "0009-000": {
        "referenceName": "{{0009-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "CommercialDetectionRequest",
        "uniqueSymbolName": "{{0009-000:symbolName}}",
      },
    },
    "prettify": false,
    "relativeSource": "./datumbox.schema",
    "targetPath": "examples/datumbox/schemas/document-similarity-request.schema.js",
    "template": "/**
 * Generated by @skyleague/therefore
 * eslint-disable
 */
"use strict";module.exports = validate10;module.exports.default = validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","title":"documentSimilarityRequest","type":"object","properties":{"api_key":{"type":"string","title":"api_key","description":"Your API Key"},"copy":{"type":"string","title":"copy","description":"The second text. It should not contain HTML tags."},"original":{"type":"string","title":"original","description":"The first text. It should not contain HTML tags."}},"required":["api_key"],"additionalProperties":false};function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.api_key === undefined) && (missing0 = "api_key")){validate10.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs1 = errors;for(const key0 in data){if(!(((key0 === "api_key") || (key0 === "copy")) || (key0 === "original"))){validate10.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.api_key !== undefined){const _errs2 = errors;if(typeof data.api_key !== "string"){validate10.errors = [{instancePath:instancePath+"/api_key",schemaPath:"#/properties/api_key/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.copy !== undefined){const _errs4 = errors;if(typeof data.copy !== "string"){validate10.errors = [{instancePath:instancePath+"/copy",schemaPath:"#/properties/copy/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs4 === errors;}else {var valid0 = true;}if(valid0){if(data.original !== undefined){const _errs6 = errors;if(typeof data.original !== "string"){validate10.errors = [{instancePath:instancePath+"/original",schemaPath:"#/properties/original/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs6 === errors;}else {var valid0 = true;}}}}}}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate10.errors = vErrors;return errors === 0;};validate10.schema=schema11;",
    "type": "validator",
  },
  {
    "data": {
      "00016-000": {
        "referenceName": "{{00016-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "DocumentSimilarityRequest",
        "uniqueSymbolName": "{{00016-000:symbolName}}",
      },
      "00021-000": {
        "referenceName": "{{00021-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "EducationalDetectionRequest",
        "uniqueSymbolName": "{{00021-000:symbolName}}",
      },
      "00026-000": {
        "referenceName": "{{00026-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "GenderDetectionRequest",
        "uniqueSymbolName": "{{00026-000:symbolName}}",
      },
      "00033-000": {
        "referenceName": "{{00033-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "KeywordExtractionRequest",
        "uniqueSymbolName": "{{00033-000:symbolName}}",
      },
      "00038-000": {
        "referenceName": "{{00038-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "LanguageDetectionRequest",
        "uniqueSymbolName": "{{00038-000:symbolName}}",
      },
      "0004-000": {
        "referenceName": "{{0004-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "AdultContentDetectionRequest",
        "uniqueSymbolName": "{{0004-000:symbolName}}",
      },
      "00043-000": {
        "referenceName": "{{00043-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "ReadabilityAssessmentRequest",
        "uniqueSymbolName": "{{00043-000:symbolName}}",
      },
      "00048-000": {
        "referenceName": "{{00048-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SentimentAnalysisRequest",
        "uniqueSymbolName": "{{00048-000:symbolName}}",
      },
      "00053-000": {
        "referenceName": "{{00053-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SpamDetectionRequest",
        "uniqueSymbolName": "{{00053-000:symbolName}}",
      },
      "00058-000": {
        "referenceName": "{{00058-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SubjectivityAnalysisRequest",
        "uniqueSymbolName": "{{00058-000:symbolName}}",
      },
      "00063-000": {
        "referenceName": "{{00063-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TextExtractionRequest",
        "uniqueSymbolName": "{{00063-000:symbolName}}",
      },
      "00068-000": {
        "referenceName": "{{00068-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TopicClassificationRequest",
        "uniqueSymbolName": "{{00068-000:symbolName}}",
      },
      "00073-000": {
        "referenceName": "{{00073-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TwitterSentimentAnalysisRequest",
        "uniqueSymbolName": "{{00073-000:symbolName}}",
      },
      "00075-000": {
        "referenceName": "{{00075-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.ts",
        "symbolName": "PetStore",
        "uniqueSymbolName": "{{00075-000:symbolName}}",
      },
      "0009-000": {
        "referenceName": "{{0009-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "CommercialDetectionRequest",
        "uniqueSymbolName": "{{0009-000:symbolName}}",
      },
    },
    "prettify": false,
    "relativeSource": "./datumbox.schema",
    "targetPath": "examples/datumbox/schemas/educational-detection-request.schema.js",
    "template": "/**
 * Generated by @skyleague/therefore
 * eslint-disable
 */
"use strict";module.exports = validate10;module.exports.default = validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","title":"educationalDetectionRequest","type":"object","properties":{"api_key":{"type":"string","title":"api_key","description":"Your API Key"},"text":{"type":"string","title":"text","description":"The text that you want to analyze. It should not contain HTML tags."}},"required":["api_key"],"additionalProperties":false};function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.api_key === undefined) && (missing0 = "api_key")){validate10.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs1 = errors;for(const key0 in data){if(!((key0 === "api_key") || (key0 === "text"))){validate10.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.api_key !== undefined){const _errs2 = errors;if(typeof data.api_key !== "string"){validate10.errors = [{instancePath:instancePath+"/api_key",schemaPath:"#/properties/api_key/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.text !== undefined){const _errs4 = errors;if(typeof data.text !== "string"){validate10.errors = [{instancePath:instancePath+"/text",schemaPath:"#/properties/text/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs4 === errors;}else {var valid0 = true;}}}}}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate10.errors = vErrors;return errors === 0;};validate10.schema=schema11;",
    "type": "validator",
  },
  {
    "data": {
      "00016-000": {
        "referenceName": "{{00016-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "DocumentSimilarityRequest",
        "uniqueSymbolName": "{{00016-000:symbolName}}",
      },
      "00021-000": {
        "referenceName": "{{00021-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "EducationalDetectionRequest",
        "uniqueSymbolName": "{{00021-000:symbolName}}",
      },
      "00026-000": {
        "referenceName": "{{00026-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "GenderDetectionRequest",
        "uniqueSymbolName": "{{00026-000:symbolName}}",
      },
      "00033-000": {
        "referenceName": "{{00033-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "KeywordExtractionRequest",
        "uniqueSymbolName": "{{00033-000:symbolName}}",
      },
      "00038-000": {
        "referenceName": "{{00038-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "LanguageDetectionRequest",
        "uniqueSymbolName": "{{00038-000:symbolName}}",
      },
      "0004-000": {
        "referenceName": "{{0004-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "AdultContentDetectionRequest",
        "uniqueSymbolName": "{{0004-000:symbolName}}",
      },
      "00043-000": {
        "referenceName": "{{00043-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "ReadabilityAssessmentRequest",
        "uniqueSymbolName": "{{00043-000:symbolName}}",
      },
      "00048-000": {
        "referenceName": "{{00048-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SentimentAnalysisRequest",
        "uniqueSymbolName": "{{00048-000:symbolName}}",
      },
      "00053-000": {
        "referenceName": "{{00053-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SpamDetectionRequest",
        "uniqueSymbolName": "{{00053-000:symbolName}}",
      },
      "00058-000": {
        "referenceName": "{{00058-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SubjectivityAnalysisRequest",
        "uniqueSymbolName": "{{00058-000:symbolName}}",
      },
      "00063-000": {
        "referenceName": "{{00063-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TextExtractionRequest",
        "uniqueSymbolName": "{{00063-000:symbolName}}",
      },
      "00068-000": {
        "referenceName": "{{00068-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TopicClassificationRequest",
        "uniqueSymbolName": "{{00068-000:symbolName}}",
      },
      "00073-000": {
        "referenceName": "{{00073-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TwitterSentimentAnalysisRequest",
        "uniqueSymbolName": "{{00073-000:symbolName}}",
      },
      "00075-000": {
        "referenceName": "{{00075-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.ts",
        "symbolName": "PetStore",
        "uniqueSymbolName": "{{00075-000:symbolName}}",
      },
      "0009-000": {
        "referenceName": "{{0009-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "CommercialDetectionRequest",
        "uniqueSymbolName": "{{0009-000:symbolName}}",
      },
    },
    "prettify": false,
    "relativeSource": "./datumbox.schema",
    "targetPath": "examples/datumbox/schemas/gender-detection-request.schema.js",
    "template": "/**
 * Generated by @skyleague/therefore
 * eslint-disable
 */
"use strict";module.exports = validate10;module.exports.default = validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","title":"genderDetectionRequest","type":"object","properties":{"api_key":{"type":"string","title":"api_key","description":"Your API Key"},"text":{"type":"string","title":"text","description":"The text that you want to analyze. It should not contain HTML tags."}},"required":["api_key"],"additionalProperties":false};function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.api_key === undefined) && (missing0 = "api_key")){validate10.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs1 = errors;for(const key0 in data){if(!((key0 === "api_key") || (key0 === "text"))){validate10.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.api_key !== undefined){const _errs2 = errors;if(typeof data.api_key !== "string"){validate10.errors = [{instancePath:instancePath+"/api_key",schemaPath:"#/properties/api_key/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.text !== undefined){const _errs4 = errors;if(typeof data.text !== "string"){validate10.errors = [{instancePath:instancePath+"/text",schemaPath:"#/properties/text/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs4 === errors;}else {var valid0 = true;}}}}}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate10.errors = vErrors;return errors === 0;};validate10.schema=schema11;",
    "type": "validator",
  },
  {
    "data": {
      "00016-000": {
        "referenceName": "{{00016-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "DocumentSimilarityRequest",
        "uniqueSymbolName": "{{00016-000:symbolName}}",
      },
      "00021-000": {
        "referenceName": "{{00021-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "EducationalDetectionRequest",
        "uniqueSymbolName": "{{00021-000:symbolName}}",
      },
      "00026-000": {
        "referenceName": "{{00026-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "GenderDetectionRequest",
        "uniqueSymbolName": "{{00026-000:symbolName}}",
      },
      "00033-000": {
        "referenceName": "{{00033-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "KeywordExtractionRequest",
        "uniqueSymbolName": "{{00033-000:symbolName}}",
      },
      "00038-000": {
        "referenceName": "{{00038-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "LanguageDetectionRequest",
        "uniqueSymbolName": "{{00038-000:symbolName}}",
      },
      "0004-000": {
        "referenceName": "{{0004-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "AdultContentDetectionRequest",
        "uniqueSymbolName": "{{0004-000:symbolName}}",
      },
      "00043-000": {
        "referenceName": "{{00043-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "ReadabilityAssessmentRequest",
        "uniqueSymbolName": "{{00043-000:symbolName}}",
      },
      "00048-000": {
        "referenceName": "{{00048-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SentimentAnalysisRequest",
        "uniqueSymbolName": "{{00048-000:symbolName}}",
      },
      "00053-000": {
        "referenceName": "{{00053-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SpamDetectionRequest",
        "uniqueSymbolName": "{{00053-000:symbolName}}",
      },
      "00058-000": {
        "referenceName": "{{00058-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SubjectivityAnalysisRequest",
        "uniqueSymbolName": "{{00058-000:symbolName}}",
      },
      "00063-000": {
        "referenceName": "{{00063-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TextExtractionRequest",
        "uniqueSymbolName": "{{00063-000:symbolName}}",
      },
      "00068-000": {
        "referenceName": "{{00068-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TopicClassificationRequest",
        "uniqueSymbolName": "{{00068-000:symbolName}}",
      },
      "00073-000": {
        "referenceName": "{{00073-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TwitterSentimentAnalysisRequest",
        "uniqueSymbolName": "{{00073-000:symbolName}}",
      },
      "00075-000": {
        "referenceName": "{{00075-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.ts",
        "symbolName": "PetStore",
        "uniqueSymbolName": "{{00075-000:symbolName}}",
      },
      "0009-000": {
        "referenceName": "{{0009-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "CommercialDetectionRequest",
        "uniqueSymbolName": "{{0009-000:symbolName}}",
      },
    },
    "prettify": false,
    "relativeSource": "./datumbox.schema",
    "targetPath": "examples/datumbox/schemas/keyword-extraction-request.schema.js",
    "template": "/**
 * Generated by @skyleague/therefore
 * eslint-disable
 */
"use strict";module.exports = validate10;module.exports.default = validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","title":"keywordExtractionRequest","type":"object","properties":{"api_key":{"type":"string","title":"api_key","description":"Your API Key"},"n":{"type":"integer","title":"n","description":"The number of keyword combinations (n-grams) that you wish to extract.","maximum":5,"minimum":1},"text":{"type":"string","title":"text","description":"The text that you want to analyze. It should not contain HTML tags."}},"required":["api_key"],"additionalProperties":false};function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.api_key === undefined) && (missing0 = "api_key")){validate10.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs1 = errors;for(const key0 in data){if(!(((key0 === "api_key") || (key0 === "n")) || (key0 === "text"))){validate10.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.api_key !== undefined){const _errs2 = errors;if(typeof data.api_key !== "string"){validate10.errors = [{instancePath:instancePath+"/api_key",schemaPath:"#/properties/api_key/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.n !== undefined){let data1 = data.n;const _errs4 = errors;if(!(((typeof data1 == "number") && (!(data1 % 1) && !isNaN(data1))) && (isFinite(data1)))){validate10.errors = [{instancePath:instancePath+"/n",schemaPath:"#/properties/n/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}if(errors === _errs4){if((typeof data1 == "number") && (isFinite(data1))){if(data1 > 5 || isNaN(data1)){validate10.errors = [{instancePath:instancePath+"/n",schemaPath:"#/properties/n/maximum",keyword:"maximum",params:{comparison: "<=", limit: 5},message:"must be <= 5"}];return false;}else {if(data1 < 1 || isNaN(data1)){validate10.errors = [{instancePath:instancePath+"/n",schemaPath:"#/properties/n/minimum",keyword:"minimum",params:{comparison: ">=", limit: 1},message:"must be >= 1"}];return false;}}}}var valid0 = _errs4 === errors;}else {var valid0 = true;}if(valid0){if(data.text !== undefined){const _errs6 = errors;if(typeof data.text !== "string"){validate10.errors = [{instancePath:instancePath+"/text",schemaPath:"#/properties/text/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs6 === errors;}else {var valid0 = true;}}}}}}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate10.errors = vErrors;return errors === 0;};validate10.schema=schema11;",
    "type": "validator",
  },
  {
    "data": {
      "00016-000": {
        "referenceName": "{{00016-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "DocumentSimilarityRequest",
        "uniqueSymbolName": "{{00016-000:symbolName}}",
      },
      "00021-000": {
        "referenceName": "{{00021-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "EducationalDetectionRequest",
        "uniqueSymbolName": "{{00021-000:symbolName}}",
      },
      "00026-000": {
        "referenceName": "{{00026-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "GenderDetectionRequest",
        "uniqueSymbolName": "{{00026-000:symbolName}}",
      },
      "00033-000": {
        "referenceName": "{{00033-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "KeywordExtractionRequest",
        "uniqueSymbolName": "{{00033-000:symbolName}}",
      },
      "00038-000": {
        "referenceName": "{{00038-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "LanguageDetectionRequest",
        "uniqueSymbolName": "{{00038-000:symbolName}}",
      },
      "0004-000": {
        "referenceName": "{{0004-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "AdultContentDetectionRequest",
        "uniqueSymbolName": "{{0004-000:symbolName}}",
      },
      "00043-000": {
        "referenceName": "{{00043-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "ReadabilityAssessmentRequest",
        "uniqueSymbolName": "{{00043-000:symbolName}}",
      },
      "00048-000": {
        "referenceName": "{{00048-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SentimentAnalysisRequest",
        "uniqueSymbolName": "{{00048-000:symbolName}}",
      },
      "00053-000": {
        "referenceName": "{{00053-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SpamDetectionRequest",
        "uniqueSymbolName": "{{00053-000:symbolName}}",
      },
      "00058-000": {
        "referenceName": "{{00058-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SubjectivityAnalysisRequest",
        "uniqueSymbolName": "{{00058-000:symbolName}}",
      },
      "00063-000": {
        "referenceName": "{{00063-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TextExtractionRequest",
        "uniqueSymbolName": "{{00063-000:symbolName}}",
      },
      "00068-000": {
        "referenceName": "{{00068-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TopicClassificationRequest",
        "uniqueSymbolName": "{{00068-000:symbolName}}",
      },
      "00073-000": {
        "referenceName": "{{00073-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TwitterSentimentAnalysisRequest",
        "uniqueSymbolName": "{{00073-000:symbolName}}",
      },
      "00075-000": {
        "referenceName": "{{00075-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.ts",
        "symbolName": "PetStore",
        "uniqueSymbolName": "{{00075-000:symbolName}}",
      },
      "0009-000": {
        "referenceName": "{{0009-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "CommercialDetectionRequest",
        "uniqueSymbolName": "{{0009-000:symbolName}}",
      },
    },
    "prettify": false,
    "relativeSource": "./datumbox.schema",
    "targetPath": "examples/datumbox/schemas/language-detection-request.schema.js",
    "template": "/**
 * Generated by @skyleague/therefore
 * eslint-disable
 */
"use strict";module.exports = validate10;module.exports.default = validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","title":"languageDetectionRequest","type":"object","properties":{"api_key":{"type":"string","title":"api_key","description":"Your API Key"},"text":{"type":"string","title":"text","description":"The text that you want to analyze. It should not contain HTML tags."}},"required":["api_key"],"additionalProperties":false};function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.api_key === undefined) && (missing0 = "api_key")){validate10.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs1 = errors;for(const key0 in data){if(!((key0 === "api_key") || (key0 === "text"))){validate10.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.api_key !== undefined){const _errs2 = errors;if(typeof data.api_key !== "string"){validate10.errors = [{instancePath:instancePath+"/api_key",schemaPath:"#/properties/api_key/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.text !== undefined){const _errs4 = errors;if(typeof data.text !== "string"){validate10.errors = [{instancePath:instancePath+"/text",schemaPath:"#/properties/text/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs4 === errors;}else {var valid0 = true;}}}}}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate10.errors = vErrors;return errors === 0;};validate10.schema=schema11;",
    "type": "validator",
  },
  {
    "data": {
      "00016-000": {
        "referenceName": "{{00016-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "DocumentSimilarityRequest",
        "uniqueSymbolName": "{{00016-000:symbolName}}",
      },
      "00021-000": {
        "referenceName": "{{00021-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "EducationalDetectionRequest",
        "uniqueSymbolName": "{{00021-000:symbolName}}",
      },
      "00026-000": {
        "referenceName": "{{00026-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "GenderDetectionRequest",
        "uniqueSymbolName": "{{00026-000:symbolName}}",
      },
      "00033-000": {
        "referenceName": "{{00033-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "KeywordExtractionRequest",
        "uniqueSymbolName": "{{00033-000:symbolName}}",
      },
      "00038-000": {
        "referenceName": "{{00038-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "LanguageDetectionRequest",
        "uniqueSymbolName": "{{00038-000:symbolName}}",
      },
      "0004-000": {
        "referenceName": "{{0004-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "AdultContentDetectionRequest",
        "uniqueSymbolName": "{{0004-000:symbolName}}",
      },
      "00043-000": {
        "referenceName": "{{00043-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "ReadabilityAssessmentRequest",
        "uniqueSymbolName": "{{00043-000:symbolName}}",
      },
      "00048-000": {
        "referenceName": "{{00048-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SentimentAnalysisRequest",
        "uniqueSymbolName": "{{00048-000:symbolName}}",
      },
      "00053-000": {
        "referenceName": "{{00053-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SpamDetectionRequest",
        "uniqueSymbolName": "{{00053-000:symbolName}}",
      },
      "00058-000": {
        "referenceName": "{{00058-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SubjectivityAnalysisRequest",
        "uniqueSymbolName": "{{00058-000:symbolName}}",
      },
      "00063-000": {
        "referenceName": "{{00063-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TextExtractionRequest",
        "uniqueSymbolName": "{{00063-000:symbolName}}",
      },
      "00068-000": {
        "referenceName": "{{00068-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TopicClassificationRequest",
        "uniqueSymbolName": "{{00068-000:symbolName}}",
      },
      "00073-000": {
        "referenceName": "{{00073-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TwitterSentimentAnalysisRequest",
        "uniqueSymbolName": "{{00073-000:symbolName}}",
      },
      "00075-000": {
        "referenceName": "{{00075-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.ts",
        "symbolName": "PetStore",
        "uniqueSymbolName": "{{00075-000:symbolName}}",
      },
      "0009-000": {
        "referenceName": "{{0009-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "CommercialDetectionRequest",
        "uniqueSymbolName": "{{0009-000:symbolName}}",
      },
    },
    "prettify": false,
    "relativeSource": "./datumbox.schema",
    "targetPath": "examples/datumbox/schemas/readability-assessment-request.schema.js",
    "template": "/**
 * Generated by @skyleague/therefore
 * eslint-disable
 */
"use strict";module.exports = validate10;module.exports.default = validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","title":"readabilityAssessmentRequest","type":"object","properties":{"api_key":{"type":"string","title":"api_key","description":"Your API Key"},"text":{"type":"string","title":"text","description":"The text that you want to analyze. It should not contain HTML tags."}},"required":["api_key"],"additionalProperties":false};function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.api_key === undefined) && (missing0 = "api_key")){validate10.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs1 = errors;for(const key0 in data){if(!((key0 === "api_key") || (key0 === "text"))){validate10.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.api_key !== undefined){const _errs2 = errors;if(typeof data.api_key !== "string"){validate10.errors = [{instancePath:instancePath+"/api_key",schemaPath:"#/properties/api_key/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.text !== undefined){const _errs4 = errors;if(typeof data.text !== "string"){validate10.errors = [{instancePath:instancePath+"/text",schemaPath:"#/properties/text/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs4 === errors;}else {var valid0 = true;}}}}}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate10.errors = vErrors;return errors === 0;};validate10.schema=schema11;",
    "type": "validator",
  },
  {
    "data": {
      "00016-000": {
        "referenceName": "{{00016-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "DocumentSimilarityRequest",
        "uniqueSymbolName": "{{00016-000:symbolName}}",
      },
      "00021-000": {
        "referenceName": "{{00021-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "EducationalDetectionRequest",
        "uniqueSymbolName": "{{00021-000:symbolName}}",
      },
      "00026-000": {
        "referenceName": "{{00026-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "GenderDetectionRequest",
        "uniqueSymbolName": "{{00026-000:symbolName}}",
      },
      "00033-000": {
        "referenceName": "{{00033-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "KeywordExtractionRequest",
        "uniqueSymbolName": "{{00033-000:symbolName}}",
      },
      "00038-000": {
        "referenceName": "{{00038-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "LanguageDetectionRequest",
        "uniqueSymbolName": "{{00038-000:symbolName}}",
      },
      "0004-000": {
        "referenceName": "{{0004-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "AdultContentDetectionRequest",
        "uniqueSymbolName": "{{0004-000:symbolName}}",
      },
      "00043-000": {
        "referenceName": "{{00043-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "ReadabilityAssessmentRequest",
        "uniqueSymbolName": "{{00043-000:symbolName}}",
      },
      "00048-000": {
        "referenceName": "{{00048-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SentimentAnalysisRequest",
        "uniqueSymbolName": "{{00048-000:symbolName}}",
      },
      "00053-000": {
        "referenceName": "{{00053-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SpamDetectionRequest",
        "uniqueSymbolName": "{{00053-000:symbolName}}",
      },
      "00058-000": {
        "referenceName": "{{00058-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SubjectivityAnalysisRequest",
        "uniqueSymbolName": "{{00058-000:symbolName}}",
      },
      "00063-000": {
        "referenceName": "{{00063-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TextExtractionRequest",
        "uniqueSymbolName": "{{00063-000:symbolName}}",
      },
      "00068-000": {
        "referenceName": "{{00068-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TopicClassificationRequest",
        "uniqueSymbolName": "{{00068-000:symbolName}}",
      },
      "00073-000": {
        "referenceName": "{{00073-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TwitterSentimentAnalysisRequest",
        "uniqueSymbolName": "{{00073-000:symbolName}}",
      },
      "00075-000": {
        "referenceName": "{{00075-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.ts",
        "symbolName": "PetStore",
        "uniqueSymbolName": "{{00075-000:symbolName}}",
      },
      "0009-000": {
        "referenceName": "{{0009-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "CommercialDetectionRequest",
        "uniqueSymbolName": "{{0009-000:symbolName}}",
      },
    },
    "prettify": false,
    "relativeSource": "./datumbox.schema",
    "targetPath": "examples/datumbox/schemas/sentiment-analysis-request.schema.js",
    "template": "/**
 * Generated by @skyleague/therefore
 * eslint-disable
 */
"use strict";module.exports = validate10;module.exports.default = validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","title":"sentimentAnalysisRequest","type":"object","properties":{"api_key":{"type":"string","title":"api_key","description":"Your API Key"},"text":{"type":"string","title":"text","description":"The text that you want to analyze. It should not contain HTML tags."}},"required":["api_key"],"additionalProperties":false};function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.api_key === undefined) && (missing0 = "api_key")){validate10.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs1 = errors;for(const key0 in data){if(!((key0 === "api_key") || (key0 === "text"))){validate10.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.api_key !== undefined){const _errs2 = errors;if(typeof data.api_key !== "string"){validate10.errors = [{instancePath:instancePath+"/api_key",schemaPath:"#/properties/api_key/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.text !== undefined){const _errs4 = errors;if(typeof data.text !== "string"){validate10.errors = [{instancePath:instancePath+"/text",schemaPath:"#/properties/text/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs4 === errors;}else {var valid0 = true;}}}}}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate10.errors = vErrors;return errors === 0;};validate10.schema=schema11;",
    "type": "validator",
  },
  {
    "data": {
      "00016-000": {
        "referenceName": "{{00016-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "DocumentSimilarityRequest",
        "uniqueSymbolName": "{{00016-000:symbolName}}",
      },
      "00021-000": {
        "referenceName": "{{00021-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "EducationalDetectionRequest",
        "uniqueSymbolName": "{{00021-000:symbolName}}",
      },
      "00026-000": {
        "referenceName": "{{00026-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "GenderDetectionRequest",
        "uniqueSymbolName": "{{00026-000:symbolName}}",
      },
      "00033-000": {
        "referenceName": "{{00033-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "KeywordExtractionRequest",
        "uniqueSymbolName": "{{00033-000:symbolName}}",
      },
      "00038-000": {
        "referenceName": "{{00038-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "LanguageDetectionRequest",
        "uniqueSymbolName": "{{00038-000:symbolName}}",
      },
      "0004-000": {
        "referenceName": "{{0004-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "AdultContentDetectionRequest",
        "uniqueSymbolName": "{{0004-000:symbolName}}",
      },
      "00043-000": {
        "referenceName": "{{00043-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "ReadabilityAssessmentRequest",
        "uniqueSymbolName": "{{00043-000:symbolName}}",
      },
      "00048-000": {
        "referenceName": "{{00048-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SentimentAnalysisRequest",
        "uniqueSymbolName": "{{00048-000:symbolName}}",
      },
      "00053-000": {
        "referenceName": "{{00053-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SpamDetectionRequest",
        "uniqueSymbolName": "{{00053-000:symbolName}}",
      },
      "00058-000": {
        "referenceName": "{{00058-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SubjectivityAnalysisRequest",
        "uniqueSymbolName": "{{00058-000:symbolName}}",
      },
      "00063-000": {
        "referenceName": "{{00063-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TextExtractionRequest",
        "uniqueSymbolName": "{{00063-000:symbolName}}",
      },
      "00068-000": {
        "referenceName": "{{00068-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TopicClassificationRequest",
        "uniqueSymbolName": "{{00068-000:symbolName}}",
      },
      "00073-000": {
        "referenceName": "{{00073-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TwitterSentimentAnalysisRequest",
        "uniqueSymbolName": "{{00073-000:symbolName}}",
      },
      "00075-000": {
        "referenceName": "{{00075-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.ts",
        "symbolName": "PetStore",
        "uniqueSymbolName": "{{00075-000:symbolName}}",
      },
      "0009-000": {
        "referenceName": "{{0009-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "CommercialDetectionRequest",
        "uniqueSymbolName": "{{0009-000:symbolName}}",
      },
    },
    "prettify": false,
    "relativeSource": "./datumbox.schema",
    "targetPath": "examples/datumbox/schemas/spam-detection-request.schema.js",
    "template": "/**
 * Generated by @skyleague/therefore
 * eslint-disable
 */
"use strict";module.exports = validate10;module.exports.default = validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","title":"spamDetectionRequest","type":"object","properties":{"api_key":{"type":"string","title":"api_key","description":"Your API Key"},"text":{"type":"string","title":"text","description":"The text that you want to analyze. It should not contain HTML tags."}},"required":["api_key"],"additionalProperties":false};function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.api_key === undefined) && (missing0 = "api_key")){validate10.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs1 = errors;for(const key0 in data){if(!((key0 === "api_key") || (key0 === "text"))){validate10.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.api_key !== undefined){const _errs2 = errors;if(typeof data.api_key !== "string"){validate10.errors = [{instancePath:instancePath+"/api_key",schemaPath:"#/properties/api_key/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.text !== undefined){const _errs4 = errors;if(typeof data.text !== "string"){validate10.errors = [{instancePath:instancePath+"/text",schemaPath:"#/properties/text/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs4 === errors;}else {var valid0 = true;}}}}}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate10.errors = vErrors;return errors === 0;};validate10.schema=schema11;",
    "type": "validator",
  },
  {
    "data": {
      "00016-000": {
        "referenceName": "{{00016-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "DocumentSimilarityRequest",
        "uniqueSymbolName": "{{00016-000:symbolName}}",
      },
      "00021-000": {
        "referenceName": "{{00021-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "EducationalDetectionRequest",
        "uniqueSymbolName": "{{00021-000:symbolName}}",
      },
      "00026-000": {
        "referenceName": "{{00026-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "GenderDetectionRequest",
        "uniqueSymbolName": "{{00026-000:symbolName}}",
      },
      "00033-000": {
        "referenceName": "{{00033-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "KeywordExtractionRequest",
        "uniqueSymbolName": "{{00033-000:symbolName}}",
      },
      "00038-000": {
        "referenceName": "{{00038-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "LanguageDetectionRequest",
        "uniqueSymbolName": "{{00038-000:symbolName}}",
      },
      "0004-000": {
        "referenceName": "{{0004-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "AdultContentDetectionRequest",
        "uniqueSymbolName": "{{0004-000:symbolName}}",
      },
      "00043-000": {
        "referenceName": "{{00043-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "ReadabilityAssessmentRequest",
        "uniqueSymbolName": "{{00043-000:symbolName}}",
      },
      "00048-000": {
        "referenceName": "{{00048-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SentimentAnalysisRequest",
        "uniqueSymbolName": "{{00048-000:symbolName}}",
      },
      "00053-000": {
        "referenceName": "{{00053-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SpamDetectionRequest",
        "uniqueSymbolName": "{{00053-000:symbolName}}",
      },
      "00058-000": {
        "referenceName": "{{00058-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SubjectivityAnalysisRequest",
        "uniqueSymbolName": "{{00058-000:symbolName}}",
      },
      "00063-000": {
        "referenceName": "{{00063-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TextExtractionRequest",
        "uniqueSymbolName": "{{00063-000:symbolName}}",
      },
      "00068-000": {
        "referenceName": "{{00068-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TopicClassificationRequest",
        "uniqueSymbolName": "{{00068-000:symbolName}}",
      },
      "00073-000": {
        "referenceName": "{{00073-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TwitterSentimentAnalysisRequest",
        "uniqueSymbolName": "{{00073-000:symbolName}}",
      },
      "00075-000": {
        "referenceName": "{{00075-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.ts",
        "symbolName": "PetStore",
        "uniqueSymbolName": "{{00075-000:symbolName}}",
      },
      "0009-000": {
        "referenceName": "{{0009-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "CommercialDetectionRequest",
        "uniqueSymbolName": "{{0009-000:symbolName}}",
      },
    },
    "prettify": false,
    "relativeSource": "./datumbox.schema",
    "targetPath": "examples/datumbox/schemas/subjectivity-analysis-request.schema.js",
    "template": "/**
 * Generated by @skyleague/therefore
 * eslint-disable
 */
"use strict";module.exports = validate10;module.exports.default = validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","title":"subjectivityAnalysisRequest","type":"object","properties":{"api_key":{"type":"string","title":"api_key","description":"Your API Key"},"text":{"type":"string","title":"text","description":"The text that you want to analyze. It should not contain HTML tags."}},"required":["api_key"],"additionalProperties":false};function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.api_key === undefined) && (missing0 = "api_key")){validate10.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs1 = errors;for(const key0 in data){if(!((key0 === "api_key") || (key0 === "text"))){validate10.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.api_key !== undefined){const _errs2 = errors;if(typeof data.api_key !== "string"){validate10.errors = [{instancePath:instancePath+"/api_key",schemaPath:"#/properties/api_key/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.text !== undefined){const _errs4 = errors;if(typeof data.text !== "string"){validate10.errors = [{instancePath:instancePath+"/text",schemaPath:"#/properties/text/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs4 === errors;}else {var valid0 = true;}}}}}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate10.errors = vErrors;return errors === 0;};validate10.schema=schema11;",
    "type": "validator",
  },
  {
    "data": {
      "00016-000": {
        "referenceName": "{{00016-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "DocumentSimilarityRequest",
        "uniqueSymbolName": "{{00016-000:symbolName}}",
      },
      "00021-000": {
        "referenceName": "{{00021-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "EducationalDetectionRequest",
        "uniqueSymbolName": "{{00021-000:symbolName}}",
      },
      "00026-000": {
        "referenceName": "{{00026-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "GenderDetectionRequest",
        "uniqueSymbolName": "{{00026-000:symbolName}}",
      },
      "00033-000": {
        "referenceName": "{{00033-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "KeywordExtractionRequest",
        "uniqueSymbolName": "{{00033-000:symbolName}}",
      },
      "00038-000": {
        "referenceName": "{{00038-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "LanguageDetectionRequest",
        "uniqueSymbolName": "{{00038-000:symbolName}}",
      },
      "0004-000": {
        "referenceName": "{{0004-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "AdultContentDetectionRequest",
        "uniqueSymbolName": "{{0004-000:symbolName}}",
      },
      "00043-000": {
        "referenceName": "{{00043-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "ReadabilityAssessmentRequest",
        "uniqueSymbolName": "{{00043-000:symbolName}}",
      },
      "00048-000": {
        "referenceName": "{{00048-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SentimentAnalysisRequest",
        "uniqueSymbolName": "{{00048-000:symbolName}}",
      },
      "00053-000": {
        "referenceName": "{{00053-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SpamDetectionRequest",
        "uniqueSymbolName": "{{00053-000:symbolName}}",
      },
      "00058-000": {
        "referenceName": "{{00058-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SubjectivityAnalysisRequest",
        "uniqueSymbolName": "{{00058-000:symbolName}}",
      },
      "00063-000": {
        "referenceName": "{{00063-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TextExtractionRequest",
        "uniqueSymbolName": "{{00063-000:symbolName}}",
      },
      "00068-000": {
        "referenceName": "{{00068-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TopicClassificationRequest",
        "uniqueSymbolName": "{{00068-000:symbolName}}",
      },
      "00073-000": {
        "referenceName": "{{00073-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TwitterSentimentAnalysisRequest",
        "uniqueSymbolName": "{{00073-000:symbolName}}",
      },
      "00075-000": {
        "referenceName": "{{00075-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.ts",
        "symbolName": "PetStore",
        "uniqueSymbolName": "{{00075-000:symbolName}}",
      },
      "0009-000": {
        "referenceName": "{{0009-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "CommercialDetectionRequest",
        "uniqueSymbolName": "{{0009-000:symbolName}}",
      },
    },
    "prettify": false,
    "relativeSource": "./datumbox.schema",
    "targetPath": "examples/datumbox/schemas/text-extraction-request.schema.js",
    "template": "/**
 * Generated by @skyleague/therefore
 * eslint-disable
 */
"use strict";module.exports = validate10;module.exports.default = validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","title":"textExtractionRequest","type":"object","properties":{"api_key":{"type":"string","title":"api_key","description":"Your API Key"},"text":{"type":"string","title":"text","description":"The HTML source of the webpage."}},"required":["api_key"],"additionalProperties":false};function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.api_key === undefined) && (missing0 = "api_key")){validate10.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs1 = errors;for(const key0 in data){if(!((key0 === "api_key") || (key0 === "text"))){validate10.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.api_key !== undefined){const _errs2 = errors;if(typeof data.api_key !== "string"){validate10.errors = [{instancePath:instancePath+"/api_key",schemaPath:"#/properties/api_key/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.text !== undefined){const _errs4 = errors;if(typeof data.text !== "string"){validate10.errors = [{instancePath:instancePath+"/text",schemaPath:"#/properties/text/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs4 === errors;}else {var valid0 = true;}}}}}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate10.errors = vErrors;return errors === 0;};validate10.schema=schema11;",
    "type": "validator",
  },
  {
    "data": {
      "00016-000": {
        "referenceName": "{{00016-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "DocumentSimilarityRequest",
        "uniqueSymbolName": "{{00016-000:symbolName}}",
      },
      "00021-000": {
        "referenceName": "{{00021-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "EducationalDetectionRequest",
        "uniqueSymbolName": "{{00021-000:symbolName}}",
      },
      "00026-000": {
        "referenceName": "{{00026-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "GenderDetectionRequest",
        "uniqueSymbolName": "{{00026-000:symbolName}}",
      },
      "00033-000": {
        "referenceName": "{{00033-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "KeywordExtractionRequest",
        "uniqueSymbolName": "{{00033-000:symbolName}}",
      },
      "00038-000": {
        "referenceName": "{{00038-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "LanguageDetectionRequest",
        "uniqueSymbolName": "{{00038-000:symbolName}}",
      },
      "0004-000": {
        "referenceName": "{{0004-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "AdultContentDetectionRequest",
        "uniqueSymbolName": "{{0004-000:symbolName}}",
      },
      "00043-000": {
        "referenceName": "{{00043-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "ReadabilityAssessmentRequest",
        "uniqueSymbolName": "{{00043-000:symbolName}}",
      },
      "00048-000": {
        "referenceName": "{{00048-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SentimentAnalysisRequest",
        "uniqueSymbolName": "{{00048-000:symbolName}}",
      },
      "00053-000": {
        "referenceName": "{{00053-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SpamDetectionRequest",
        "uniqueSymbolName": "{{00053-000:symbolName}}",
      },
      "00058-000": {
        "referenceName": "{{00058-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SubjectivityAnalysisRequest",
        "uniqueSymbolName": "{{00058-000:symbolName}}",
      },
      "00063-000": {
        "referenceName": "{{00063-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TextExtractionRequest",
        "uniqueSymbolName": "{{00063-000:symbolName}}",
      },
      "00068-000": {
        "referenceName": "{{00068-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TopicClassificationRequest",
        "uniqueSymbolName": "{{00068-000:symbolName}}",
      },
      "00073-000": {
        "referenceName": "{{00073-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TwitterSentimentAnalysisRequest",
        "uniqueSymbolName": "{{00073-000:symbolName}}",
      },
      "00075-000": {
        "referenceName": "{{00075-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.ts",
        "symbolName": "PetStore",
        "uniqueSymbolName": "{{00075-000:symbolName}}",
      },
      "0009-000": {
        "referenceName": "{{0009-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "CommercialDetectionRequest",
        "uniqueSymbolName": "{{0009-000:symbolName}}",
      },
    },
    "prettify": false,
    "relativeSource": "./datumbox.schema",
    "targetPath": "examples/datumbox/schemas/topic-classification-request.schema.js",
    "template": "/**
 * Generated by @skyleague/therefore
 * eslint-disable
 */
"use strict";module.exports = validate10;module.exports.default = validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","title":"topicClassificationRequest","type":"object","properties":{"api_key":{"type":"string","title":"api_key","description":"Your API Key"},"text":{"type":"string","title":"text","description":"The text that you want to analyze. It should not contain HTML tags."}},"required":["api_key"],"additionalProperties":false};function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.api_key === undefined) && (missing0 = "api_key")){validate10.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs1 = errors;for(const key0 in data){if(!((key0 === "api_key") || (key0 === "text"))){validate10.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.api_key !== undefined){const _errs2 = errors;if(typeof data.api_key !== "string"){validate10.errors = [{instancePath:instancePath+"/api_key",schemaPath:"#/properties/api_key/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.text !== undefined){const _errs4 = errors;if(typeof data.text !== "string"){validate10.errors = [{instancePath:instancePath+"/text",schemaPath:"#/properties/text/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs4 === errors;}else {var valid0 = true;}}}}}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate10.errors = vErrors;return errors === 0;};validate10.schema=schema11;",
    "type": "validator",
  },
  {
    "data": {
      "00016-000": {
        "referenceName": "{{00016-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "DocumentSimilarityRequest",
        "uniqueSymbolName": "{{00016-000:symbolName}}",
      },
      "00021-000": {
        "referenceName": "{{00021-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "EducationalDetectionRequest",
        "uniqueSymbolName": "{{00021-000:symbolName}}",
      },
      "00026-000": {
        "referenceName": "{{00026-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "GenderDetectionRequest",
        "uniqueSymbolName": "{{00026-000:symbolName}}",
      },
      "00033-000": {
        "referenceName": "{{00033-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "KeywordExtractionRequest",
        "uniqueSymbolName": "{{00033-000:symbolName}}",
      },
      "00038-000": {
        "referenceName": "{{00038-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "LanguageDetectionRequest",
        "uniqueSymbolName": "{{00038-000:symbolName}}",
      },
      "0004-000": {
        "referenceName": "{{0004-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "AdultContentDetectionRequest",
        "uniqueSymbolName": "{{0004-000:symbolName}}",
      },
      "00043-000": {
        "referenceName": "{{00043-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "ReadabilityAssessmentRequest",
        "uniqueSymbolName": "{{00043-000:symbolName}}",
      },
      "00048-000": {
        "referenceName": "{{00048-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SentimentAnalysisRequest",
        "uniqueSymbolName": "{{00048-000:symbolName}}",
      },
      "00053-000": {
        "referenceName": "{{00053-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SpamDetectionRequest",
        "uniqueSymbolName": "{{00053-000:symbolName}}",
      },
      "00058-000": {
        "referenceName": "{{00058-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SubjectivityAnalysisRequest",
        "uniqueSymbolName": "{{00058-000:symbolName}}",
      },
      "00063-000": {
        "referenceName": "{{00063-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TextExtractionRequest",
        "uniqueSymbolName": "{{00063-000:symbolName}}",
      },
      "00068-000": {
        "referenceName": "{{00068-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TopicClassificationRequest",
        "uniqueSymbolName": "{{00068-000:symbolName}}",
      },
      "00073-000": {
        "referenceName": "{{00073-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TwitterSentimentAnalysisRequest",
        "uniqueSymbolName": "{{00073-000:symbolName}}",
      },
      "00075-000": {
        "referenceName": "{{00075-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.ts",
        "symbolName": "PetStore",
        "uniqueSymbolName": "{{00075-000:symbolName}}",
      },
      "0009-000": {
        "referenceName": "{{0009-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "CommercialDetectionRequest",
        "uniqueSymbolName": "{{0009-000:symbolName}}",
      },
    },
    "prettify": false,
    "relativeSource": "./datumbox.schema",
    "targetPath": "examples/datumbox/schemas/twitter-sentiment-analysis-request.schema.js",
    "template": "/**
 * Generated by @skyleague/therefore
 * eslint-disable
 */
"use strict";module.exports = validate10;module.exports.default = validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","title":"twitterSentimentAnalysisRequest","type":"object","properties":{"api_key":{"type":"string","title":"api_key","description":"Your API Key"},"text":{"type":"string","title":"text","description":"The text of the tweet that we evaluate."}},"required":["api_key"],"additionalProperties":false};function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.api_key === undefined) && (missing0 = "api_key")){validate10.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs1 = errors;for(const key0 in data){if(!((key0 === "api_key") || (key0 === "text"))){validate10.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.api_key !== undefined){const _errs2 = errors;if(typeof data.api_key !== "string"){validate10.errors = [{instancePath:instancePath+"/api_key",schemaPath:"#/properties/api_key/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.text !== undefined){const _errs4 = errors;if(typeof data.text !== "string"){validate10.errors = [{instancePath:instancePath+"/text",schemaPath:"#/properties/text/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs4 === errors;}else {var valid0 = true;}}}}}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate10.errors = vErrors;return errors === 0;};validate10.schema=schema11;",
    "type": "validator",
  },
]
`;
