// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`output generation 1`] = `
[
  {
    "data": {
      "00014-000": {
        "referenceName": "{{00014-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "DocumentSimilarityRequest",
        "uniqueSymbolName": "{{00014-000:symbolName}}",
      },
      "00018-000": {
        "referenceName": "{{00018-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "EducationalDetectionRequest",
        "uniqueSymbolName": "{{00018-000:symbolName}}",
      },
      "00022-000": {
        "referenceName": "{{00022-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "GenderDetectionRequest",
        "uniqueSymbolName": "{{00022-000:symbolName}}",
      },
      "00028-000": {
        "referenceName": "{{00028-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "KeywordExtractionRequest",
        "uniqueSymbolName": "{{00028-000:symbolName}}",
      },
      "00032-000": {
        "referenceName": "{{00032-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "LanguageDetectionRequest",
        "uniqueSymbolName": "{{00032-000:symbolName}}",
      },
      "00036-000": {
        "referenceName": "{{00036-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "ReadabilityAssessmentRequest",
        "uniqueSymbolName": "{{00036-000:symbolName}}",
      },
      "0004-000": {
        "referenceName": "{{0004-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "AdultContentDetectionRequest",
        "uniqueSymbolName": "{{0004-000:symbolName}}",
      },
      "00040-000": {
        "referenceName": "{{00040-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SentimentAnalysisRequest",
        "uniqueSymbolName": "{{00040-000:symbolName}}",
      },
      "00044-000": {
        "referenceName": "{{00044-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SpamDetectionRequest",
        "uniqueSymbolName": "{{00044-000:symbolName}}",
      },
      "00048-000": {
        "referenceName": "{{00048-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SubjectivityAnalysisRequest",
        "uniqueSymbolName": "{{00048-000:symbolName}}",
      },
      "00052-000": {
        "referenceName": "{{00052-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TextExtractionRequest",
        "uniqueSymbolName": "{{00052-000:symbolName}}",
      },
      "00056-000": {
        "referenceName": "{{00056-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TopicClassificationRequest",
        "uniqueSymbolName": "{{00056-000:symbolName}}",
      },
      "00060-000": {
        "referenceName": "{{00060-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TwitterSentimentAnalysisRequest",
        "uniqueSymbolName": "{{00060-000:symbolName}}",
      },
      "00061-000": {
        "referenceName": "{{00061-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.ts",
        "symbolName": "PetStore",
        "uniqueSymbolName": "{{00061-000:symbolName}}",
      },
      "0008-000": {
        "referenceName": "{{0008-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "CommercialDetectionRequest",
        "uniqueSymbolName": "{{0008-000:symbolName}}",
      },
    },
    "prettify": true,
    "relativeSource": "./datumbox.schema",
    "targetPath": "examples/datumbox/datumbox.client.ts",
    "template": "/**
* Generated by @skyleague/therefore@v1.0.0-local
* Do not manually touch this
*/
/* eslint-disable */
import got from 'got'
import type { CancelableRequest, Got, Options, Response } from 'got'
import type { ValidateFunction, ErrorObject } from 'ajv'
import {IncomingHttpHeaders} from 'http'
import { AdultContentDetectionRequest, CommercialDetectionRequest, DocumentSimilarityRequest, EducationalDetectionRequest, GenderDetectionRequest, KeywordExtractionRequest, LanguageDetectionRequest, ReadabilityAssessmentRequest, SentimentAnalysisRequest, SpamDetectionRequest, SubjectivityAnalysisRequest, TextExtractionRequest, TopicClassificationRequest, TwitterSentimentAnalysisRequest } from './datumbox.client.type'


export class {{00061-000:symbolName}} {
    public client: Got

    public constructor(
    {
        prefixUrl = 'http://api.datumbox.com/',
        options,
    }: {
        prefixUrl?: string | 'http://api.datumbox.com/',
        options?: Options,
    } = {}) {
        this.client = got.extend(...[{ prefixUrl, throwHttpErrors: false }, options].filter((o): o is Options => o !== undefined))
    }


    /**
     * Classifies the Document as adult or noadult
     * 
     * The Adult Content Detection function classifies the documents as adult or noadult based on their context. It can be used to detect whether a document contains content unsuitable for minors.
     */
    public async adultContentDetection({body}: {body: {{0004-000:uniqueSymbolName}}})
    {
        this.validateRequestBody({{0004-000:symbolName}}, body)

        return this.awaitResponse(this.client.post(\`1.0/AdultContentDetection.json\`, {
            form: body,
        }), {
            200: {is: (x: unknown): x is string => true},
        })
    }

    /**
     * Classifies the Document as commercial or nocommercial
     * 
     * The Commercial Detection function labels the documents as commercial or non-commercial based on their keywords and expressions. It can be used to detect whether a website is commercial or not.
     */
    public async commercialDetection({body}: {body: {{0008-000:uniqueSymbolName}}})
    {
        this.validateRequestBody({{0008-000:symbolName}}, body)

        return this.awaitResponse(this.client.post(\`1.0/CommercialDetection.json\`, {
            form: body,
        }), {
            200: {is: (x: unknown): x is string => true},
        })
    }

    /**
     * Estimates the similarity between 2 Documents
     * 
     * The Document Similarity function estimates the degree of similarity between two documents. It can be used to detect duplicate webpages or detect plagiarism.
     */
    public async documentSimilarity({body}: {body: {{00014-000:uniqueSymbolName}}})
    {
        this.validateRequestBody({{00014-000:symbolName}}, body)

        return this.awaitResponse(this.client.post(\`1.0/DocumentSimilarity.json\`, {
            form: body,
        }), {
            200: {is: (x: unknown): x is string => true},
        })
    }

    /**
     * Classifies the Document as educational or noeducational
     * 
     * The Educational Detection function classifies the documents as educational or non-educational based on their context. It can be used to detect whether a website is educational or not.
     */
    public async educationalDetection({body}: {body: {{00018-000:uniqueSymbolName}}})
    {
        this.validateRequestBody({{00018-000:symbolName}}, body)

        return this.awaitResponse(this.client.post(\`1.0/EducationalDetection.json\`, {
            form: body,
        }), {
            200: {is: (x: unknown): x is string => true},
        })
    }

    /**
     * Gender Detection Service
     * 
     * The Gender Detection function identifies if a particular document is written-by or targets-to a man or a woman based on the context, the words and the idioms found in the text.
     */
    public async genderDetection({body}: {body: {{00022-000:uniqueSymbolName}}})
    {
        this.validateRequestBody({{00022-000:symbolName}}, body)

        return this.awaitResponse(this.client.post(\`1.0/GenderDetection.json\`, {
            form: body,
        }), {
            200: {is: (x: unknown): x is string => true},
        })
    }

    /**
     * Extracts the Keywords of the Document
     * 
     * The Keyword Extraction function enables you to extract from an arbitrary document all the keywords and word-combinations along with their occurrences in the text.
     */
    public async keywordExtraction({body}: {body: {{00028-000:uniqueSymbolName}}})
    {
        this.validateRequestBody({{00028-000:symbolName}}, body)

        return this.awaitResponse(this.client.post(\`1.0/KeywordExtraction.json\`, {
            form: body,
        }), {
            200: {is: (x: unknown): x is string => true},
        })
    }

    /**
     * Identifies the Language of the Document
     * 
     * The Language Detection function identifies the natural language of the given document based on its words and context. This classifier is able to detect 96 different languages.
     */
    public async languageDetection({body}: {body: {{00032-000:uniqueSymbolName}}})
    {
        this.validateRequestBody({{00032-000:symbolName}}, body)

        return this.awaitResponse(this.client.post(\`1.0/LanguageDetection.json\`, {
            form: body,
        }), {
            200: {is: (x: unknown): x is string => true},
        })
    }

    /**
     * Evaluates the Readability of the Document
     * 
     * The Readability Assessment function determines the degree of readability of a document based on its terms and idioms. The texts are classified as basic, intermediate and advanced depending their difficulty.
     */
    public async readabilityAssessment({body}: {body: {{00036-000:uniqueSymbolName}}})
    {
        this.validateRequestBody({{00036-000:symbolName}}, body)

        return this.awaitResponse(this.client.post(\`1.0/ReadabilityAssessment.json\`, {
            form: body,
        }), {
            200: {is: (x: unknown): x is string => true},
        })
    }

    /**
     * Identifies the Sentiment of the Document
     * 
     * The Sentiment Analysis function classifies documents as positive, negative or neutral (lack of sentiment) depending on whether they express a positive, negative or neutral opinion.
     */
    public async sentimentAnalysis({body}: {body: {{00040-000:uniqueSymbolName}}})
    {
        this.validateRequestBody({{00040-000:symbolName}}, body)

        return this.awaitResponse(this.client.post(\`1.0/SentimentAnalysis.json\`, {
            form: body,
        }), {
            200: {is: (x: unknown): x is string => true},
        })
    }

    /**
     * Classifies the Document as spam or nospam
     * 
     * The Spam Detection function labels documents as spam or nospam by taking into account their context. It can be used to filter out spam emails and comments.
     */
    public async spamDetection({body}: {body: {{00044-000:uniqueSymbolName}}})
    {
        this.validateRequestBody({{00044-000:symbolName}}, body)

        return this.awaitResponse(this.client.post(\`1.0/SpamDetection.json\`, {
            form: body,
        }), {
            200: {is: (x: unknown): x is string => true},
        })
    }

    /**
     * Classifies Document as Subjective or Objective
     * 
     * The Subjectivity Analysis function categorizes documents as subjective or objective based on their writing style. Texts that express personal opinions are labeled as subjective and the others as objective.
     */
    public async subjectivityAnalysis({body}: {body: {{00048-000:uniqueSymbolName}}})
    {
        this.validateRequestBody({{00048-000:symbolName}}, body)

        return this.awaitResponse(this.client.post(\`1.0/SubjectivityAnalysis.json\`, {
            form: body,
        }), {
            200: {is: (x: unknown): x is string => true},
        })
    }

    /**
     * Extracts the clear text from Webpage
     * 
     * The Text Extraction function enables you to extract the important information from a given webpage. Extracting the clear text of the documents is an important step before any other analysis.
     */
    public async textExtraction({body}: {body: {{00052-000:uniqueSymbolName}}})
    {
        this.validateRequestBody({{00052-000:symbolName}}, body)

        return this.awaitResponse(this.client.post(\`1.0/TextExtraction.json\`, {
            form: body,
        }), {
            200: {is: (x: unknown): x is string => true},
        })
    }

    /**
     * Identifies the Topic of the Document
     * 
     * The Topic Classification function assigns documents in 12 thematic categories based on their keywords, idioms and jargon. It can be used to identify the topic of the texts.
     */
    public async topicClassification({body}: {body: {{00056-000:uniqueSymbolName}}})
    {
        this.validateRequestBody({{00056-000:symbolName}}, body)

        return this.awaitResponse(this.client.post(\`1.0/TopicClassification.json\`, {
            form: body,
        }), {
            200: {is: (x: unknown): x is string => true},
        })
    }

    /**
     * Identifies the Sentiment of Twitter Messages
     * 
     * The Twitter Sentiment Analysis function allows you to perform Sentiment Analysis on Twitter. It classifies the tweets as positive, negative or neutral depending on their context.
     */
    public async twitterSentimentAnalysis({body}: {body: {{00060-000:uniqueSymbolName}}})
    {
        this.validateRequestBody({{00060-000:symbolName}}, body)

        return this.awaitResponse(this.client.post(\`1.0/TwitterSentimentAnalysis.json\`, {
            form: body,
        }), {
            200: {is: (x: unknown): x is string => true},
        })
    }

    public validateRequestBody<T>(schema: { is: (o: unknown) => o is T, assert: (o: unknown) => void}, body: T)
    {
        schema.assert(body)
        return body
    }

    public async awaitResponse<T, S extends Record<PropertyKey, undefined | { is: (o: unknown) => o is T; validate?: ValidateFunction<T> }>>(response: CancelableRequest<Response<unknown>>, schemas: S)
    {
        type FilterStartingWith<S extends PropertyKey, T extends string> = S extends number | string ? \`\${S}\` extends \`\${T}\${infer _X}\` ? S : never : never
        type InferSchemaType<T> = T extends { is: (o: unknown) => o is infer S } ? S : never
        const result = await response
        const validator = schemas[result.statusCode] ?? schemas.default
        if (validator?.is(result.body) === false || result.statusCode < 200 || result.statusCode >= 300)
        {
            return {statusCode: result.statusCode, headers: result.headers, left: result.body, validationErrors: validator?.validate?.errors ?? undefined } as 
            {statusCode: number, headers: IncomingHttpHeaders, left: InferSchemaType<S[keyof S]>, validationErrors?: ErrorObject[]}
        }
        return {statusCode: result.statusCode, headers: result.headers, right: result.body } as 
        {statusCode: number, headers: IncomingHttpHeaders, right: InferSchemaType<S[keyof Pick<S, FilterStartingWith<keyof S, '2' | 'default'>>]>}
    }
}

",
    "type": "typescript",
  },
  {
    "data": {
      "00014-000": {
        "referenceName": "{{00014-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "DocumentSimilarityRequest",
        "uniqueSymbolName": "{{00014-000:symbolName}}",
      },
      "00018-000": {
        "referenceName": "{{00018-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "EducationalDetectionRequest",
        "uniqueSymbolName": "{{00018-000:symbolName}}",
      },
      "00022-000": {
        "referenceName": "{{00022-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "GenderDetectionRequest",
        "uniqueSymbolName": "{{00022-000:symbolName}}",
      },
      "00028-000": {
        "referenceName": "{{00028-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "KeywordExtractionRequest",
        "uniqueSymbolName": "{{00028-000:symbolName}}",
      },
      "00032-000": {
        "referenceName": "{{00032-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "LanguageDetectionRequest",
        "uniqueSymbolName": "{{00032-000:symbolName}}",
      },
      "00036-000": {
        "referenceName": "{{00036-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "ReadabilityAssessmentRequest",
        "uniqueSymbolName": "{{00036-000:symbolName}}",
      },
      "0004-000": {
        "referenceName": "{{0004-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "AdultContentDetectionRequest",
        "uniqueSymbolName": "{{0004-000:symbolName}}",
      },
      "00040-000": {
        "referenceName": "{{00040-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SentimentAnalysisRequest",
        "uniqueSymbolName": "{{00040-000:symbolName}}",
      },
      "00044-000": {
        "referenceName": "{{00044-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SpamDetectionRequest",
        "uniqueSymbolName": "{{00044-000:symbolName}}",
      },
      "00048-000": {
        "referenceName": "{{00048-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SubjectivityAnalysisRequest",
        "uniqueSymbolName": "{{00048-000:symbolName}}",
      },
      "00052-000": {
        "referenceName": "{{00052-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TextExtractionRequest",
        "uniqueSymbolName": "{{00052-000:symbolName}}",
      },
      "00056-000": {
        "referenceName": "{{00056-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TopicClassificationRequest",
        "uniqueSymbolName": "{{00056-000:symbolName}}",
      },
      "00060-000": {
        "referenceName": "{{00060-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TwitterSentimentAnalysisRequest",
        "uniqueSymbolName": "{{00060-000:symbolName}}",
      },
      "00061-000": {
        "referenceName": "{{00061-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.ts",
        "symbolName": "PetStore",
        "uniqueSymbolName": "{{00061-000:symbolName}}",
      },
      "0008-000": {
        "referenceName": "{{0008-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "CommercialDetectionRequest",
        "uniqueSymbolName": "{{0008-000:symbolName}}",
      },
    },
    "prettify": true,
    "relativeSource": "./datumbox.schema",
    "targetPath": "examples/datumbox/datumbox.client.type.ts",
    "template": "/**
* Generated by @skyleague/therefore@v1.0.0-local
* Do not manually touch this
*/
/* eslint-disable */
import AjvValidator from 'ajv'
import type { ValidateFunction } from 'ajv'


export interface {{0004-000:symbolName}} {
    /**
     * Your API Key
     */
    api_key: string
    /**
     * The text that you want to analyze. It should not contain HTML tags.
     */
    text?: string
}

export const {{0004-000:symbolName}} = {
    validate: require('./schemas/adult-content-detection-request.schema.js') as ValidateFunction<{{0004-000:symbolName}}>,
    get schema() { return {{0004-000:symbolName}}.validate.schema},
    is: (o: unknown): o is {{0004-000:symbolName}} => {{0004-000:symbolName}}.validate(o) === true,
    assert: (o: unknown) => {
        if (!{{0004-000:symbolName}}.validate(o)) {
            throw new AjvValidator.ValidationError({{0004-000:symbolName}}.validate.errors ?? [])
        }
    },
} as const

export interface {{0008-000:symbolName}} {
    /**
     * Your API Key
     */
    api_key: string
    /**
     * The text that you want to analyze. It should not contain HTML tags.
     */
    text?: string
}

export const {{0008-000:symbolName}} = {
    validate: require('./schemas/commercial-detection-request.schema.js') as ValidateFunction<{{0008-000:symbolName}}>,
    get schema() { return {{0008-000:symbolName}}.validate.schema},
    is: (o: unknown): o is {{0008-000:symbolName}} => {{0008-000:symbolName}}.validate(o) === true,
    assert: (o: unknown) => {
        if (!{{0008-000:symbolName}}.validate(o)) {
            throw new AjvValidator.ValidationError({{0008-000:symbolName}}.validate.errors ?? [])
        }
    },
} as const

export interface {{00014-000:symbolName}} {
    /**
     * Your API Key
     */
    api_key: string
    /**
     * The second text. It should not contain HTML tags.
     */
    copy?: string
    /**
     * The first text. It should not contain HTML tags.
     */
    original?: string
}

export const {{00014-000:symbolName}} = {
    validate: require('./schemas/document-similarity-request.schema.js') as ValidateFunction<{{00014-000:symbolName}}>,
    get schema() { return {{00014-000:symbolName}}.validate.schema},
    is: (o: unknown): o is {{00014-000:symbolName}} => {{00014-000:symbolName}}.validate(o) === true,
    assert: (o: unknown) => {
        if (!{{00014-000:symbolName}}.validate(o)) {
            throw new AjvValidator.ValidationError({{00014-000:symbolName}}.validate.errors ?? [])
        }
    },
} as const

export interface {{00018-000:symbolName}} {
    /**
     * Your API Key
     */
    api_key: string
    /**
     * The text that you want to analyze. It should not contain HTML tags.
     */
    text?: string
}

export const {{00018-000:symbolName}} = {
    validate: require('./schemas/educational-detection-request.schema.js') as ValidateFunction<{{00018-000:symbolName}}>,
    get schema() { return {{00018-000:symbolName}}.validate.schema},
    is: (o: unknown): o is {{00018-000:symbolName}} => {{00018-000:symbolName}}.validate(o) === true,
    assert: (o: unknown) => {
        if (!{{00018-000:symbolName}}.validate(o)) {
            throw new AjvValidator.ValidationError({{00018-000:symbolName}}.validate.errors ?? [])
        }
    },
} as const

export interface {{00022-000:symbolName}} {
    /**
     * Your API Key
     */
    api_key: string
    /**
     * The text that you want to analyze. It should not contain HTML tags.
     */
    text?: string
}

export const {{00022-000:symbolName}} = {
    validate: require('./schemas/gender-detection-request.schema.js') as ValidateFunction<{{00022-000:symbolName}}>,
    get schema() { return {{00022-000:symbolName}}.validate.schema},
    is: (o: unknown): o is {{00022-000:symbolName}} => {{00022-000:symbolName}}.validate(o) === true,
    assert: (o: unknown) => {
        if (!{{00022-000:symbolName}}.validate(o)) {
            throw new AjvValidator.ValidationError({{00022-000:symbolName}}.validate.errors ?? [])
        }
    },
} as const

export interface {{00028-000:symbolName}} {
    /**
     * Your API Key
     */
    api_key: string
    /**
     * The number of keyword combinations (n-grams) that you wish to extract.
     */
    n?: number
    /**
     * The text that you want to analyze. It should not contain HTML tags.
     */
    text?: string
}

export const {{00028-000:symbolName}} = {
    validate: require('./schemas/keyword-extraction-request.schema.js') as ValidateFunction<{{00028-000:symbolName}}>,
    get schema() { return {{00028-000:symbolName}}.validate.schema},
    is: (o: unknown): o is {{00028-000:symbolName}} => {{00028-000:symbolName}}.validate(o) === true,
    assert: (o: unknown) => {
        if (!{{00028-000:symbolName}}.validate(o)) {
            throw new AjvValidator.ValidationError({{00028-000:symbolName}}.validate.errors ?? [])
        }
    },
} as const

export interface {{00032-000:symbolName}} {
    /**
     * Your API Key
     */
    api_key: string
    /**
     * The text that you want to analyze. It should not contain HTML tags.
     */
    text?: string
}

export const {{00032-000:symbolName}} = {
    validate: require('./schemas/language-detection-request.schema.js') as ValidateFunction<{{00032-000:symbolName}}>,
    get schema() { return {{00032-000:symbolName}}.validate.schema},
    is: (o: unknown): o is {{00032-000:symbolName}} => {{00032-000:symbolName}}.validate(o) === true,
    assert: (o: unknown) => {
        if (!{{00032-000:symbolName}}.validate(o)) {
            throw new AjvValidator.ValidationError({{00032-000:symbolName}}.validate.errors ?? [])
        }
    },
} as const

export interface {{00036-000:symbolName}} {
    /**
     * Your API Key
     */
    api_key: string
    /**
     * The text that you want to analyze. It should not contain HTML tags.
     */
    text?: string
}

export const {{00036-000:symbolName}} = {
    validate: require('./schemas/readability-assessment-request.schema.js') as ValidateFunction<{{00036-000:symbolName}}>,
    get schema() { return {{00036-000:symbolName}}.validate.schema},
    is: (o: unknown): o is {{00036-000:symbolName}} => {{00036-000:symbolName}}.validate(o) === true,
    assert: (o: unknown) => {
        if (!{{00036-000:symbolName}}.validate(o)) {
            throw new AjvValidator.ValidationError({{00036-000:symbolName}}.validate.errors ?? [])
        }
    },
} as const

export interface {{00040-000:symbolName}} {
    /**
     * Your API Key
     */
    api_key: string
    /**
     * The text that you want to analyze. It should not contain HTML tags.
     */
    text?: string
}

export const {{00040-000:symbolName}} = {
    validate: require('./schemas/sentiment-analysis-request.schema.js') as ValidateFunction<{{00040-000:symbolName}}>,
    get schema() { return {{00040-000:symbolName}}.validate.schema},
    is: (o: unknown): o is {{00040-000:symbolName}} => {{00040-000:symbolName}}.validate(o) === true,
    assert: (o: unknown) => {
        if (!{{00040-000:symbolName}}.validate(o)) {
            throw new AjvValidator.ValidationError({{00040-000:symbolName}}.validate.errors ?? [])
        }
    },
} as const

export interface {{00044-000:symbolName}} {
    /**
     * Your API Key
     */
    api_key: string
    /**
     * The text that you want to analyze. It should not contain HTML tags.
     */
    text?: string
}

export const {{00044-000:symbolName}} = {
    validate: require('./schemas/spam-detection-request.schema.js') as ValidateFunction<{{00044-000:symbolName}}>,
    get schema() { return {{00044-000:symbolName}}.validate.schema},
    is: (o: unknown): o is {{00044-000:symbolName}} => {{00044-000:symbolName}}.validate(o) === true,
    assert: (o: unknown) => {
        if (!{{00044-000:symbolName}}.validate(o)) {
            throw new AjvValidator.ValidationError({{00044-000:symbolName}}.validate.errors ?? [])
        }
    },
} as const

export interface {{00048-000:symbolName}} {
    /**
     * Your API Key
     */
    api_key: string
    /**
     * The text that you want to analyze. It should not contain HTML tags.
     */
    text?: string
}

export const {{00048-000:symbolName}} = {
    validate: require('./schemas/subjectivity-analysis-request.schema.js') as ValidateFunction<{{00048-000:symbolName}}>,
    get schema() { return {{00048-000:symbolName}}.validate.schema},
    is: (o: unknown): o is {{00048-000:symbolName}} => {{00048-000:symbolName}}.validate(o) === true,
    assert: (o: unknown) => {
        if (!{{00048-000:symbolName}}.validate(o)) {
            throw new AjvValidator.ValidationError({{00048-000:symbolName}}.validate.errors ?? [])
        }
    },
} as const

export interface {{00052-000:symbolName}} {
    /**
     * Your API Key
     */
    api_key: string
    /**
     * The HTML source of the webpage.
     */
    text?: string
}

export const {{00052-000:symbolName}} = {
    validate: require('./schemas/text-extraction-request.schema.js') as ValidateFunction<{{00052-000:symbolName}}>,
    get schema() { return {{00052-000:symbolName}}.validate.schema},
    is: (o: unknown): o is {{00052-000:symbolName}} => {{00052-000:symbolName}}.validate(o) === true,
    assert: (o: unknown) => {
        if (!{{00052-000:symbolName}}.validate(o)) {
            throw new AjvValidator.ValidationError({{00052-000:symbolName}}.validate.errors ?? [])
        }
    },
} as const

export interface {{00056-000:symbolName}} {
    /**
     * Your API Key
     */
    api_key: string
    /**
     * The text that you want to analyze. It should not contain HTML tags.
     */
    text?: string
}

export const {{00056-000:symbolName}} = {
    validate: require('./schemas/topic-classification-request.schema.js') as ValidateFunction<{{00056-000:symbolName}}>,
    get schema() { return {{00056-000:symbolName}}.validate.schema},
    is: (o: unknown): o is {{00056-000:symbolName}} => {{00056-000:symbolName}}.validate(o) === true,
    assert: (o: unknown) => {
        if (!{{00056-000:symbolName}}.validate(o)) {
            throw new AjvValidator.ValidationError({{00056-000:symbolName}}.validate.errors ?? [])
        }
    },
} as const

export interface {{00060-000:symbolName}} {
    /**
     * Your API Key
     */
    api_key: string
    /**
     * The text of the tweet that we evaluate.
     */
    text?: string
}

export const {{00060-000:symbolName}} = {
    validate: require('./schemas/twitter-sentiment-analysis-request.schema.js') as ValidateFunction<{{00060-000:symbolName}}>,
    get schema() { return {{00060-000:symbolName}}.validate.schema},
    is: (o: unknown): o is {{00060-000:symbolName}} => {{00060-000:symbolName}}.validate(o) === true,
    assert: (o: unknown) => {
        if (!{{00060-000:symbolName}}.validate(o)) {
            throw new AjvValidator.ValidationError({{00060-000:symbolName}}.validate.errors ?? [])
        }
    },
} as const

",
    "type": "typescript",
  },
  {
    "clean": [Function],
    "data": {
      "00014-000": {
        "referenceName": "{{00014-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "DocumentSimilarityRequest",
        "uniqueSymbolName": "{{00014-000:symbolName}}",
      },
      "00018-000": {
        "referenceName": "{{00018-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "EducationalDetectionRequest",
        "uniqueSymbolName": "{{00018-000:symbolName}}",
      },
      "00022-000": {
        "referenceName": "{{00022-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "GenderDetectionRequest",
        "uniqueSymbolName": "{{00022-000:symbolName}}",
      },
      "00028-000": {
        "referenceName": "{{00028-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "KeywordExtractionRequest",
        "uniqueSymbolName": "{{00028-000:symbolName}}",
      },
      "00032-000": {
        "referenceName": "{{00032-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "LanguageDetectionRequest",
        "uniqueSymbolName": "{{00032-000:symbolName}}",
      },
      "00036-000": {
        "referenceName": "{{00036-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "ReadabilityAssessmentRequest",
        "uniqueSymbolName": "{{00036-000:symbolName}}",
      },
      "0004-000": {
        "referenceName": "{{0004-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "AdultContentDetectionRequest",
        "uniqueSymbolName": "{{0004-000:symbolName}}",
      },
      "00040-000": {
        "referenceName": "{{00040-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SentimentAnalysisRequest",
        "uniqueSymbolName": "{{00040-000:symbolName}}",
      },
      "00044-000": {
        "referenceName": "{{00044-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SpamDetectionRequest",
        "uniqueSymbolName": "{{00044-000:symbolName}}",
      },
      "00048-000": {
        "referenceName": "{{00048-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SubjectivityAnalysisRequest",
        "uniqueSymbolName": "{{00048-000:symbolName}}",
      },
      "00052-000": {
        "referenceName": "{{00052-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TextExtractionRequest",
        "uniqueSymbolName": "{{00052-000:symbolName}}",
      },
      "00056-000": {
        "referenceName": "{{00056-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TopicClassificationRequest",
        "uniqueSymbolName": "{{00056-000:symbolName}}",
      },
      "00060-000": {
        "referenceName": "{{00060-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TwitterSentimentAnalysisRequest",
        "uniqueSymbolName": "{{00060-000:symbolName}}",
      },
      "00061-000": {
        "referenceName": "{{00061-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.ts",
        "symbolName": "PetStore",
        "uniqueSymbolName": "{{00061-000:symbolName}}",
      },
      "0008-000": {
        "referenceName": "{{0008-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "CommercialDetectionRequest",
        "uniqueSymbolName": "{{0008-000:symbolName}}",
      },
    },
    "prettify": false,
    "relativeSource": "./datumbox.schema",
    "targetPath": "examples/datumbox/schemas/adult-content-detection-request.schema.js",
    "template": "/**
 * Generated by @skyleague/therefore
 * eslint-disable
 */
"use strict";module.exports = validate10;module.exports.default = validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","title":"adultContentDetectionRequest","type":"object","properties":{"api_key":{"type":"string","title":"api_key","description":"Your API Key"},"text":{"type":"string","title":"text","description":"The text that you want to analyze. It should not contain HTML tags."}},"required":["api_key"],"additionalProperties":true};function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.api_key === undefined) && (missing0 = "api_key")){validate10.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.api_key !== undefined){const _errs2 = errors;if(typeof data.api_key !== "string"){validate10.errors = [{instancePath:instancePath+"/api_key",schemaPath:"#/properties/api_key/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.text !== undefined){const _errs4 = errors;if(typeof data.text !== "string"){validate10.errors = [{instancePath:instancePath+"/text",schemaPath:"#/properties/text/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs4 === errors;}else {var valid0 = true;}}}}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate10.errors = vErrors;return errors === 0;};validate10.schema=schema11;",
    "type": "validator",
  },
  {
    "clean": [Function],
    "data": {
      "00014-000": {
        "referenceName": "{{00014-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "DocumentSimilarityRequest",
        "uniqueSymbolName": "{{00014-000:symbolName}}",
      },
      "00018-000": {
        "referenceName": "{{00018-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "EducationalDetectionRequest",
        "uniqueSymbolName": "{{00018-000:symbolName}}",
      },
      "00022-000": {
        "referenceName": "{{00022-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "GenderDetectionRequest",
        "uniqueSymbolName": "{{00022-000:symbolName}}",
      },
      "00028-000": {
        "referenceName": "{{00028-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "KeywordExtractionRequest",
        "uniqueSymbolName": "{{00028-000:symbolName}}",
      },
      "00032-000": {
        "referenceName": "{{00032-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "LanguageDetectionRequest",
        "uniqueSymbolName": "{{00032-000:symbolName}}",
      },
      "00036-000": {
        "referenceName": "{{00036-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "ReadabilityAssessmentRequest",
        "uniqueSymbolName": "{{00036-000:symbolName}}",
      },
      "0004-000": {
        "referenceName": "{{0004-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "AdultContentDetectionRequest",
        "uniqueSymbolName": "{{0004-000:symbolName}}",
      },
      "00040-000": {
        "referenceName": "{{00040-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SentimentAnalysisRequest",
        "uniqueSymbolName": "{{00040-000:symbolName}}",
      },
      "00044-000": {
        "referenceName": "{{00044-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SpamDetectionRequest",
        "uniqueSymbolName": "{{00044-000:symbolName}}",
      },
      "00048-000": {
        "referenceName": "{{00048-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SubjectivityAnalysisRequest",
        "uniqueSymbolName": "{{00048-000:symbolName}}",
      },
      "00052-000": {
        "referenceName": "{{00052-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TextExtractionRequest",
        "uniqueSymbolName": "{{00052-000:symbolName}}",
      },
      "00056-000": {
        "referenceName": "{{00056-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TopicClassificationRequest",
        "uniqueSymbolName": "{{00056-000:symbolName}}",
      },
      "00060-000": {
        "referenceName": "{{00060-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TwitterSentimentAnalysisRequest",
        "uniqueSymbolName": "{{00060-000:symbolName}}",
      },
      "00061-000": {
        "referenceName": "{{00061-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.ts",
        "symbolName": "PetStore",
        "uniqueSymbolName": "{{00061-000:symbolName}}",
      },
      "0008-000": {
        "referenceName": "{{0008-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "CommercialDetectionRequest",
        "uniqueSymbolName": "{{0008-000:symbolName}}",
      },
    },
    "prettify": false,
    "relativeSource": "./datumbox.schema",
    "targetPath": "examples/datumbox/schemas/commercial-detection-request.schema.js",
    "template": "/**
 * Generated by @skyleague/therefore
 * eslint-disable
 */
"use strict";module.exports = validate10;module.exports.default = validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","title":"commercialDetectionRequest","type":"object","properties":{"api_key":{"type":"string","title":"api_key","description":"Your API Key"},"text":{"type":"string","title":"text","description":"The text that you want to analyze. It should not contain HTML tags."}},"required":["api_key"],"additionalProperties":true};function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.api_key === undefined) && (missing0 = "api_key")){validate10.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.api_key !== undefined){const _errs2 = errors;if(typeof data.api_key !== "string"){validate10.errors = [{instancePath:instancePath+"/api_key",schemaPath:"#/properties/api_key/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.text !== undefined){const _errs4 = errors;if(typeof data.text !== "string"){validate10.errors = [{instancePath:instancePath+"/text",schemaPath:"#/properties/text/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs4 === errors;}else {var valid0 = true;}}}}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate10.errors = vErrors;return errors === 0;};validate10.schema=schema11;",
    "type": "validator",
  },
  {
    "clean": [Function],
    "data": {
      "00014-000": {
        "referenceName": "{{00014-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "DocumentSimilarityRequest",
        "uniqueSymbolName": "{{00014-000:symbolName}}",
      },
      "00018-000": {
        "referenceName": "{{00018-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "EducationalDetectionRequest",
        "uniqueSymbolName": "{{00018-000:symbolName}}",
      },
      "00022-000": {
        "referenceName": "{{00022-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "GenderDetectionRequest",
        "uniqueSymbolName": "{{00022-000:symbolName}}",
      },
      "00028-000": {
        "referenceName": "{{00028-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "KeywordExtractionRequest",
        "uniqueSymbolName": "{{00028-000:symbolName}}",
      },
      "00032-000": {
        "referenceName": "{{00032-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "LanguageDetectionRequest",
        "uniqueSymbolName": "{{00032-000:symbolName}}",
      },
      "00036-000": {
        "referenceName": "{{00036-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "ReadabilityAssessmentRequest",
        "uniqueSymbolName": "{{00036-000:symbolName}}",
      },
      "0004-000": {
        "referenceName": "{{0004-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "AdultContentDetectionRequest",
        "uniqueSymbolName": "{{0004-000:symbolName}}",
      },
      "00040-000": {
        "referenceName": "{{00040-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SentimentAnalysisRequest",
        "uniqueSymbolName": "{{00040-000:symbolName}}",
      },
      "00044-000": {
        "referenceName": "{{00044-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SpamDetectionRequest",
        "uniqueSymbolName": "{{00044-000:symbolName}}",
      },
      "00048-000": {
        "referenceName": "{{00048-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SubjectivityAnalysisRequest",
        "uniqueSymbolName": "{{00048-000:symbolName}}",
      },
      "00052-000": {
        "referenceName": "{{00052-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TextExtractionRequest",
        "uniqueSymbolName": "{{00052-000:symbolName}}",
      },
      "00056-000": {
        "referenceName": "{{00056-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TopicClassificationRequest",
        "uniqueSymbolName": "{{00056-000:symbolName}}",
      },
      "00060-000": {
        "referenceName": "{{00060-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TwitterSentimentAnalysisRequest",
        "uniqueSymbolName": "{{00060-000:symbolName}}",
      },
      "00061-000": {
        "referenceName": "{{00061-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.ts",
        "symbolName": "PetStore",
        "uniqueSymbolName": "{{00061-000:symbolName}}",
      },
      "0008-000": {
        "referenceName": "{{0008-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "CommercialDetectionRequest",
        "uniqueSymbolName": "{{0008-000:symbolName}}",
      },
    },
    "prettify": false,
    "relativeSource": "./datumbox.schema",
    "targetPath": "examples/datumbox/schemas/document-similarity-request.schema.js",
    "template": "/**
 * Generated by @skyleague/therefore
 * eslint-disable
 */
"use strict";module.exports = validate10;module.exports.default = validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","title":"documentSimilarityRequest","type":"object","properties":{"api_key":{"type":"string","title":"api_key","description":"Your API Key"},"copy":{"type":"string","title":"copy","description":"The second text. It should not contain HTML tags."},"original":{"type":"string","title":"original","description":"The first text. It should not contain HTML tags."}},"required":["api_key"],"additionalProperties":true};function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.api_key === undefined) && (missing0 = "api_key")){validate10.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.api_key !== undefined){const _errs2 = errors;if(typeof data.api_key !== "string"){validate10.errors = [{instancePath:instancePath+"/api_key",schemaPath:"#/properties/api_key/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.copy !== undefined){const _errs4 = errors;if(typeof data.copy !== "string"){validate10.errors = [{instancePath:instancePath+"/copy",schemaPath:"#/properties/copy/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs4 === errors;}else {var valid0 = true;}if(valid0){if(data.original !== undefined){const _errs6 = errors;if(typeof data.original !== "string"){validate10.errors = [{instancePath:instancePath+"/original",schemaPath:"#/properties/original/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs6 === errors;}else {var valid0 = true;}}}}}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate10.errors = vErrors;return errors === 0;};validate10.schema=schema11;",
    "type": "validator",
  },
  {
    "clean": [Function],
    "data": {
      "00014-000": {
        "referenceName": "{{00014-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "DocumentSimilarityRequest",
        "uniqueSymbolName": "{{00014-000:symbolName}}",
      },
      "00018-000": {
        "referenceName": "{{00018-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "EducationalDetectionRequest",
        "uniqueSymbolName": "{{00018-000:symbolName}}",
      },
      "00022-000": {
        "referenceName": "{{00022-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "GenderDetectionRequest",
        "uniqueSymbolName": "{{00022-000:symbolName}}",
      },
      "00028-000": {
        "referenceName": "{{00028-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "KeywordExtractionRequest",
        "uniqueSymbolName": "{{00028-000:symbolName}}",
      },
      "00032-000": {
        "referenceName": "{{00032-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "LanguageDetectionRequest",
        "uniqueSymbolName": "{{00032-000:symbolName}}",
      },
      "00036-000": {
        "referenceName": "{{00036-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "ReadabilityAssessmentRequest",
        "uniqueSymbolName": "{{00036-000:symbolName}}",
      },
      "0004-000": {
        "referenceName": "{{0004-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "AdultContentDetectionRequest",
        "uniqueSymbolName": "{{0004-000:symbolName}}",
      },
      "00040-000": {
        "referenceName": "{{00040-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SentimentAnalysisRequest",
        "uniqueSymbolName": "{{00040-000:symbolName}}",
      },
      "00044-000": {
        "referenceName": "{{00044-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SpamDetectionRequest",
        "uniqueSymbolName": "{{00044-000:symbolName}}",
      },
      "00048-000": {
        "referenceName": "{{00048-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SubjectivityAnalysisRequest",
        "uniqueSymbolName": "{{00048-000:symbolName}}",
      },
      "00052-000": {
        "referenceName": "{{00052-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TextExtractionRequest",
        "uniqueSymbolName": "{{00052-000:symbolName}}",
      },
      "00056-000": {
        "referenceName": "{{00056-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TopicClassificationRequest",
        "uniqueSymbolName": "{{00056-000:symbolName}}",
      },
      "00060-000": {
        "referenceName": "{{00060-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TwitterSentimentAnalysisRequest",
        "uniqueSymbolName": "{{00060-000:symbolName}}",
      },
      "00061-000": {
        "referenceName": "{{00061-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.ts",
        "symbolName": "PetStore",
        "uniqueSymbolName": "{{00061-000:symbolName}}",
      },
      "0008-000": {
        "referenceName": "{{0008-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "CommercialDetectionRequest",
        "uniqueSymbolName": "{{0008-000:symbolName}}",
      },
    },
    "prettify": false,
    "relativeSource": "./datumbox.schema",
    "targetPath": "examples/datumbox/schemas/educational-detection-request.schema.js",
    "template": "/**
 * Generated by @skyleague/therefore
 * eslint-disable
 */
"use strict";module.exports = validate10;module.exports.default = validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","title":"educationalDetectionRequest","type":"object","properties":{"api_key":{"type":"string","title":"api_key","description":"Your API Key"},"text":{"type":"string","title":"text","description":"The text that you want to analyze. It should not contain HTML tags."}},"required":["api_key"],"additionalProperties":true};function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.api_key === undefined) && (missing0 = "api_key")){validate10.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.api_key !== undefined){const _errs2 = errors;if(typeof data.api_key !== "string"){validate10.errors = [{instancePath:instancePath+"/api_key",schemaPath:"#/properties/api_key/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.text !== undefined){const _errs4 = errors;if(typeof data.text !== "string"){validate10.errors = [{instancePath:instancePath+"/text",schemaPath:"#/properties/text/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs4 === errors;}else {var valid0 = true;}}}}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate10.errors = vErrors;return errors === 0;};validate10.schema=schema11;",
    "type": "validator",
  },
  {
    "clean": [Function],
    "data": {
      "00014-000": {
        "referenceName": "{{00014-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "DocumentSimilarityRequest",
        "uniqueSymbolName": "{{00014-000:symbolName}}",
      },
      "00018-000": {
        "referenceName": "{{00018-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "EducationalDetectionRequest",
        "uniqueSymbolName": "{{00018-000:symbolName}}",
      },
      "00022-000": {
        "referenceName": "{{00022-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "GenderDetectionRequest",
        "uniqueSymbolName": "{{00022-000:symbolName}}",
      },
      "00028-000": {
        "referenceName": "{{00028-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "KeywordExtractionRequest",
        "uniqueSymbolName": "{{00028-000:symbolName}}",
      },
      "00032-000": {
        "referenceName": "{{00032-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "LanguageDetectionRequest",
        "uniqueSymbolName": "{{00032-000:symbolName}}",
      },
      "00036-000": {
        "referenceName": "{{00036-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "ReadabilityAssessmentRequest",
        "uniqueSymbolName": "{{00036-000:symbolName}}",
      },
      "0004-000": {
        "referenceName": "{{0004-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "AdultContentDetectionRequest",
        "uniqueSymbolName": "{{0004-000:symbolName}}",
      },
      "00040-000": {
        "referenceName": "{{00040-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SentimentAnalysisRequest",
        "uniqueSymbolName": "{{00040-000:symbolName}}",
      },
      "00044-000": {
        "referenceName": "{{00044-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SpamDetectionRequest",
        "uniqueSymbolName": "{{00044-000:symbolName}}",
      },
      "00048-000": {
        "referenceName": "{{00048-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SubjectivityAnalysisRequest",
        "uniqueSymbolName": "{{00048-000:symbolName}}",
      },
      "00052-000": {
        "referenceName": "{{00052-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TextExtractionRequest",
        "uniqueSymbolName": "{{00052-000:symbolName}}",
      },
      "00056-000": {
        "referenceName": "{{00056-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TopicClassificationRequest",
        "uniqueSymbolName": "{{00056-000:symbolName}}",
      },
      "00060-000": {
        "referenceName": "{{00060-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TwitterSentimentAnalysisRequest",
        "uniqueSymbolName": "{{00060-000:symbolName}}",
      },
      "00061-000": {
        "referenceName": "{{00061-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.ts",
        "symbolName": "PetStore",
        "uniqueSymbolName": "{{00061-000:symbolName}}",
      },
      "0008-000": {
        "referenceName": "{{0008-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "CommercialDetectionRequest",
        "uniqueSymbolName": "{{0008-000:symbolName}}",
      },
    },
    "prettify": false,
    "relativeSource": "./datumbox.schema",
    "targetPath": "examples/datumbox/schemas/gender-detection-request.schema.js",
    "template": "/**
 * Generated by @skyleague/therefore
 * eslint-disable
 */
"use strict";module.exports = validate10;module.exports.default = validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","title":"genderDetectionRequest","type":"object","properties":{"api_key":{"type":"string","title":"api_key","description":"Your API Key"},"text":{"type":"string","title":"text","description":"The text that you want to analyze. It should not contain HTML tags."}},"required":["api_key"],"additionalProperties":true};function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.api_key === undefined) && (missing0 = "api_key")){validate10.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.api_key !== undefined){const _errs2 = errors;if(typeof data.api_key !== "string"){validate10.errors = [{instancePath:instancePath+"/api_key",schemaPath:"#/properties/api_key/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.text !== undefined){const _errs4 = errors;if(typeof data.text !== "string"){validate10.errors = [{instancePath:instancePath+"/text",schemaPath:"#/properties/text/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs4 === errors;}else {var valid0 = true;}}}}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate10.errors = vErrors;return errors === 0;};validate10.schema=schema11;",
    "type": "validator",
  },
  {
    "clean": [Function],
    "data": {
      "00014-000": {
        "referenceName": "{{00014-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "DocumentSimilarityRequest",
        "uniqueSymbolName": "{{00014-000:symbolName}}",
      },
      "00018-000": {
        "referenceName": "{{00018-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "EducationalDetectionRequest",
        "uniqueSymbolName": "{{00018-000:symbolName}}",
      },
      "00022-000": {
        "referenceName": "{{00022-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "GenderDetectionRequest",
        "uniqueSymbolName": "{{00022-000:symbolName}}",
      },
      "00028-000": {
        "referenceName": "{{00028-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "KeywordExtractionRequest",
        "uniqueSymbolName": "{{00028-000:symbolName}}",
      },
      "00032-000": {
        "referenceName": "{{00032-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "LanguageDetectionRequest",
        "uniqueSymbolName": "{{00032-000:symbolName}}",
      },
      "00036-000": {
        "referenceName": "{{00036-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "ReadabilityAssessmentRequest",
        "uniqueSymbolName": "{{00036-000:symbolName}}",
      },
      "0004-000": {
        "referenceName": "{{0004-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "AdultContentDetectionRequest",
        "uniqueSymbolName": "{{0004-000:symbolName}}",
      },
      "00040-000": {
        "referenceName": "{{00040-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SentimentAnalysisRequest",
        "uniqueSymbolName": "{{00040-000:symbolName}}",
      },
      "00044-000": {
        "referenceName": "{{00044-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SpamDetectionRequest",
        "uniqueSymbolName": "{{00044-000:symbolName}}",
      },
      "00048-000": {
        "referenceName": "{{00048-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SubjectivityAnalysisRequest",
        "uniqueSymbolName": "{{00048-000:symbolName}}",
      },
      "00052-000": {
        "referenceName": "{{00052-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TextExtractionRequest",
        "uniqueSymbolName": "{{00052-000:symbolName}}",
      },
      "00056-000": {
        "referenceName": "{{00056-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TopicClassificationRequest",
        "uniqueSymbolName": "{{00056-000:symbolName}}",
      },
      "00060-000": {
        "referenceName": "{{00060-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TwitterSentimentAnalysisRequest",
        "uniqueSymbolName": "{{00060-000:symbolName}}",
      },
      "00061-000": {
        "referenceName": "{{00061-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.ts",
        "symbolName": "PetStore",
        "uniqueSymbolName": "{{00061-000:symbolName}}",
      },
      "0008-000": {
        "referenceName": "{{0008-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "CommercialDetectionRequest",
        "uniqueSymbolName": "{{0008-000:symbolName}}",
      },
    },
    "prettify": false,
    "relativeSource": "./datumbox.schema",
    "targetPath": "examples/datumbox/schemas/keyword-extraction-request.schema.js",
    "template": "/**
 * Generated by @skyleague/therefore
 * eslint-disable
 */
"use strict";module.exports = validate10;module.exports.default = validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","title":"keywordExtractionRequest","type":"object","properties":{"api_key":{"type":"string","title":"api_key","description":"Your API Key"},"n":{"type":"integer","title":"n","description":"The number of keyword combinations (n-grams) that you wish to extract.","maximum":5,"minimum":1},"text":{"type":"string","title":"text","description":"The text that you want to analyze. It should not contain HTML tags."}},"required":["api_key"],"additionalProperties":true};function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.api_key === undefined) && (missing0 = "api_key")){validate10.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.api_key !== undefined){const _errs2 = errors;if(typeof data.api_key !== "string"){validate10.errors = [{instancePath:instancePath+"/api_key",schemaPath:"#/properties/api_key/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.n !== undefined){let data1 = data.n;const _errs4 = errors;if(!(((typeof data1 == "number") && (!(data1 % 1) && !isNaN(data1))) && (isFinite(data1)))){validate10.errors = [{instancePath:instancePath+"/n",schemaPath:"#/properties/n/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}if(errors === _errs4){if((typeof data1 == "number") && (isFinite(data1))){if(data1 > 5 || isNaN(data1)){validate10.errors = [{instancePath:instancePath+"/n",schemaPath:"#/properties/n/maximum",keyword:"maximum",params:{comparison: "<=", limit: 5},message:"must be <= 5"}];return false;}else {if(data1 < 1 || isNaN(data1)){validate10.errors = [{instancePath:instancePath+"/n",schemaPath:"#/properties/n/minimum",keyword:"minimum",params:{comparison: ">=", limit: 1},message:"must be >= 1"}];return false;}}}}var valid0 = _errs4 === errors;}else {var valid0 = true;}if(valid0){if(data.text !== undefined){const _errs6 = errors;if(typeof data.text !== "string"){validate10.errors = [{instancePath:instancePath+"/text",schemaPath:"#/properties/text/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs6 === errors;}else {var valid0 = true;}}}}}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate10.errors = vErrors;return errors === 0;};validate10.schema=schema11;",
    "type": "validator",
  },
  {
    "clean": [Function],
    "data": {
      "00014-000": {
        "referenceName": "{{00014-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "DocumentSimilarityRequest",
        "uniqueSymbolName": "{{00014-000:symbolName}}",
      },
      "00018-000": {
        "referenceName": "{{00018-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "EducationalDetectionRequest",
        "uniqueSymbolName": "{{00018-000:symbolName}}",
      },
      "00022-000": {
        "referenceName": "{{00022-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "GenderDetectionRequest",
        "uniqueSymbolName": "{{00022-000:symbolName}}",
      },
      "00028-000": {
        "referenceName": "{{00028-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "KeywordExtractionRequest",
        "uniqueSymbolName": "{{00028-000:symbolName}}",
      },
      "00032-000": {
        "referenceName": "{{00032-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "LanguageDetectionRequest",
        "uniqueSymbolName": "{{00032-000:symbolName}}",
      },
      "00036-000": {
        "referenceName": "{{00036-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "ReadabilityAssessmentRequest",
        "uniqueSymbolName": "{{00036-000:symbolName}}",
      },
      "0004-000": {
        "referenceName": "{{0004-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "AdultContentDetectionRequest",
        "uniqueSymbolName": "{{0004-000:symbolName}}",
      },
      "00040-000": {
        "referenceName": "{{00040-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SentimentAnalysisRequest",
        "uniqueSymbolName": "{{00040-000:symbolName}}",
      },
      "00044-000": {
        "referenceName": "{{00044-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SpamDetectionRequest",
        "uniqueSymbolName": "{{00044-000:symbolName}}",
      },
      "00048-000": {
        "referenceName": "{{00048-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SubjectivityAnalysisRequest",
        "uniqueSymbolName": "{{00048-000:symbolName}}",
      },
      "00052-000": {
        "referenceName": "{{00052-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TextExtractionRequest",
        "uniqueSymbolName": "{{00052-000:symbolName}}",
      },
      "00056-000": {
        "referenceName": "{{00056-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TopicClassificationRequest",
        "uniqueSymbolName": "{{00056-000:symbolName}}",
      },
      "00060-000": {
        "referenceName": "{{00060-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TwitterSentimentAnalysisRequest",
        "uniqueSymbolName": "{{00060-000:symbolName}}",
      },
      "00061-000": {
        "referenceName": "{{00061-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.ts",
        "symbolName": "PetStore",
        "uniqueSymbolName": "{{00061-000:symbolName}}",
      },
      "0008-000": {
        "referenceName": "{{0008-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "CommercialDetectionRequest",
        "uniqueSymbolName": "{{0008-000:symbolName}}",
      },
    },
    "prettify": false,
    "relativeSource": "./datumbox.schema",
    "targetPath": "examples/datumbox/schemas/language-detection-request.schema.js",
    "template": "/**
 * Generated by @skyleague/therefore
 * eslint-disable
 */
"use strict";module.exports = validate10;module.exports.default = validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","title":"languageDetectionRequest","type":"object","properties":{"api_key":{"type":"string","title":"api_key","description":"Your API Key"},"text":{"type":"string","title":"text","description":"The text that you want to analyze. It should not contain HTML tags."}},"required":["api_key"],"additionalProperties":true};function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.api_key === undefined) && (missing0 = "api_key")){validate10.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.api_key !== undefined){const _errs2 = errors;if(typeof data.api_key !== "string"){validate10.errors = [{instancePath:instancePath+"/api_key",schemaPath:"#/properties/api_key/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.text !== undefined){const _errs4 = errors;if(typeof data.text !== "string"){validate10.errors = [{instancePath:instancePath+"/text",schemaPath:"#/properties/text/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs4 === errors;}else {var valid0 = true;}}}}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate10.errors = vErrors;return errors === 0;};validate10.schema=schema11;",
    "type": "validator",
  },
  {
    "clean": [Function],
    "data": {
      "00014-000": {
        "referenceName": "{{00014-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "DocumentSimilarityRequest",
        "uniqueSymbolName": "{{00014-000:symbolName}}",
      },
      "00018-000": {
        "referenceName": "{{00018-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "EducationalDetectionRequest",
        "uniqueSymbolName": "{{00018-000:symbolName}}",
      },
      "00022-000": {
        "referenceName": "{{00022-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "GenderDetectionRequest",
        "uniqueSymbolName": "{{00022-000:symbolName}}",
      },
      "00028-000": {
        "referenceName": "{{00028-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "KeywordExtractionRequest",
        "uniqueSymbolName": "{{00028-000:symbolName}}",
      },
      "00032-000": {
        "referenceName": "{{00032-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "LanguageDetectionRequest",
        "uniqueSymbolName": "{{00032-000:symbolName}}",
      },
      "00036-000": {
        "referenceName": "{{00036-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "ReadabilityAssessmentRequest",
        "uniqueSymbolName": "{{00036-000:symbolName}}",
      },
      "0004-000": {
        "referenceName": "{{0004-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "AdultContentDetectionRequest",
        "uniqueSymbolName": "{{0004-000:symbolName}}",
      },
      "00040-000": {
        "referenceName": "{{00040-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SentimentAnalysisRequest",
        "uniqueSymbolName": "{{00040-000:symbolName}}",
      },
      "00044-000": {
        "referenceName": "{{00044-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SpamDetectionRequest",
        "uniqueSymbolName": "{{00044-000:symbolName}}",
      },
      "00048-000": {
        "referenceName": "{{00048-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SubjectivityAnalysisRequest",
        "uniqueSymbolName": "{{00048-000:symbolName}}",
      },
      "00052-000": {
        "referenceName": "{{00052-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TextExtractionRequest",
        "uniqueSymbolName": "{{00052-000:symbolName}}",
      },
      "00056-000": {
        "referenceName": "{{00056-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TopicClassificationRequest",
        "uniqueSymbolName": "{{00056-000:symbolName}}",
      },
      "00060-000": {
        "referenceName": "{{00060-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TwitterSentimentAnalysisRequest",
        "uniqueSymbolName": "{{00060-000:symbolName}}",
      },
      "00061-000": {
        "referenceName": "{{00061-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.ts",
        "symbolName": "PetStore",
        "uniqueSymbolName": "{{00061-000:symbolName}}",
      },
      "0008-000": {
        "referenceName": "{{0008-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "CommercialDetectionRequest",
        "uniqueSymbolName": "{{0008-000:symbolName}}",
      },
    },
    "prettify": false,
    "relativeSource": "./datumbox.schema",
    "targetPath": "examples/datumbox/schemas/readability-assessment-request.schema.js",
    "template": "/**
 * Generated by @skyleague/therefore
 * eslint-disable
 */
"use strict";module.exports = validate10;module.exports.default = validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","title":"readabilityAssessmentRequest","type":"object","properties":{"api_key":{"type":"string","title":"api_key","description":"Your API Key"},"text":{"type":"string","title":"text","description":"The text that you want to analyze. It should not contain HTML tags."}},"required":["api_key"],"additionalProperties":true};function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.api_key === undefined) && (missing0 = "api_key")){validate10.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.api_key !== undefined){const _errs2 = errors;if(typeof data.api_key !== "string"){validate10.errors = [{instancePath:instancePath+"/api_key",schemaPath:"#/properties/api_key/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.text !== undefined){const _errs4 = errors;if(typeof data.text !== "string"){validate10.errors = [{instancePath:instancePath+"/text",schemaPath:"#/properties/text/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs4 === errors;}else {var valid0 = true;}}}}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate10.errors = vErrors;return errors === 0;};validate10.schema=schema11;",
    "type": "validator",
  },
  {
    "clean": [Function],
    "data": {
      "00014-000": {
        "referenceName": "{{00014-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "DocumentSimilarityRequest",
        "uniqueSymbolName": "{{00014-000:symbolName}}",
      },
      "00018-000": {
        "referenceName": "{{00018-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "EducationalDetectionRequest",
        "uniqueSymbolName": "{{00018-000:symbolName}}",
      },
      "00022-000": {
        "referenceName": "{{00022-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "GenderDetectionRequest",
        "uniqueSymbolName": "{{00022-000:symbolName}}",
      },
      "00028-000": {
        "referenceName": "{{00028-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "KeywordExtractionRequest",
        "uniqueSymbolName": "{{00028-000:symbolName}}",
      },
      "00032-000": {
        "referenceName": "{{00032-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "LanguageDetectionRequest",
        "uniqueSymbolName": "{{00032-000:symbolName}}",
      },
      "00036-000": {
        "referenceName": "{{00036-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "ReadabilityAssessmentRequest",
        "uniqueSymbolName": "{{00036-000:symbolName}}",
      },
      "0004-000": {
        "referenceName": "{{0004-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "AdultContentDetectionRequest",
        "uniqueSymbolName": "{{0004-000:symbolName}}",
      },
      "00040-000": {
        "referenceName": "{{00040-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SentimentAnalysisRequest",
        "uniqueSymbolName": "{{00040-000:symbolName}}",
      },
      "00044-000": {
        "referenceName": "{{00044-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SpamDetectionRequest",
        "uniqueSymbolName": "{{00044-000:symbolName}}",
      },
      "00048-000": {
        "referenceName": "{{00048-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SubjectivityAnalysisRequest",
        "uniqueSymbolName": "{{00048-000:symbolName}}",
      },
      "00052-000": {
        "referenceName": "{{00052-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TextExtractionRequest",
        "uniqueSymbolName": "{{00052-000:symbolName}}",
      },
      "00056-000": {
        "referenceName": "{{00056-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TopicClassificationRequest",
        "uniqueSymbolName": "{{00056-000:symbolName}}",
      },
      "00060-000": {
        "referenceName": "{{00060-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TwitterSentimentAnalysisRequest",
        "uniqueSymbolName": "{{00060-000:symbolName}}",
      },
      "00061-000": {
        "referenceName": "{{00061-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.ts",
        "symbolName": "PetStore",
        "uniqueSymbolName": "{{00061-000:symbolName}}",
      },
      "0008-000": {
        "referenceName": "{{0008-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "CommercialDetectionRequest",
        "uniqueSymbolName": "{{0008-000:symbolName}}",
      },
    },
    "prettify": false,
    "relativeSource": "./datumbox.schema",
    "targetPath": "examples/datumbox/schemas/sentiment-analysis-request.schema.js",
    "template": "/**
 * Generated by @skyleague/therefore
 * eslint-disable
 */
"use strict";module.exports = validate10;module.exports.default = validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","title":"sentimentAnalysisRequest","type":"object","properties":{"api_key":{"type":"string","title":"api_key","description":"Your API Key"},"text":{"type":"string","title":"text","description":"The text that you want to analyze. It should not contain HTML tags."}},"required":["api_key"],"additionalProperties":true};function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.api_key === undefined) && (missing0 = "api_key")){validate10.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.api_key !== undefined){const _errs2 = errors;if(typeof data.api_key !== "string"){validate10.errors = [{instancePath:instancePath+"/api_key",schemaPath:"#/properties/api_key/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.text !== undefined){const _errs4 = errors;if(typeof data.text !== "string"){validate10.errors = [{instancePath:instancePath+"/text",schemaPath:"#/properties/text/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs4 === errors;}else {var valid0 = true;}}}}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate10.errors = vErrors;return errors === 0;};validate10.schema=schema11;",
    "type": "validator",
  },
  {
    "clean": [Function],
    "data": {
      "00014-000": {
        "referenceName": "{{00014-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "DocumentSimilarityRequest",
        "uniqueSymbolName": "{{00014-000:symbolName}}",
      },
      "00018-000": {
        "referenceName": "{{00018-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "EducationalDetectionRequest",
        "uniqueSymbolName": "{{00018-000:symbolName}}",
      },
      "00022-000": {
        "referenceName": "{{00022-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "GenderDetectionRequest",
        "uniqueSymbolName": "{{00022-000:symbolName}}",
      },
      "00028-000": {
        "referenceName": "{{00028-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "KeywordExtractionRequest",
        "uniqueSymbolName": "{{00028-000:symbolName}}",
      },
      "00032-000": {
        "referenceName": "{{00032-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "LanguageDetectionRequest",
        "uniqueSymbolName": "{{00032-000:symbolName}}",
      },
      "00036-000": {
        "referenceName": "{{00036-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "ReadabilityAssessmentRequest",
        "uniqueSymbolName": "{{00036-000:symbolName}}",
      },
      "0004-000": {
        "referenceName": "{{0004-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "AdultContentDetectionRequest",
        "uniqueSymbolName": "{{0004-000:symbolName}}",
      },
      "00040-000": {
        "referenceName": "{{00040-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SentimentAnalysisRequest",
        "uniqueSymbolName": "{{00040-000:symbolName}}",
      },
      "00044-000": {
        "referenceName": "{{00044-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SpamDetectionRequest",
        "uniqueSymbolName": "{{00044-000:symbolName}}",
      },
      "00048-000": {
        "referenceName": "{{00048-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SubjectivityAnalysisRequest",
        "uniqueSymbolName": "{{00048-000:symbolName}}",
      },
      "00052-000": {
        "referenceName": "{{00052-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TextExtractionRequest",
        "uniqueSymbolName": "{{00052-000:symbolName}}",
      },
      "00056-000": {
        "referenceName": "{{00056-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TopicClassificationRequest",
        "uniqueSymbolName": "{{00056-000:symbolName}}",
      },
      "00060-000": {
        "referenceName": "{{00060-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TwitterSentimentAnalysisRequest",
        "uniqueSymbolName": "{{00060-000:symbolName}}",
      },
      "00061-000": {
        "referenceName": "{{00061-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.ts",
        "symbolName": "PetStore",
        "uniqueSymbolName": "{{00061-000:symbolName}}",
      },
      "0008-000": {
        "referenceName": "{{0008-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "CommercialDetectionRequest",
        "uniqueSymbolName": "{{0008-000:symbolName}}",
      },
    },
    "prettify": false,
    "relativeSource": "./datumbox.schema",
    "targetPath": "examples/datumbox/schemas/spam-detection-request.schema.js",
    "template": "/**
 * Generated by @skyleague/therefore
 * eslint-disable
 */
"use strict";module.exports = validate10;module.exports.default = validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","title":"spamDetectionRequest","type":"object","properties":{"api_key":{"type":"string","title":"api_key","description":"Your API Key"},"text":{"type":"string","title":"text","description":"The text that you want to analyze. It should not contain HTML tags."}},"required":["api_key"],"additionalProperties":true};function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.api_key === undefined) && (missing0 = "api_key")){validate10.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.api_key !== undefined){const _errs2 = errors;if(typeof data.api_key !== "string"){validate10.errors = [{instancePath:instancePath+"/api_key",schemaPath:"#/properties/api_key/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.text !== undefined){const _errs4 = errors;if(typeof data.text !== "string"){validate10.errors = [{instancePath:instancePath+"/text",schemaPath:"#/properties/text/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs4 === errors;}else {var valid0 = true;}}}}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate10.errors = vErrors;return errors === 0;};validate10.schema=schema11;",
    "type": "validator",
  },
  {
    "clean": [Function],
    "data": {
      "00014-000": {
        "referenceName": "{{00014-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "DocumentSimilarityRequest",
        "uniqueSymbolName": "{{00014-000:symbolName}}",
      },
      "00018-000": {
        "referenceName": "{{00018-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "EducationalDetectionRequest",
        "uniqueSymbolName": "{{00018-000:symbolName}}",
      },
      "00022-000": {
        "referenceName": "{{00022-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "GenderDetectionRequest",
        "uniqueSymbolName": "{{00022-000:symbolName}}",
      },
      "00028-000": {
        "referenceName": "{{00028-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "KeywordExtractionRequest",
        "uniqueSymbolName": "{{00028-000:symbolName}}",
      },
      "00032-000": {
        "referenceName": "{{00032-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "LanguageDetectionRequest",
        "uniqueSymbolName": "{{00032-000:symbolName}}",
      },
      "00036-000": {
        "referenceName": "{{00036-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "ReadabilityAssessmentRequest",
        "uniqueSymbolName": "{{00036-000:symbolName}}",
      },
      "0004-000": {
        "referenceName": "{{0004-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "AdultContentDetectionRequest",
        "uniqueSymbolName": "{{0004-000:symbolName}}",
      },
      "00040-000": {
        "referenceName": "{{00040-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SentimentAnalysisRequest",
        "uniqueSymbolName": "{{00040-000:symbolName}}",
      },
      "00044-000": {
        "referenceName": "{{00044-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SpamDetectionRequest",
        "uniqueSymbolName": "{{00044-000:symbolName}}",
      },
      "00048-000": {
        "referenceName": "{{00048-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SubjectivityAnalysisRequest",
        "uniqueSymbolName": "{{00048-000:symbolName}}",
      },
      "00052-000": {
        "referenceName": "{{00052-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TextExtractionRequest",
        "uniqueSymbolName": "{{00052-000:symbolName}}",
      },
      "00056-000": {
        "referenceName": "{{00056-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TopicClassificationRequest",
        "uniqueSymbolName": "{{00056-000:symbolName}}",
      },
      "00060-000": {
        "referenceName": "{{00060-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TwitterSentimentAnalysisRequest",
        "uniqueSymbolName": "{{00060-000:symbolName}}",
      },
      "00061-000": {
        "referenceName": "{{00061-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.ts",
        "symbolName": "PetStore",
        "uniqueSymbolName": "{{00061-000:symbolName}}",
      },
      "0008-000": {
        "referenceName": "{{0008-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "CommercialDetectionRequest",
        "uniqueSymbolName": "{{0008-000:symbolName}}",
      },
    },
    "prettify": false,
    "relativeSource": "./datumbox.schema",
    "targetPath": "examples/datumbox/schemas/subjectivity-analysis-request.schema.js",
    "template": "/**
 * Generated by @skyleague/therefore
 * eslint-disable
 */
"use strict";module.exports = validate10;module.exports.default = validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","title":"subjectivityAnalysisRequest","type":"object","properties":{"api_key":{"type":"string","title":"api_key","description":"Your API Key"},"text":{"type":"string","title":"text","description":"The text that you want to analyze. It should not contain HTML tags."}},"required":["api_key"],"additionalProperties":true};function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.api_key === undefined) && (missing0 = "api_key")){validate10.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.api_key !== undefined){const _errs2 = errors;if(typeof data.api_key !== "string"){validate10.errors = [{instancePath:instancePath+"/api_key",schemaPath:"#/properties/api_key/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.text !== undefined){const _errs4 = errors;if(typeof data.text !== "string"){validate10.errors = [{instancePath:instancePath+"/text",schemaPath:"#/properties/text/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs4 === errors;}else {var valid0 = true;}}}}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate10.errors = vErrors;return errors === 0;};validate10.schema=schema11;",
    "type": "validator",
  },
  {
    "clean": [Function],
    "data": {
      "00014-000": {
        "referenceName": "{{00014-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "DocumentSimilarityRequest",
        "uniqueSymbolName": "{{00014-000:symbolName}}",
      },
      "00018-000": {
        "referenceName": "{{00018-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "EducationalDetectionRequest",
        "uniqueSymbolName": "{{00018-000:symbolName}}",
      },
      "00022-000": {
        "referenceName": "{{00022-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "GenderDetectionRequest",
        "uniqueSymbolName": "{{00022-000:symbolName}}",
      },
      "00028-000": {
        "referenceName": "{{00028-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "KeywordExtractionRequest",
        "uniqueSymbolName": "{{00028-000:symbolName}}",
      },
      "00032-000": {
        "referenceName": "{{00032-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "LanguageDetectionRequest",
        "uniqueSymbolName": "{{00032-000:symbolName}}",
      },
      "00036-000": {
        "referenceName": "{{00036-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "ReadabilityAssessmentRequest",
        "uniqueSymbolName": "{{00036-000:symbolName}}",
      },
      "0004-000": {
        "referenceName": "{{0004-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "AdultContentDetectionRequest",
        "uniqueSymbolName": "{{0004-000:symbolName}}",
      },
      "00040-000": {
        "referenceName": "{{00040-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SentimentAnalysisRequest",
        "uniqueSymbolName": "{{00040-000:symbolName}}",
      },
      "00044-000": {
        "referenceName": "{{00044-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SpamDetectionRequest",
        "uniqueSymbolName": "{{00044-000:symbolName}}",
      },
      "00048-000": {
        "referenceName": "{{00048-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SubjectivityAnalysisRequest",
        "uniqueSymbolName": "{{00048-000:symbolName}}",
      },
      "00052-000": {
        "referenceName": "{{00052-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TextExtractionRequest",
        "uniqueSymbolName": "{{00052-000:symbolName}}",
      },
      "00056-000": {
        "referenceName": "{{00056-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TopicClassificationRequest",
        "uniqueSymbolName": "{{00056-000:symbolName}}",
      },
      "00060-000": {
        "referenceName": "{{00060-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TwitterSentimentAnalysisRequest",
        "uniqueSymbolName": "{{00060-000:symbolName}}",
      },
      "00061-000": {
        "referenceName": "{{00061-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.ts",
        "symbolName": "PetStore",
        "uniqueSymbolName": "{{00061-000:symbolName}}",
      },
      "0008-000": {
        "referenceName": "{{0008-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "CommercialDetectionRequest",
        "uniqueSymbolName": "{{0008-000:symbolName}}",
      },
    },
    "prettify": false,
    "relativeSource": "./datumbox.schema",
    "targetPath": "examples/datumbox/schemas/text-extraction-request.schema.js",
    "template": "/**
 * Generated by @skyleague/therefore
 * eslint-disable
 */
"use strict";module.exports = validate10;module.exports.default = validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","title":"textExtractionRequest","type":"object","properties":{"api_key":{"type":"string","title":"api_key","description":"Your API Key"},"text":{"type":"string","title":"text","description":"The HTML source of the webpage."}},"required":["api_key"],"additionalProperties":true};function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.api_key === undefined) && (missing0 = "api_key")){validate10.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.api_key !== undefined){const _errs2 = errors;if(typeof data.api_key !== "string"){validate10.errors = [{instancePath:instancePath+"/api_key",schemaPath:"#/properties/api_key/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.text !== undefined){const _errs4 = errors;if(typeof data.text !== "string"){validate10.errors = [{instancePath:instancePath+"/text",schemaPath:"#/properties/text/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs4 === errors;}else {var valid0 = true;}}}}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate10.errors = vErrors;return errors === 0;};validate10.schema=schema11;",
    "type": "validator",
  },
  {
    "clean": [Function],
    "data": {
      "00014-000": {
        "referenceName": "{{00014-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "DocumentSimilarityRequest",
        "uniqueSymbolName": "{{00014-000:symbolName}}",
      },
      "00018-000": {
        "referenceName": "{{00018-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "EducationalDetectionRequest",
        "uniqueSymbolName": "{{00018-000:symbolName}}",
      },
      "00022-000": {
        "referenceName": "{{00022-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "GenderDetectionRequest",
        "uniqueSymbolName": "{{00022-000:symbolName}}",
      },
      "00028-000": {
        "referenceName": "{{00028-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "KeywordExtractionRequest",
        "uniqueSymbolName": "{{00028-000:symbolName}}",
      },
      "00032-000": {
        "referenceName": "{{00032-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "LanguageDetectionRequest",
        "uniqueSymbolName": "{{00032-000:symbolName}}",
      },
      "00036-000": {
        "referenceName": "{{00036-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "ReadabilityAssessmentRequest",
        "uniqueSymbolName": "{{00036-000:symbolName}}",
      },
      "0004-000": {
        "referenceName": "{{0004-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "AdultContentDetectionRequest",
        "uniqueSymbolName": "{{0004-000:symbolName}}",
      },
      "00040-000": {
        "referenceName": "{{00040-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SentimentAnalysisRequest",
        "uniqueSymbolName": "{{00040-000:symbolName}}",
      },
      "00044-000": {
        "referenceName": "{{00044-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SpamDetectionRequest",
        "uniqueSymbolName": "{{00044-000:symbolName}}",
      },
      "00048-000": {
        "referenceName": "{{00048-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SubjectivityAnalysisRequest",
        "uniqueSymbolName": "{{00048-000:symbolName}}",
      },
      "00052-000": {
        "referenceName": "{{00052-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TextExtractionRequest",
        "uniqueSymbolName": "{{00052-000:symbolName}}",
      },
      "00056-000": {
        "referenceName": "{{00056-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TopicClassificationRequest",
        "uniqueSymbolName": "{{00056-000:symbolName}}",
      },
      "00060-000": {
        "referenceName": "{{00060-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TwitterSentimentAnalysisRequest",
        "uniqueSymbolName": "{{00060-000:symbolName}}",
      },
      "00061-000": {
        "referenceName": "{{00061-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.ts",
        "symbolName": "PetStore",
        "uniqueSymbolName": "{{00061-000:symbolName}}",
      },
      "0008-000": {
        "referenceName": "{{0008-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "CommercialDetectionRequest",
        "uniqueSymbolName": "{{0008-000:symbolName}}",
      },
    },
    "prettify": false,
    "relativeSource": "./datumbox.schema",
    "targetPath": "examples/datumbox/schemas/topic-classification-request.schema.js",
    "template": "/**
 * Generated by @skyleague/therefore
 * eslint-disable
 */
"use strict";module.exports = validate10;module.exports.default = validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","title":"topicClassificationRequest","type":"object","properties":{"api_key":{"type":"string","title":"api_key","description":"Your API Key"},"text":{"type":"string","title":"text","description":"The text that you want to analyze. It should not contain HTML tags."}},"required":["api_key"],"additionalProperties":true};function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.api_key === undefined) && (missing0 = "api_key")){validate10.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.api_key !== undefined){const _errs2 = errors;if(typeof data.api_key !== "string"){validate10.errors = [{instancePath:instancePath+"/api_key",schemaPath:"#/properties/api_key/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.text !== undefined){const _errs4 = errors;if(typeof data.text !== "string"){validate10.errors = [{instancePath:instancePath+"/text",schemaPath:"#/properties/text/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs4 === errors;}else {var valid0 = true;}}}}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate10.errors = vErrors;return errors === 0;};validate10.schema=schema11;",
    "type": "validator",
  },
  {
    "clean": [Function],
    "data": {
      "00014-000": {
        "referenceName": "{{00014-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "DocumentSimilarityRequest",
        "uniqueSymbolName": "{{00014-000:symbolName}}",
      },
      "00018-000": {
        "referenceName": "{{00018-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "EducationalDetectionRequest",
        "uniqueSymbolName": "{{00018-000:symbolName}}",
      },
      "00022-000": {
        "referenceName": "{{00022-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "GenderDetectionRequest",
        "uniqueSymbolName": "{{00022-000:symbolName}}",
      },
      "00028-000": {
        "referenceName": "{{00028-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "KeywordExtractionRequest",
        "uniqueSymbolName": "{{00028-000:symbolName}}",
      },
      "00032-000": {
        "referenceName": "{{00032-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "LanguageDetectionRequest",
        "uniqueSymbolName": "{{00032-000:symbolName}}",
      },
      "00036-000": {
        "referenceName": "{{00036-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "ReadabilityAssessmentRequest",
        "uniqueSymbolName": "{{00036-000:symbolName}}",
      },
      "0004-000": {
        "referenceName": "{{0004-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "AdultContentDetectionRequest",
        "uniqueSymbolName": "{{0004-000:symbolName}}",
      },
      "00040-000": {
        "referenceName": "{{00040-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SentimentAnalysisRequest",
        "uniqueSymbolName": "{{00040-000:symbolName}}",
      },
      "00044-000": {
        "referenceName": "{{00044-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SpamDetectionRequest",
        "uniqueSymbolName": "{{00044-000:symbolName}}",
      },
      "00048-000": {
        "referenceName": "{{00048-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "SubjectivityAnalysisRequest",
        "uniqueSymbolName": "{{00048-000:symbolName}}",
      },
      "00052-000": {
        "referenceName": "{{00052-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TextExtractionRequest",
        "uniqueSymbolName": "{{00052-000:symbolName}}",
      },
      "00056-000": {
        "referenceName": "{{00056-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TopicClassificationRequest",
        "uniqueSymbolName": "{{00056-000:symbolName}}",
      },
      "00060-000": {
        "referenceName": "{{00060-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "TwitterSentimentAnalysisRequest",
        "uniqueSymbolName": "{{00060-000:symbolName}}",
      },
      "00061-000": {
        "referenceName": "{{00061-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.ts",
        "symbolName": "PetStore",
        "uniqueSymbolName": "{{00061-000:symbolName}}",
      },
      "0008-000": {
        "referenceName": "{{0008-000:symbolName}}",
        "srcPath": "examples/datumbox/datumbox.client.type.ts",
        "symbolName": "CommercialDetectionRequest",
        "uniqueSymbolName": "{{0008-000:symbolName}}",
      },
    },
    "prettify": false,
    "relativeSource": "./datumbox.schema",
    "targetPath": "examples/datumbox/schemas/twitter-sentiment-analysis-request.schema.js",
    "template": "/**
 * Generated by @skyleague/therefore
 * eslint-disable
 */
"use strict";module.exports = validate10;module.exports.default = validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","title":"twitterSentimentAnalysisRequest","type":"object","properties":{"api_key":{"type":"string","title":"api_key","description":"Your API Key"},"text":{"type":"string","title":"text","description":"The text of the tweet that we evaluate."}},"required":["api_key"],"additionalProperties":true};function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.api_key === undefined) && (missing0 = "api_key")){validate10.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.api_key !== undefined){const _errs2 = errors;if(typeof data.api_key !== "string"){validate10.errors = [{instancePath:instancePath+"/api_key",schemaPath:"#/properties/api_key/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.text !== undefined){const _errs4 = errors;if(typeof data.text !== "string"){validate10.errors = [{instancePath:instancePath+"/text",schemaPath:"#/properties/text/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs4 === errors;}else {var valid0 = true;}}}}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate10.errors = vErrors;return errors === 0;};validate10.schema=schema11;",
    "type": "validator",
  },
]
`;
