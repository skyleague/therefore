// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`output generation 1`] = `
[
  {
    "data": {
      "00014-000": {
        "referenceName": "{{00014-000:symbolName}}",
        "srcPath": "examples/json-schema/example.schema.type.ts",
        "symbolName": "SelfReference",
        "uniqueSymbolName": "{{00014-000:symbolName}}",
      },
      "0005-000": {
        "referenceName": "{{0005-000:symbolName}}",
        "srcPath": "examples/json-schema/example.schema.type.ts",
        "symbolName": "Person",
        "uniqueSymbolName": "{{0005-000:symbolName}}",
      },
      "0009-000": {
        "referenceName": "{{0009-000:symbolName}}",
        "srcPath": "examples/json-schema/example.schema.type.ts",
        "symbolName": "SalesPerson",
        "uniqueSymbolName": "{{0009-000:symbolName}}",
      },
    },
    "prettify": true,
    "relativeSource": "./example.schema",
    "targetPath": "examples/json-schema/example.schema.type.ts",
    "template": "/**
* Generated by @skyleague/therefore@v1.0.0-local
* Do not manually touch this
*/
/* eslint-disable */
import AjvValidator from 'ajv'
import type { ValidateFunction } from 'ajv'


export interface {{0005-000:symbolName}} {
    /**
     * The person's first name.
     */
    firstName: string
    lastName: string
    age: number
}

export const {{0005-000:symbolName}} = {
    validate: require('./schemas/person.schema.js') as ValidateFunction<{{0005-000:symbolName}}>,
    get schema() { return {{0005-000:symbolName}}.validate.schema},
    is: (o: unknown): o is {{0005-000:symbolName}} => {{0005-000:symbolName}}.validate(o) === true,
    assert: (o: unknown) => {
        if (!{{0005-000:symbolName}}.validate(o)) {
            throw new AjvValidator.ValidationError({{0005-000:symbolName}}.validate.errors ?? [])
        }
    },
} as const

export type {{0009-000:symbolName}} = {
    sales: number
} & {
    /**
     * The person's first name.
     */
    firstName: string
    lastName: string
    age: number
}

export const {{0009-000:symbolName}} = {
    validate: require('./schemas/sales-person.schema.js') as ValidateFunction<{{0009-000:symbolName}}>,
    get schema() { return {{0009-000:symbolName}}.validate.schema},
    is: (o: unknown): o is {{0009-000:symbolName}} => {{0009-000:symbolName}}.validate(o) === true,
    assert: (o: unknown) => {
        if (!{{0009-000:symbolName}}.validate(o)) {
            throw new AjvValidator.ValidationError({{0009-000:symbolName}}.validate.errors ?? [])
        }
    },
} as const

export interface {{00014-000:symbolName}} {
    foo?: string
    bar?: {{00014-000:referenceName}}
}

",
    "type": "typescript",
  },
  {
    "clean": [Function],
    "data": {
      "00014-000": {
        "referenceName": "{{00014-000:symbolName}}",
        "srcPath": "examples/json-schema/example.schema.type.ts",
        "symbolName": "SelfReference",
        "uniqueSymbolName": "{{00014-000:symbolName}}",
      },
      "0005-000": {
        "referenceName": "{{0005-000:symbolName}}",
        "srcPath": "examples/json-schema/example.schema.type.ts",
        "symbolName": "Person",
        "uniqueSymbolName": "{{0005-000:symbolName}}",
      },
      "0009-000": {
        "referenceName": "{{0009-000:symbolName}}",
        "srcPath": "examples/json-schema/example.schema.type.ts",
        "symbolName": "SalesPerson",
        "uniqueSymbolName": "{{0009-000:symbolName}}",
      },
    },
    "prettify": false,
    "relativeSource": "./example.schema",
    "targetPath": "examples/json-schema/schemas/person.schema.js",
    "template": "/**
 * Generated by @skyleague/therefore
 * eslint-disable
 */
"use strict";module.exports = validate10;module.exports.default = validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","title":"{{0005-000:uniqueSymbolName}}","type":"object","properties":{"firstName":{"type":"string","description":"The person's first name."},"lastName":{"type":"string"},"age":{"type":"number"}},"required":["firstName","lastName","age"],"additionalProperties":false};function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((((data.firstName === undefined) && (missing0 = "firstName")) || ((data.lastName === undefined) && (missing0 = "lastName"))) || ((data.age === undefined) && (missing0 = "age"))){validate10.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs1 = errors;for(const key0 in data){if(!(((key0 === "firstName") || (key0 === "lastName")) || (key0 === "age"))){validate10.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.firstName !== undefined){const _errs2 = errors;if(typeof data.firstName !== "string"){validate10.errors = [{instancePath:instancePath+"/firstName",schemaPath:"#/properties/firstName/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.lastName !== undefined){const _errs4 = errors;if(typeof data.lastName !== "string"){validate10.errors = [{instancePath:instancePath+"/lastName",schemaPath:"#/properties/lastName/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs4 === errors;}else {var valid0 = true;}if(valid0){if(data.age !== undefined){let data2 = data.age;const _errs6 = errors;if(!((typeof data2 == "number") && (isFinite(data2)))){validate10.errors = [{instancePath:instancePath+"/age",schemaPath:"#/properties/age/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs6 === errors;}else {var valid0 = true;}}}}}}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate10.errors = vErrors;return errors === 0;};validate10.schema=schema11;",
    "type": "validator",
  },
  {
    "clean": [Function],
    "data": {
      "00014-000": {
        "referenceName": "{{00014-000:symbolName}}",
        "srcPath": "examples/json-schema/example.schema.type.ts",
        "symbolName": "SelfReference",
        "uniqueSymbolName": "{{00014-000:symbolName}}",
      },
      "0005-000": {
        "referenceName": "{{0005-000:symbolName}}",
        "srcPath": "examples/json-schema/example.schema.type.ts",
        "symbolName": "Person",
        "uniqueSymbolName": "{{0005-000:symbolName}}",
      },
      "0009-000": {
        "referenceName": "{{0009-000:symbolName}}",
        "srcPath": "examples/json-schema/example.schema.type.ts",
        "symbolName": "SalesPerson",
        "uniqueSymbolName": "{{0009-000:symbolName}}",
      },
    },
    "prettify": false,
    "relativeSource": "./example.schema",
    "targetPath": "examples/json-schema/schemas/sales-person.schema.js",
    "template": "/**
 * Generated by @skyleague/therefore
 * eslint-disable
 */
"use strict";module.exports = validate10;module.exports.default = validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","title":"{{0009-000:uniqueSymbolName}}","allOf":[{"type":"object","properties":{"sales":{"type":"integer"}},"required":["sales"],"additionalProperties":true},{"type":"object","properties":{"firstName":{"type":"string","description":"The person's first name."},"lastName":{"type":"string"},"age":{"type":"number"}},"required":["firstName","lastName","age"],"additionalProperties":true}]};function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;const _errs0 = errors;if(errors === _errs0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.sales === undefined) && (missing0 = "sales")){validate10.errors = [{instancePath,schemaPath:"#/allOf/0/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.sales !== undefined){let data0 = data.sales;if(!(((typeof data0 == "number") && (!(data0 % 1) && !isNaN(data0))) && (isFinite(data0)))){validate10.errors = [{instancePath:instancePath+"/sales",schemaPath:"#/allOf/0/properties/sales/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}}}}else {validate10.errors = [{instancePath,schemaPath:"#/allOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs0 === errors;if(valid0){const _errs5 = errors;if(errors === _errs5){if(data && typeof data == "object" && !Array.isArray(data)){let missing1;if((((data.firstName === undefined) && (missing1 = "firstName")) || ((data.lastName === undefined) && (missing1 = "lastName"))) || ((data.age === undefined) && (missing1 = "age"))){validate10.errors = [{instancePath,schemaPath:"#/allOf/1/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];return false;}else {if(data.firstName !== undefined){const _errs8 = errors;if(typeof data.firstName !== "string"){validate10.errors = [{instancePath:instancePath+"/firstName",schemaPath:"#/allOf/1/properties/firstName/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs8 === errors;}else {var valid2 = true;}if(valid2){if(data.lastName !== undefined){const _errs10 = errors;if(typeof data.lastName !== "string"){validate10.errors = [{instancePath:instancePath+"/lastName",schemaPath:"#/allOf/1/properties/lastName/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs10 === errors;}else {var valid2 = true;}if(valid2){if(data.age !== undefined){let data3 = data.age;const _errs12 = errors;if(!((typeof data3 == "number") && (isFinite(data3)))){validate10.errors = [{instancePath:instancePath+"/age",schemaPath:"#/allOf/1/properties/age/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs12 === errors;}else {var valid2 = true;}}}}}else {validate10.errors = [{instancePath,schemaPath:"#/allOf/1/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs5 === errors;}validate10.errors = vErrors;return errors === 0;};validate10.schema=schema11;",
    "type": "validator",
  },
]
`;
