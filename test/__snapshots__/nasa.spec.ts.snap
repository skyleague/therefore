// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`output generation 1`] = `
[
  {
    "data": {
      "000136-000": {
        "referenceName": "{{000136-000:symbolName}}",
        "srcPath": "examples/nasa/apod/nasa.client.type.ts",
        "symbolName": "GetApodResponse",
        "uniqueSymbolName": "{{000136-000:symbolName}}",
      },
      "000137-000": {
        "referenceName": "{{000137-000:symbolName}}",
        "srcPath": "examples/nasa/apod/nasa.client.ts",
        "symbolName": "Apod",
        "uniqueSymbolName": "{{000137-000:symbolName}}",
      },
    },
    "prettify": true,
    "relativeSource": "./../nasa.schema",
    "targetPath": "examples/nasa/apod/nasa.client.ts",
    "template": "/**
* Generated by @skyleague/therefore@v1.0.0-local
* Do not manually touch this
*/
/* eslint-disable */
import got from 'got'
import type { CancelableRequest, Got, Options, Response } from 'got'
import type { ValidateFunction, ErrorObject } from 'ajv'
import type {IncomingHttpHeaders} from 'http'
import { GetApodResponse } from './nasa.client.type.js'


/**
 * APOD
 * 
 * This endpoint structures the APOD imagery and associated metadata so that it can be repurposed for other applications. In addition, if the concept_tags parameter is set to True, then keywords derived from the image explanation are returned. These keywords could be used as auto-generated hashtags for twitter or instagram feeds; but generally help with discoverability of relevant imagery
 */
export class {{000137-000:symbolName}} {
    public client: Got

    public auth: {
        apiKey?: string | (() => Promise<string>)
    }

    public availableAuth: Set<string>
    public defaultAuth: string[][] | string[] | undefined

    public constructor(
    {
        prefixUrl,
        options,
        auth = {},
        defaultAuth,
    }: {
        prefixUrl: string | 'https://api.nasa.gov/planetary' | 'http://api.nasa.gov/planetary',
        options?: Options,
        auth: {
            apiKey?: string | (() => Promise<string>)
        }
        defaultAuth?: string[][] | string[]
    }) {
        this.client = got.extend(...[{ prefixUrl, throwHttpErrors: false }, options].filter((o): o is Options => o !== undefined))
        this.auth = auth
        this.availableAuth = new Set(Object.keys(auth))
        this.defaultAuth = defaultAuth
    }


    /**
     * Returns images
     * 
     * Returns the picture of the day
     */
    public async getApod({query, auth = [['apiKey']]}: {query?: { date?: string, hd?: string }, auth?: string[][] | string[]} = {})
    {
        return this.awaitResponse(this.buildClient(auth).get(\`apod\`, {
            searchParams: query ?? {},responseType: 'json',
        }), {
            200: {{000136-000:symbolName}},400: {is: (_x: unknown): _x is unknown => true},
        })
    }

    public async awaitResponse<T, S extends Record<PropertyKey, undefined | { is: (o: unknown) => o is T; validate?: ValidateFunction<T> }>>(response: CancelableRequest<Response<unknown>>, schemas: S)
    {
        type FilterStartingWith<S extends PropertyKey, T extends string> = S extends number | string ? \`\${S}\` extends \`\${T}\${infer _X}\` ? S : never : never
        type InferSchemaType<T> = T extends { is: (o: unknown) => o is infer S } ? S : never
        const result = await response
        const validator = schemas[result.statusCode] ?? schemas.default
        if (validator?.is(result.body) === false || result.statusCode < 200 || result.statusCode >= 300)
        {
            return {statusCode: result.statusCode, headers: result.headers, left: result.body, validationErrors: validator?.validate?.errors ?? undefined } as 
            {statusCode: number, headers: IncomingHttpHeaders, left: InferSchemaType<S[keyof S]>, validationErrors?: ErrorObject[]}
        }
        return {statusCode: result.statusCode, headers: result.headers, right: result.body } as 
        {statusCode: number, headers: IncomingHttpHeaders, right: InferSchemaType<S[keyof Pick<S, FilterStartingWith<keyof S, '2' | 'default'>>]>}
    }

    protected buildApiKeyClient(client: Got)
    {
        return client.extend({
        hooks: {
        beforeRequest: [
        async (options) => 
        {
            const apiKey = this.auth.apiKey
            const key = typeof apiKey === 'function' ? await apiKey() : apiKey
            options.headers['api_key'] = key
        }
        ],},})
    }

    protected buildClient(auths: string[][] | string[] | undefined = this.defaultAuth, client: Got = this.client): Got
    {
        const auth = (auths ?? [...this.availableAuth]).map(auth => Array.isArray(auth) ? auth : [auth]).filter((auth) => auth.every((a) => this.availableAuth.has(a)))
        for (const chosen of auth[0] ?? [])
        {
            if (chosen === 'apiKey')
            {
                client = this.buildApiKeyClient(client)
            }
        }
        return client
    }
}

",
    "type": "typescript",
  },
  {
    "data": {
      "000136-000": {
        "referenceName": "{{000136-000:symbolName}}",
        "srcPath": "examples/nasa/apod/nasa.client.type.ts",
        "symbolName": "GetApodResponse",
        "uniqueSymbolName": "{{000136-000:symbolName}}",
      },
      "000137-000": {
        "referenceName": "{{000137-000:symbolName}}",
        "srcPath": "examples/nasa/apod/nasa.client.ts",
        "symbolName": "Apod",
        "uniqueSymbolName": "{{000137-000:symbolName}}",
      },
    },
    "prettify": true,
    "relativeSource": "./../nasa.schema",
    "targetPath": "examples/nasa/apod/nasa.client.type.ts",
    "template": "/**
* Generated by @skyleague/therefore@v1.0.0-local
* Do not manually touch this
*/
/* eslint-disable */
import type { ValidateFunction } from 'ajv'


export type {{000136-000:symbolName}} = (unknown)[]

export const {{000136-000:symbolName}} = {
    validate: (await import('./schemas/get-apod-response.schema.js')).validate10 as unknown as ValidateFunction<{{000136-000:symbolName}}>,
    get schema() { return {{000136-000:symbolName}}.validate.schema},
    get errors() { return {{000136-000:symbolName}}.validate.errors ?? undefined },
    is: (o: unknown): o is {{000136-000:symbolName}} => {{000136-000:symbolName}}.validate(o) === true,
} as const

",
    "type": "typescript",
  },
  {
    "clean": [Function],
    "data": {
      "000136-000": {
        "referenceName": "{{000136-000:symbolName}}",
        "srcPath": "examples/nasa/apod/nasa.client.type.ts",
        "symbolName": "GetApodResponse",
        "uniqueSymbolName": "{{000136-000:symbolName}}",
      },
      "000137-000": {
        "referenceName": "{{000137-000:symbolName}}",
        "srcPath": "examples/nasa/apod/nasa.client.ts",
        "symbolName": "Apod",
        "uniqueSymbolName": "{{000137-000:symbolName}}",
      },
    },
    "prettify": false,
    "relativeSource": "./../nasa.schema",
    "targetPath": "examples/nasa/apod/schemas/get-apod-response.schema.js",
    "template": "/**
 * Generated by Ajv https://ajv.js.org/guide/managing-schemas.html#standalone-validation-code 
 * eslint-disable
 */
const o={$schema:"http://json-schema.org/draft-07/schema#",title:"getApodResponse",type:"array",items:{}};function r(e,{instancePath:a="",parentData:p,parentDataProperty:y,rootData:m=e}={}){let s=null,t=0;return t===0&&!Array.isArray(e)?(r.errors=[{instancePath:a,schemaPath:"#/type",keyword:"type",params:{type:"array"},message:"must be array"}],!1):(r.errors=s,t===0)}r.schema=o;export{r as validate10};
",
    "type": "validator",
  },
  {
    "data": {
      "000133-000": {
        "referenceName": "{{000133-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "GetApiByResponse200",
        "uniqueSymbolName": "{{000133-000:symbolName}}",
      },
      "000134-000": {
        "referenceName": "{{000134-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.ts",
        "symbolName": "Astroids",
        "uniqueSymbolName": "{{000134-000:symbolName}}",
      },
      "000136-000": {
        "referenceName": "{{000136-000:symbolName}}",
        "srcPath": "examples/nasa/apod/nasa.client.type.ts",
        "symbolName": "GetApodResponse",
        "uniqueSymbolName": "{{000136-000:symbolName}}",
      },
      "000137-000": {
        "referenceName": "{{000137-000:symbolName}}",
        "srcPath": "examples/nasa/apod/nasa.client.ts",
        "symbolName": "Apod",
        "uniqueSymbolName": "{{000137-000:symbolName}}",
      },
      "00077-000": {
        "referenceName": "{{00077-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "Project",
        "uniqueSymbolName": "{{00077-000:symbolName}}",
      },
    },
    "prettify": true,
    "relativeSource": "./../nasa.schema",
    "targetPath": "examples/nasa/astroids/nasa.client.ts",
    "template": "/**
* Generated by @skyleague/therefore@v1.0.0-local
* Do not manually touch this
*/
/* eslint-disable */
import got from 'got'
import type { CancelableRequest, Got, Options, Response } from 'got'
import type { ValidateFunction, ErrorObject } from 'ajv'
import type {IncomingHttpHeaders} from 'http'
import { GetApiByResponse200, Project } from './nasa.client.type.js'


/**
 * TechPort
 * 
 * TechPort RESTful API
 */
export class {{000134-000:symbolName}} {
    public client: Got

    public constructor(
    {
        prefixUrl,
        options,
    }: {
        prefixUrl: string | 'http://techport.nasa.gov/api' | 'https://techport.nasa.gov/api',
        options?: Options,
    }) {
        this.client = got.extend(...[{ prefixUrl, throwHttpErrors: false }, options].filter((o): o is Options => o !== undefined))
    }


    /**
     * Returns the swagger specification for the API.
     */
    public async getApi()
    {
        return this.awaitResponse(this.client.get(\`api\`, {
        }), {
            200: {is: (_x: unknown): _x is string => true},
        })
    }

    /**
     * Returns information about a specific technology project.
     */
    public async getApiProjectByFormat({path, query}: {path: { id: string, format: string }, query: { format: string }})
    {
        return this.awaitResponse(this.client.get(\`api/projects/\${path.id}\${path.format}\`, {
            searchParams: query,responseType: 'json',
        }), {
            200: {{00077-000:symbolName}},
        })
    }

    /**
     * Returns a list of available technology project IDs.
     */
    public async getApiBy({path, query}: {path: { format: string }, query: { updatedSince: string, format: string }})
    {
        return this.awaitResponse(this.client.get(\`api/projects\${path.format}\`, {
            searchParams: query,responseType: 'json',
        }), {
            200: {{000133-000:symbolName}},
        })
    }

    public async awaitResponse<T, S extends Record<PropertyKey, undefined | { is: (o: unknown) => o is T; validate?: ValidateFunction<T> }>>(response: CancelableRequest<Response<unknown>>, schemas: S)
    {
        type FilterStartingWith<S extends PropertyKey, T extends string> = S extends number | string ? \`\${S}\` extends \`\${T}\${infer _X}\` ? S : never : never
        type InferSchemaType<T> = T extends { is: (o: unknown) => o is infer S } ? S : never
        const result = await response
        const validator = schemas[result.statusCode] ?? schemas.default
        if (validator?.is(result.body) === false || result.statusCode < 200 || result.statusCode >= 300)
        {
            return {statusCode: result.statusCode, headers: result.headers, left: result.body, validationErrors: validator?.validate?.errors ?? undefined } as 
            {statusCode: number, headers: IncomingHttpHeaders, left: InferSchemaType<S[keyof S]>, validationErrors?: ErrorObject[]}
        }
        return {statusCode: result.statusCode, headers: result.headers, right: result.body } as 
        {statusCode: number, headers: IncomingHttpHeaders, right: InferSchemaType<S[keyof Pick<S, FilterStartingWith<keyof S, '2' | 'default'>>]>}
    }
}

",
    "type": "typescript",
  },
  {
    "data": {
      "000116-000": {
        "referenceName": "{{000116-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "LibraryItem",
        "uniqueSymbolName": "{{000116-000:symbolName}}67bb",
      },
      "000123-000": {
        "referenceName": "{{000123-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "File",
        "uniqueSymbolName": "{{000123-000:symbolName}}67bb",
      },
      "000124-000": {
        "referenceName": "{{000124-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "PrincipalInvestigator",
        "uniqueSymbolName": "{{000124-000:symbolName}}67bb",
      },
      "000125-000": {
        "referenceName": "{{000125-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "ProgramDirector",
        "uniqueSymbolName": "{{000125-000:symbolName}}67bb",
      },
      "000126-000": {
        "referenceName": "{{000126-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "ProgramManager",
        "uniqueSymbolName": "{{000126-000:symbolName}}67bb",
      },
      "000127-000": {
        "referenceName": "{{000127-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "ProjectManager",
        "uniqueSymbolName": "{{000127-000:symbolName}}67bb",
      },
      "000128-000": {
        "referenceName": "{{000128-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "WorkLocation",
        "uniqueSymbolName": "{{000128-000:symbolName}}67bb",
      },
      "000133-000": {
        "referenceName": "{{000133-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "GetApiByResponse200",
        "uniqueSymbolName": "{{000133-000:symbolName}}",
      },
      "000134-000": {
        "referenceName": "{{000134-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.ts",
        "symbolName": "Astroids",
        "uniqueSymbolName": "{{000134-000:symbolName}}",
      },
      "000136-000": {
        "referenceName": "{{000136-000:symbolName}}",
        "srcPath": "examples/nasa/apod/nasa.client.type.ts",
        "symbolName": "GetApodResponse",
        "uniqueSymbolName": "{{000136-000:symbolName}}",
      },
      "000137-000": {
        "referenceName": "{{000137-000:symbolName}}",
        "srcPath": "examples/nasa/apod/nasa.client.ts",
        "symbolName": "Apod",
        "uniqueSymbolName": "{{000137-000:symbolName}}",
      },
      "00077-000": {
        "referenceName": "{{00077-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "Project",
        "uniqueSymbolName": "{{00077-000:symbolName}}",
      },
      "00084-000": {
        "referenceName": "{{00084-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "TechnologyArea",
        "uniqueSymbolName": "{{00084-000:symbolName}}67bb",
      },
      "00085-000": {
        "referenceName": "{{00085-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "CloseoutDocument",
        "uniqueSymbolName": "{{00085-000:symbolName}}67bb",
      },
      "00094-000": {
        "referenceName": "{{00094-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "Organization",
        "uniqueSymbolName": "{{00094-000:symbolName}}67bb",
      },
      "00095-000": {
        "referenceName": "{{00095-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "CoInvestigator",
        "uniqueSymbolName": "{{00095-000:symbolName}}67bb",
      },
      "00096-000": {
        "referenceName": "{{00096-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "Destination",
        "uniqueSymbolName": "{{00096-000:symbolName}}67bb",
      },
    },
    "prettify": true,
    "relativeSource": "./../nasa.schema",
    "targetPath": "examples/nasa/astroids/nasa.client.type.ts",
    "template": "/**
* Generated by @skyleague/therefore@v1.0.0-local
* Do not manually touch this
*/
/* eslint-disable */
import type { ValidateFunction } from 'ajv'


/**
 * Top-level TechPort object representing a NASA technology project and its associated data.
 */
export interface {{00077-000:symbolName}} {
    /**
     * Abbreviated name of the project.
     */
    acronym?: string
    /**
     * List of additional and cross-cutting technology areas associated with the project.
     */
    additionalTas?: ({{00084-000:referenceName}})[]
    /**
     * Describes the benefits offered to NASA funded and planned missions, unfunded or planned missions, commercial space industry, and to the nation.
     */
    benefits?: string
    /**
     * List of document files or links to the project final report closeout documentation.
     */
    closeoutDocuments?: ({{00085-000:referenceName}})[]
    /**
     * The project closeout summary excerpt.
     */
    closeoutSummary?: string
    /**
     * Other government agencies, NASA Mission Directoratres, universities, or commercial entities performing contributing resources to this project.
     */
    coFundingPartners?: ({{00094-000:referenceName}})[]
    /**
     * Names of the additional investigators who are scientists or engineers for this project.
     */
    coInvestigators?: ({{00095-000:referenceName}})[]
    /**
     * A detailed description of the project.
     */
    description?: string
    /**
     * List of the NASA destinations the technology on this project helps achieve.
     */
    destinations?: ({{00096-000:referenceName}})[]
    /**
     * The month and year the project is expected to complete its work.
     */
    endDate?: string
    /**
     * Unique identifier for the project.
     */
    id?: number
    /**
     * ISO 8601 full-date in the format YYYY-MM-DD describing the last time this project was updated.
     */
    lastUpdated?: string
    leadOrganization?: {{00094-000:referenceName}}
    /**
     * List of library items in the project library.
     */
    libraryItems?: ({{000116-000:referenceName}})[]
    /**
     * List of primary technolgy areas (from the NASA Technology Roadmap) associated with the project.
     */
    primaryTas?: ({{00084-000:referenceName}})[]
    /**
     * Names of the Principal Investigators who are the lead scientists or engineers for this project.
     */
    principalInvestigators?: ({{000124-000:referenceName}})[]
    /**
     * Names of the Program Directors responsible for the management of this project.
     */
    programDirectors?: ({{000125-000:referenceName}})[]
    /**
     * Names of the Program Managers responsible for the management of this project.
     */
    programManagers?: ({{000126-000:referenceName}})[]
    /**
     * Names of the Project Managers responsible for the management of this project.
     */
    projectManagers?: ({{000127-000:referenceName}})[]
    /**
     * The NASA Mission Directorate or Office that is the primary funding source for this project.
     */
    responsibleMissionDirectorateOrOffice?: string
    /**
     * The NASA program that is the primary funding source for this project.
     */
    responsibleProgram?: string
    /**
     * The month and year the project was authorized to proceed.
     */
    startDate?: string
    /**
     * Indicates whether the project is currently active, completed, or canceled.
     */
    status?: string
    /**
     * The supported mission type (Projected Mission, Planned Mission, or Pull).
     */
    supportedMissionType?: string
    /**
     * The supporting organizations for this project that are conducting work on the project.
     */
    supportingOrganizations?: ({{00094-000:referenceName}})[]
    /**
     * The current technology maturity (technology readiness level) of the project.
     */
    technologyMaturityCurrent?: string
    /**
     * The estimated technology maturity (technology readiness level) of the project at its end.
     */
    technologyMaturityEnd?: string
    /**
     * The technology maturity (technology readiness level) of the project at its beginning.
     */
    technologyMaturityStart?: string
    /**
     * Title of the project.
     */
    title?: string
    /**
     * The URL for the associated website.
     */
    website?: string
    /**
     * States and territories with people performing work on this project.
     */
    workLocations?: ({{000128-000:referenceName}})[]
}

export const {{00077-000:symbolName}} = {
    validate: (await import('./schemas/project.schema.js')).validate10 as unknown as ValidateFunction<{{00077-000:symbolName}}>,
    get schema() { return {{00077-000:symbolName}}.validate.schema},
    get errors() { return {{00077-000:symbolName}}.validate.errors ?? undefined },
    is: (o: unknown): o is {{00077-000:symbolName}} => {{00077-000:symbolName}}.validate(o) === true,
} as const

export interface {{000133-000:symbolName}} {
    id?: number
    lastUpdated?: string
}

export const {{000133-000:symbolName}} = {
    validate: (await import('./schemas/get-api-by-response200.schema.js')).validate10 as unknown as ValidateFunction<{{000133-000:symbolName}}>,
    get schema() { return {{000133-000:symbolName}}.validate.schema},
    get errors() { return {{000133-000:symbolName}}.validate.errors ?? undefined },
    is: (o: unknown): o is {{000133-000:symbolName}} => {{000133-000:symbolName}}.validate(o) === true,
} as const

/**
 * The Technology Area for a given technology that corresponds to the NASA Technology Roadmap.
 */
export interface {{00084-000:symbolName}} {
    /**
     * The code identifier for the Technology Area.
     */
    code?: string
    /**
     * Unique identifier for the Technology Area.
     */
    id?: number
    /**
     * The name of the Technology Area.
     */
    name?: string
}

/**
 * Represents a file hyperlink or external hyperlink to a project closeout final report artifact.
 */
export type {{00085-000:symbolName}} = string

/**
 * A NASA center/facility associated with an project.
 */
export interface {{00094-000:symbolName}} {
    /**
     * The acronym of the organization.
     */
    acronym?: string
    /**
     * The city in which the organization is located.
     */
    city?: string
    /**
     * The name of the organization.
     */
    name?: string
    /**
     * The state in which the organization is located.
     */
    state?: string
}

/**
 * The name of an investigator who is a scientist or engineer for an project.
 */
export type {{00095-000:symbolName}} = string

/**
 * Represents a destination towards which the technology on this project helps advance the Agency goals.
 */
export type {{00096-000:symbolName}} = string

/**
 * Represents a specific library item that is part of this project.
 */
export interface {{000116-000:symbolName}} {
    /**
     * Date the library item was completed.
     */
    completionDate?: string
    /**
     * Description of the library item.
     */
    description?: string
    /**
     * External URL for the library item.
     */
    externalUrl?: string
    /**
     * List of files associated with the library item.
     */
    files?: ({{000123-000:referenceName}})[]
    /**
     * Unique identifier for the library item.
     */
    id?: number
    /**
     * Publisher of the library item.
     */
    publishedBy?: string
    /**
     * Date the library item was published.
     */
    publishedDate?: string
    /**
     * Title of the library item
     */
    title?: string
    /**
     * Identifies the type of library item, e.g. Image
     */
    type?: string
}

/**
 * Represents a file associated with a library item.
 */
export interface {{000123-000:symbolName}} {
    /**
     * Unique identifier for the file.
     */
    id?: number
    /**
     * The size of the file in bytes.
     */
    size?: string
    /**
     * The TechPort URL at which the file is accessible for download.
     */
    url?: string
}

/**
 * The name of the Principal Investigator who is a lead scientist or engineer for an project.
 */
export type {{000124-000:symbolName}} = string

/**
 * The name of a Program Director responsible for management of an project.
 */
export type {{000125-000:symbolName}} = string

/**
 * The name of a Program Manager responsible for management of an project.
 */
export type {{000126-000:symbolName}} = string

/**
 * The name of a Project Manager responsible for management of an project.
 */
export type {{000127-000:symbolName}} = string

/**
 * A state/territory where work on this project is performed.
 */
export type {{000128-000:symbolName}} = string

",
    "type": "typescript",
  },
  {
    "clean": [Function],
    "data": {
      "000116-000": {
        "referenceName": "{{000116-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "LibraryItem",
        "uniqueSymbolName": "{{000116-000:symbolName}}67bb",
      },
      "000123-000": {
        "referenceName": "{{000123-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "File",
        "uniqueSymbolName": "{{000123-000:symbolName}}67bb",
      },
      "000124-000": {
        "referenceName": "{{000124-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "PrincipalInvestigator",
        "uniqueSymbolName": "{{000124-000:symbolName}}67bb",
      },
      "000125-000": {
        "referenceName": "{{000125-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "ProgramDirector",
        "uniqueSymbolName": "{{000125-000:symbolName}}67bb",
      },
      "000126-000": {
        "referenceName": "{{000126-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "ProgramManager",
        "uniqueSymbolName": "{{000126-000:symbolName}}67bb",
      },
      "000127-000": {
        "referenceName": "{{000127-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "ProjectManager",
        "uniqueSymbolName": "{{000127-000:symbolName}}67bb",
      },
      "000128-000": {
        "referenceName": "{{000128-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "WorkLocation",
        "uniqueSymbolName": "{{000128-000:symbolName}}67bb",
      },
      "000133-000": {
        "referenceName": "{{000133-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "GetApiByResponse200",
        "uniqueSymbolName": "{{000133-000:symbolName}}",
      },
      "000134-000": {
        "referenceName": "{{000134-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.ts",
        "symbolName": "Astroids",
        "uniqueSymbolName": "{{000134-000:symbolName}}",
      },
      "000136-000": {
        "referenceName": "{{000136-000:symbolName}}",
        "srcPath": "examples/nasa/apod/nasa.client.type.ts",
        "symbolName": "GetApodResponse",
        "uniqueSymbolName": "{{000136-000:symbolName}}",
      },
      "000137-000": {
        "referenceName": "{{000137-000:symbolName}}",
        "srcPath": "examples/nasa/apod/nasa.client.ts",
        "symbolName": "Apod",
        "uniqueSymbolName": "{{000137-000:symbolName}}",
      },
      "00077-000": {
        "referenceName": "{{00077-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "Project",
        "uniqueSymbolName": "{{00077-000:symbolName}}",
      },
      "00084-000": {
        "referenceName": "{{00084-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "TechnologyArea",
        "uniqueSymbolName": "{{00084-000:symbolName}}67bb",
      },
      "00085-000": {
        "referenceName": "{{00085-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "CloseoutDocument",
        "uniqueSymbolName": "{{00085-000:symbolName}}67bb",
      },
      "00094-000": {
        "referenceName": "{{00094-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "Organization",
        "uniqueSymbolName": "{{00094-000:symbolName}}67bb",
      },
      "00095-000": {
        "referenceName": "{{00095-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "CoInvestigator",
        "uniqueSymbolName": "{{00095-000:symbolName}}67bb",
      },
      "00096-000": {
        "referenceName": "{{00096-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "Destination",
        "uniqueSymbolName": "{{00096-000:symbolName}}67bb",
      },
    },
    "prettify": false,
    "relativeSource": "./../nasa.schema",
    "targetPath": "examples/nasa/astroids/schemas/project.schema.js",
    "template": "/**
 * Generated by Ajv https://ajv.js.org/guide/managing-schemas.html#standalone-validation-code 
 * eslint-disable
 */
const L={$schema:"http://json-schema.org/draft-07/schema#",title:"project",type:"object",description:"Top-level TechPort object representing a NASA technology project and its associated data.",properties:{acronym:{type:"string",title:"acronym",description:"Abbreviated name of the project."},additionalTas:{type:"array",title:"additionalTas",description:"List of additional and cross-cutting technology areas associated with the project.",items:{$ref:"#/$defs/{{00084-000:uniqueSymbolName}}"}},benefits:{type:"string",title:"benefits",description:"Describes the benefits offered to NASA funded and planned missions, unfunded or planned missions, commercial space industry, and to the nation."},closeoutDocuments:{type:"array",title:"closeoutDocuments",description:"List of document files or links to the project final report closeout documentation.",items:{$ref:"#/$defs/{{00085-000:uniqueSymbolName}}"}},closeoutSummary:{type:"string",title:"closeoutSummary",description:"The project closeout summary excerpt."},coFundingPartners:{type:"array",title:"coFundingPartners",description:"Other government agencies, NASA Mission Directoratres, universities, or commercial entities performing contributing resources to this project.",items:{$ref:"#/$defs/{{00094-000:uniqueSymbolName}}"}},coInvestigators:{type:"array",title:"coInvestigators",description:"Names of the additional investigators who are scientists or engineers for this project.",items:{$ref:"#/$defs/{{00095-000:uniqueSymbolName}}"}},description:{type:"string",title:"description",description:"A detailed description of the project."},destinations:{type:"array",title:"destinations",description:"List of the NASA destinations the technology on this project helps achieve.",items:{$ref:"#/$defs/{{00096-000:uniqueSymbolName}}"}},endDate:{type:"string",title:"endDate",description:"The month and year the project is expected to complete its work."},id:{type:"integer",title:"id",description:"Unique identifier for the project."},lastUpdated:{type:"string",title:"lastUpdated",description:"ISO 8601 full-date in the format YYYY-MM-DD describing the last time this project was updated.",format:"date"},leadOrganization:{title:"leadOrganization",$ref:"#/$defs/{{00094-000:uniqueSymbolName}}"},libraryItems:{type:"array",title:"libraryItems",description:"List of library items in the project library.",items:{$ref:"#/$defs/{{000116-000:uniqueSymbolName}}"}},primaryTas:{type:"array",title:"primaryTas",description:"List of primary technolgy areas (from the NASA Technology Roadmap) associated with the project.",items:{$ref:"#/$defs/{{00084-000:uniqueSymbolName}}"}},principalInvestigators:{type:"array",title:"principalInvestigators",description:"Names of the Principal Investigators who are the lead scientists or engineers for this project.",items:{$ref:"#/$defs/{{000124-000:uniqueSymbolName}}"}},programDirectors:{type:"array",title:"programDirectors",description:"Names of the Program Directors responsible for the management of this project.",items:{$ref:"#/$defs/{{000125-000:uniqueSymbolName}}"}},programManagers:{type:"array",title:"programManagers",description:"Names of the Program Managers responsible for the management of this project.",items:{$ref:"#/$defs/{{000126-000:uniqueSymbolName}}"}},projectManagers:{type:"array",title:"projectManagers",description:"Names of the Project Managers responsible for the management of this project.",items:{$ref:"#/$defs/{{000127-000:uniqueSymbolName}}"}},responsibleMissionDirectorateOrOffice:{type:"string",title:"responsibleMissionDirectorateOrOffice",description:"The NASA Mission Directorate or Office that is the primary funding source for this project."},responsibleProgram:{type:"string",title:"responsibleProgram",description:"The NASA program that is the primary funding source for this project."},startDate:{type:"string",title:"startDate",description:"The month and year the project was authorized to proceed."},status:{type:"string",title:"status",description:"Indicates whether the project is currently active, completed, or canceled."},supportedMissionType:{type:"string",title:"supportedMissionType",description:"The supported mission type (Projected Mission, Planned Mission, or Pull)."},supportingOrganizations:{type:"array",title:"supportingOrganizations",description:"The supporting organizations for this project that are conducting work on the project.",items:{$ref:"#/$defs/{{00094-000:uniqueSymbolName}}"}},technologyMaturityCurrent:{type:"string",title:"technologyMaturityCurrent",description:"The current technology maturity (technology readiness level) of the project."},technologyMaturityEnd:{type:"string",title:"technologyMaturityEnd",description:"The estimated technology maturity (technology readiness level) of the project at its end."},technologyMaturityStart:{type:"string",title:"technologyMaturityStart",description:"The technology maturity (technology readiness level) of the project at its beginning."},title:{type:"string",title:"title",description:"Title of the project."},website:{type:"string",title:"website",description:"The URL for the associated website."},workLocations:{type:"array",title:"workLocations",description:"States and territories with people performing work on this project.",items:{$ref:"#/$defs/{{000128-000:uniqueSymbolName}}"}}},additionalProperties:!0,$defs:{"{{00084-000:uniqueSymbolName}}":{type:"object",title:"{{00084-000:uniqueSymbolName}}",description:"The Technology Area for a given technology that corresponds to the NASA Technology Roadmap.",properties:{code:{type:"string",title:"code",description:"The code identifier for the Technology Area."},id:{type:"integer",title:"id",description:"Unique identifier for the Technology Area."},name:{type:"string",title:"name",description:"The name of the Technology Area."}},additionalProperties:!0},"{{00085-000:uniqueSymbolName}}":{type:"string",title:"{{00085-000:uniqueSymbolName}}",description:"Represents a file hyperlink or external hyperlink to a project closeout final report artifact."},"{{00094-000:uniqueSymbolName}}":{type:"object",title:"{{00094-000:uniqueSymbolName}}",description:"A NASA center/facility associated with an project.",properties:{acronym:{type:"string",title:"acronym",description:"The acronym of the organization."},city:{type:"string",title:"city",description:"The city in which the organization is located."},name:{type:"string",title:"name",description:"The name of the organization."},state:{type:"string",title:"state",description:"The state in which the organization is located."}},additionalProperties:!0},"{{00095-000:uniqueSymbolName}}":{type:"string",title:"{{00095-000:uniqueSymbolName}}",description:"The name of an investigator who is a scientist or engineer for an project."},"{{00096-000:uniqueSymbolName}}":{type:"string",title:"{{00096-000:uniqueSymbolName}}",description:"Represents a destination towards which the technology on this project helps advance the Agency goals."},"{{000116-000:uniqueSymbolName}}":{type:"object",title:"{{000116-000:uniqueSymbolName}}",description:"Represents a specific library item that is part of this project.",properties:{completionDate:{type:"string",title:"completionDate",description:"Date the library item was completed."},description:{type:"string",title:"description",description:"Description of the library item."},externalUrl:{type:"string",title:"externalUrl",description:"External URL for the library item."},files:{type:"array",title:"files",description:"List of files associated with the library item.",items:{$ref:"#/$defs/{{000123-000:uniqueSymbolName}}"}},id:{type:"integer",title:"id",description:"Unique identifier for the library item."},publishedBy:{type:"string",title:"publishedBy",description:"Publisher of the library item."},publishedDate:{type:"string",title:"publishedDate",description:"Date the library item was published."},title:{type:"string",title:"title",description:"Title of the library item"},type:{type:"string",title:"type",description:"Identifies the type of library item, e.g. Image"}},additionalProperties:!0},"{{000123-000:uniqueSymbolName}}":{type:"object",title:"{{000123-000:uniqueSymbolName}}",description:"Represents a file associated with a library item.",properties:{id:{type:"integer",title:"id",description:"Unique identifier for the file."},size:{type:"string",title:"size",description:"The size of the file in bytes."},url:{type:"string",title:"url",description:"The TechPort URL at which the file is accessible for download."}},additionalProperties:!0},"{{000124-000:uniqueSymbolName}}":{type:"string",title:"{{000124-000:uniqueSymbolName}}",description:"The name of the Principal Investigator who is a lead scientist or engineer for an project."},"{{000125-000:uniqueSymbolName}}":{type:"string",title:"{{000125-000:uniqueSymbolName}}",description:"The name of a Program Director responsible for management of an project."},"{{000126-000:uniqueSymbolName}}":{type:"string",title:"{{000126-000:uniqueSymbolName}}",description:"The name of a Program Manager responsible for management of an project."},"{{000127-000:uniqueSymbolName}}":{type:"string",title:"{{000127-000:uniqueSymbolName}}",description:"The name of a Project Manager responsible for management of an project."},"{{000128-000:uniqueSymbolName}}":{type:"string",title:"{{000128-000:uniqueSymbolName}}",description:"A state/territory where work on this project is performed."}}},R={type:"object",title:"{{00084-000:uniqueSymbolName}}",description:"The Technology Area for a given technology that corresponds to the NASA Technology Roadmap.",properties:{code:{type:"string",title:"code",description:"The code identifier for the Technology Area."},id:{type:"integer",title:"id",description:"Unique identifier for the Technology Area."},name:{type:"string",title:"name",description:"The name of the Technology Area."}},additionalProperties:!0},x={type:"string",title:"{{00085-000:uniqueSymbolName}}",description:"Represents a file hyperlink or external hyperlink to a project closeout final report artifact."},E={type:"object",title:"{{00094-000:uniqueSymbolName}}",description:"A NASA center/facility associated with an project.",properties:{acronym:{type:"string",title:"acronym",description:"The acronym of the organization."},city:{type:"string",title:"city",description:"The city in which the organization is located."},name:{type:"string",title:"name",description:"The name of the organization."},state:{type:"string",title:"state",description:"The state in which the organization is located."}},additionalProperties:!0},B={type:"string",title:"{{00095-000:uniqueSymbolName}}",description:"The name of an investigator who is a scientist or engineer for an project."},C={type:"string",title:"{{00096-000:uniqueSymbolName}}",description:"Represents a destination towards which the technology on this project helps advance the Agency goals."},Y={type:"string",title:"{{000124-000:uniqueSymbolName}}",description:"The name of the Principal Investigator who is a lead scientist or engineer for an project."},G={type:"string",title:"{{000125-000:uniqueSymbolName}}",description:"The name of a Program Director responsible for management of an project."},H={type:"string",title:"{{000126-000:uniqueSymbolName}}",description:"The name of a Program Manager responsible for management of an project."},J={type:"string",title:"{{000127-000:uniqueSymbolName}}",description:"The name of a Project Manager responsible for management of an project."},K={type:"string",title:"{{000128-000:uniqueSymbolName}}",description:"A state/territory where work on this project is performed."},Q={type:"object",title:"{{000116-000:uniqueSymbolName}}",description:"Represents a specific library item that is part of this project.",properties:{completionDate:{type:"string",title:"completionDate",description:"Date the library item was completed."},description:{type:"string",title:"description",description:"Description of the library item."},externalUrl:{type:"string",title:"externalUrl",description:"External URL for the library item."},files:{type:"array",title:"files",description:"List of files associated with the library item.",items:{$ref:"#/$defs/{{000123-000:uniqueSymbolName}}"}},id:{type:"integer",title:"id",description:"Unique identifier for the library item."},publishedBy:{type:"string",title:"publishedBy",description:"Publisher of the library item."},publishedDate:{type:"string",title:"publishedDate",description:"Date the library item was published."},title:{type:"string",title:"title",description:"Title of the library item"},type:{type:"string",title:"type",description:"Identifies the type of library item, e.g. Image"}},additionalProperties:!0},V={type:"object",title:"{{000123-000:uniqueSymbolName}}",description:"Represents a file associated with a library item.",properties:{id:{type:"integer",title:"id",description:"Unique identifier for the file."},size:{type:"string",title:"size",description:"The size of the file in bytes."},url:{type:"string",title:"url",description:"The TechPort URL at which the file is accessible for download."}},additionalProperties:!0};function f(i,{instancePath:a="",parentData:I,parentDataProperty:U,rootData:D=i}={}){let v=null,e=0;if(e===0)if(i&&typeof i=="object"&&!Array.isArray(i)){if(i.completionDate!==void 0){const l=e;if(typeof i.completionDate!="string")return f.errors=[{instancePath:a+"/completionDate",schemaPath:"#/properties/completionDate/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;var r=l===e}else var r=!0;if(r){if(i.description!==void 0){const l=e;if(typeof i.description!="string")return f.errors=[{instancePath:a+"/description",schemaPath:"#/properties/description/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;var r=l===e}else var r=!0;if(r){if(i.externalUrl!==void 0){const l=e;if(typeof i.externalUrl!="string")return f.errors=[{instancePath:a+"/externalUrl",schemaPath:"#/properties/externalUrl/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;var r=l===e}else var r=!0;if(r){if(i.files!==void 0){let l=i.files;const w=e;if(e===w)if(Array.isArray(l)){var S=!0;const k=l.length;for(let h=0;h<k;h++){let c=l[h];const j=e;if(e===e)if(c&&typeof c=="object"&&!Array.isArray(c)){if(c.id!==void 0){let u=c.id;const q=e;if(!(typeof u=="number"&&!(u%1)&&!isNaN(u)&&isFinite(u)))return f.errors=[{instancePath:a+"/files/"+h+"/id",schemaPath:"#/$defs/{{000123-000:uniqueSymbolName}}/properties/id/type",keyword:"type",params:{type:"integer"},message:"must be integer"}],!1;var d=q===e}else var d=!0;if(d){if(c.size!==void 0){const u=e;if(typeof c.size!="string")return f.errors=[{instancePath:a+"/files/"+h+"/size",schemaPath:"#/$defs/{{000123-000:uniqueSymbolName}}/properties/size/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;var d=u===e}else var d=!0;if(d)if(c.url!==void 0){const u=e;if(typeof c.url!="string")return f.errors=[{instancePath:a+"/files/"+h+"/url",schemaPath:"#/$defs/{{000123-000:uniqueSymbolName}}/properties/url/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;var d=u===e}else var d=!0}}else return f.errors=[{instancePath:a+"/files/"+h,schemaPath:"#/$defs/{{000123-000:uniqueSymbolName}}/type",keyword:"type",params:{type:"object"},message:"must be object"}],!1;var S=j===e;if(!S)break}}else return f.errors=[{instancePath:a+"/files",schemaPath:"#/properties/files/type",keyword:"type",params:{type:"array"},message:"must be array"}],!1;var r=w===e}else var r=!0;if(r){if(i.id!==void 0){let l=i.id;const w=e;if(!(typeof l=="number"&&!(l%1)&&!isNaN(l)&&isFinite(l)))return f.errors=[{instancePath:a+"/id",schemaPath:"#/properties/id/type",keyword:"type",params:{type:"integer"},message:"must be integer"}],!1;var r=w===e}else var r=!0;if(r){if(i.publishedBy!==void 0){const l=e;if(typeof i.publishedBy!="string")return f.errors=[{instancePath:a+"/publishedBy",schemaPath:"#/properties/publishedBy/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;var r=l===e}else var r=!0;if(r){if(i.publishedDate!==void 0){const l=e;if(typeof i.publishedDate!="string")return f.errors=[{instancePath:a+"/publishedDate",schemaPath:"#/properties/publishedDate/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;var r=l===e}else var r=!0;if(r){if(i.title!==void 0){const l=e;if(typeof i.title!="string")return f.errors=[{instancePath:a+"/title",schemaPath:"#/properties/title/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;var r=l===e}else var r=!0;if(r)if(i.type!==void 0){const l=e;if(typeof i.type!="string")return f.errors=[{instancePath:a+"/type",schemaPath:"#/properties/type/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;var r=l===e}else var r=!0}}}}}}}}else return f.errors=[{instancePath:a,schemaPath:"#/type",keyword:"type",params:{type:"object"},message:"must be object"}],!1;return f.errors=v,e===0}function n(i,{instancePath:a="",parentData:I,parentDataProperty:U,rootData:D=i}={}){let v=null,e=0;if(e===0)if(i&&typeof i=="object"&&!Array.isArray(i)){if(i.acronym!==void 0){const t=e;if(typeof i.acronym!="string")return n.errors=[{instancePath:a+"/acronym",schemaPath:"#/properties/acronym/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;var r=t===e}else var r=!0;if(r){if(i.additionalTas!==void 0){let t=i.additionalTas;const p=e;if(e===p)if(Array.isArray(t)){var S=!0;const m=t.length;for(let s=0;s<m;s++){let o=t[s];const N=e;if(e===e)if(o&&typeof o=="object"&&!Array.isArray(o)){if(o.code!==void 0){const y=e;if(typeof o.code!="string")return n.errors=[{instancePath:a+"/additionalTas/"+s+"/code",schemaPath:"#/$defs/{{00084-000:uniqueSymbolName}}/properties/code/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;var d=y===e}else var d=!0;if(d){if(o.id!==void 0){let y=o.id;const A=e;if(!(typeof y=="number"&&!(y%1)&&!isNaN(y)&&isFinite(y)))return n.errors=[{instancePath:a+"/additionalTas/"+s+"/id",schemaPath:"#/$defs/{{00084-000:uniqueSymbolName}}/properties/id/type",keyword:"type",params:{type:"integer"},message:"must be integer"}],!1;var d=A===e}else var d=!0;if(d)if(o.name!==void 0){const y=e;if(typeof o.name!="string")return n.errors=[{instancePath:a+"/additionalTas/"+s+"/name",schemaPath:"#/$defs/{{00084-000:uniqueSymbolName}}/properties/name/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;var d=y===e}else var d=!0}}else return n.errors=[{instancePath:a+"/additionalTas/"+s,schemaPath:"#/$defs/{{00084-000:uniqueSymbolName}}/type",keyword:"type",params:{type:"object"},message:"must be object"}],!1;var S=N===e;if(!S)break}}else return n.errors=[{instancePath:a+"/additionalTas",schemaPath:"#/properties/additionalTas/type",keyword:"type",params:{type:"array"},message:"must be array"}],!1;var r=p===e}else var r=!0;if(r){if(i.benefits!==void 0){const t=e;if(typeof i.benefits!="string")return n.errors=[{instancePath:a+"/benefits",schemaPath:"#/properties/benefits/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;var r=t===e}else var r=!0;if(r){if(i.closeoutDocuments!==void 0){let t=i.closeoutDocuments;const p=e;if(e===p)if(Array.isArray(t)){var l=!0;const m=t.length;for(let s=0;s<m;s++){const o=e;if(typeof t[s]!="string")return n.errors=[{instancePath:a+"/closeoutDocuments/"+s,schemaPath:"#/$defs/{{00085-000:uniqueSymbolName}}/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;var l=o===e;if(!l)break}}else return n.errors=[{instancePath:a+"/closeoutDocuments",schemaPath:"#/properties/closeoutDocuments/type",keyword:"type",params:{type:"array"},message:"must be array"}],!1;var r=p===e}else var r=!0;if(r){if(i.closeoutSummary!==void 0){const t=e;if(typeof i.closeoutSummary!="string")return n.errors=[{instancePath:a+"/closeoutSummary",schemaPath:"#/properties/closeoutSummary/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;var r=t===e}else var r=!0;if(r){if(i.coFundingPartners!==void 0){let t=i.coFundingPartners;const p=e;if(e===p)if(Array.isArray(t)){var w=!0;const m=t.length;for(let s=0;s<m;s++){let o=t[s];const N=e;if(e===e)if(o&&typeof o=="object"&&!Array.isArray(o)){if(o.acronym!==void 0){const y=e;if(typeof o.acronym!="string")return n.errors=[{instancePath:a+"/coFundingPartners/"+s+"/acronym",schemaPath:"#/$defs/{{00094-000:uniqueSymbolName}}/properties/acronym/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;var g=y===e}else var g=!0;if(g){if(o.city!==void 0){const y=e;if(typeof o.city!="string")return n.errors=[{instancePath:a+"/coFundingPartners/"+s+"/city",schemaPath:"#/$defs/{{00094-000:uniqueSymbolName}}/properties/city/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;var g=y===e}else var g=!0;if(g){if(o.name!==void 0){const y=e;if(typeof o.name!="string")return n.errors=[{instancePath:a+"/coFundingPartners/"+s+"/name",schemaPath:"#/$defs/{{00094-000:uniqueSymbolName}}/properties/name/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;var g=y===e}else var g=!0;if(g)if(o.state!==void 0){const y=e;if(typeof o.state!="string")return n.errors=[{instancePath:a+"/coFundingPartners/"+s+"/state",schemaPath:"#/$defs/{{00094-000:uniqueSymbolName}}/properties/state/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;var g=y===e}else var g=!0}}}else return n.errors=[{instancePath:a+"/coFundingPartners/"+s,schemaPath:"#/$defs/{{00094-000:uniqueSymbolName}}/type",keyword:"type",params:{type:"object"},message:"must be object"}],!1;var w=N===e;if(!w)break}}else return n.errors=[{instancePath:a+"/coFundingPartners",schemaPath:"#/properties/coFundingPartners/type",keyword:"type",params:{type:"array"},message:"must be array"}],!1;var r=p===e}else var r=!0;if(r){if(i.coInvestigators!==void 0){let t=i.coInvestigators;const p=e;if(e===p)if(Array.isArray(t)){var k=!0;const m=t.length;for(let s=0;s<m;s++){const o=e;if(typeof t[s]!="string")return n.errors=[{instancePath:a+"/coInvestigators/"+s,schemaPath:"#/$defs/{{00095-000:uniqueSymbolName}}/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;var k=o===e;if(!k)break}}else return n.errors=[{instancePath:a+"/coInvestigators",schemaPath:"#/properties/coInvestigators/type",keyword:"type",params:{type:"array"},message:"must be array"}],!1;var r=p===e}else var r=!0;if(r){if(i.description!==void 0){const t=e;if(typeof i.description!="string")return n.errors=[{instancePath:a+"/description",schemaPath:"#/properties/description/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;var r=t===e}else var r=!0;if(r){if(i.destinations!==void 0){let t=i.destinations;const p=e;if(e===p)if(Array.isArray(t)){var h=!0;const m=t.length;for(let s=0;s<m;s++){const o=e;if(typeof t[s]!="string")return n.errors=[{instancePath:a+"/destinations/"+s,schemaPath:"#/$defs/{{00096-000:uniqueSymbolName}}/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;var h=o===e;if(!h)break}}else return n.errors=[{instancePath:a+"/destinations",schemaPath:"#/properties/destinations/type",keyword:"type",params:{type:"array"},message:"must be array"}],!1;var r=p===e}else var r=!0;if(r){if(i.endDate!==void 0){const t=e;if(typeof i.endDate!="string")return n.errors=[{instancePath:a+"/endDate",schemaPath:"#/properties/endDate/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;var r=t===e}else var r=!0;if(r){if(i.id!==void 0){let t=i.id;const p=e;if(!(typeof t=="number"&&!(t%1)&&!isNaN(t)&&isFinite(t)))return n.errors=[{instancePath:a+"/id",schemaPath:"#/properties/id/type",keyword:"type",params:{type:"integer"},message:"must be integer"}],!1;var r=p===e}else var r=!0;if(r){if(i.lastUpdated!==void 0){const t=e;if(e===t&&e===t&&typeof i.lastUpdated!="string")return n.errors=[{instancePath:a+"/lastUpdated",schemaPath:"#/properties/lastUpdated/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;var r=t===e}else var r=!0;if(r){if(i.leadOrganization!==void 0){let t=i.leadOrganization;const p=e;if(e===e)if(t&&typeof t=="object"&&!Array.isArray(t)){if(t.acronym!==void 0){const s=e;if(typeof t.acronym!="string")return n.errors=[{instancePath:a+"/leadOrganization/acronym",schemaPath:"#/$defs/{{00094-000:uniqueSymbolName}}/properties/acronym/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;var c=s===e}else var c=!0;if(c){if(t.city!==void 0){const s=e;if(typeof t.city!="string")return n.errors=[{instancePath:a+"/leadOrganization/city",schemaPath:"#/$defs/{{00094-000:uniqueSymbolName}}/properties/city/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;var c=s===e}else var c=!0;if(c){if(t.name!==void 0){const s=e;if(typeof t.name!="string")return n.errors=[{instancePath:a+"/leadOrganization/name",schemaPath:"#/$defs/{{00094-000:uniqueSymbolName}}/properties/name/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;var c=s===e}else var c=!0;if(c)if(t.state!==void 0){const s=e;if(typeof t.state!="string")return n.errors=[{instancePath:a+"/leadOrganization/state",schemaPath:"#/$defs/{{00094-000:uniqueSymbolName}}/properties/state/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;var c=s===e}else var c=!0}}}else return n.errors=[{instancePath:a+"/leadOrganization",schemaPath:"#/$defs/{{00094-000:uniqueSymbolName}}/type",keyword:"type",params:{type:"object"},message:"must be object"}],!1;var r=p===e}else var r=!0;if(r){if(i.libraryItems!==void 0){let t=i.libraryItems;const p=e;if(e===p)if(Array.isArray(t)){var j=!0;const m=t.length;for(let s=0;s<m;s++){const o=e;f(t[s],{instancePath:a+"/libraryItems/"+s,parentData:t,parentDataProperty:s,rootData:D})||(v=v===null?f.errors:v.concat(f.errors),e=v.length);var j=o===e;if(!j)break}}else return n.errors=[{instancePath:a+"/libraryItems",schemaPath:"#/properties/libraryItems/type",keyword:"type",params:{type:"array"},message:"must be array"}],!1;var r=p===e}else var r=!0;if(r){if(i.primaryTas!==void 0){let t=i.primaryTas;const p=e;if(e===p)if(Array.isArray(t)){var _=!0;const m=t.length;for(let s=0;s<m;s++){let o=t[s];const N=e;if(e===e)if(o&&typeof o=="object"&&!Array.isArray(o)){if(o.code!==void 0){const y=e;if(typeof o.code!="string")return n.errors=[{instancePath:a+"/primaryTas/"+s+"/code",schemaPath:"#/$defs/{{00084-000:uniqueSymbolName}}/properties/code/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;var P=y===e}else var P=!0;if(P){if(o.id!==void 0){let y=o.id;const A=e;if(!(typeof y=="number"&&!(y%1)&&!isNaN(y)&&isFinite(y)))return n.errors=[{instancePath:a+"/primaryTas/"+s+"/id",schemaPath:"#/$defs/{{00084-000:uniqueSymbolName}}/properties/id/type",keyword:"type",params:{type:"integer"},message:"must be integer"}],!1;var P=A===e}else var P=!0;if(P)if(o.name!==void 0){const y=e;if(typeof o.name!="string")return n.errors=[{instancePath:a+"/primaryTas/"+s+"/name",schemaPath:"#/$defs/{{00084-000:uniqueSymbolName}}/properties/name/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;var P=y===e}else var P=!0}}else return n.errors=[{instancePath:a+"/primaryTas/"+s,schemaPath:"#/$defs/{{00084-000:uniqueSymbolName}}/type",keyword:"type",params:{type:"object"},message:"must be object"}],!1;var _=N===e;if(!_)break}}else return n.errors=[{instancePath:a+"/primaryTas",schemaPath:"#/properties/primaryTas/type",keyword:"type",params:{type:"array"},message:"must be array"}],!1;var r=p===e}else var r=!0;if(r){if(i.principalInvestigators!==void 0){let t=i.principalInvestigators;const p=e;if(e===p)if(Array.isArray(t)){var u=!0;const m=t.length;for(let s=0;s<m;s++){const o=e;if(typeof t[s]!="string")return n.errors=[{instancePath:a+"/principalInvestigators/"+s,schemaPath:"#/$defs/{{000124-000:uniqueSymbolName}}/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;var u=o===e;if(!u)break}}else return n.errors=[{instancePath:a+"/principalInvestigators",schemaPath:"#/properties/principalInvestigators/type",keyword:"type",params:{type:"array"},message:"must be array"}],!1;var r=p===e}else var r=!0;if(r){if(i.programDirectors!==void 0){let t=i.programDirectors;const p=e;if(e===p)if(Array.isArray(t)){var q=!0;const m=t.length;for(let s=0;s<m;s++){const o=e;if(typeof t[s]!="string")return n.errors=[{instancePath:a+"/programDirectors/"+s,schemaPath:"#/$defs/{{000125-000:uniqueSymbolName}}/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;var q=o===e;if(!q)break}}else return n.errors=[{instancePath:a+"/programDirectors",schemaPath:"#/properties/programDirectors/type",keyword:"type",params:{type:"array"},message:"must be array"}],!1;var r=p===e}else var r=!0;if(r){if(i.programManagers!==void 0){let t=i.programManagers;const p=e;if(e===p)if(Array.isArray(t)){var $=!0;const m=t.length;for(let s=0;s<m;s++){const o=e;if(typeof t[s]!="string")return n.errors=[{instancePath:a+"/programManagers/"+s,schemaPath:"#/$defs/{{000126-000:uniqueSymbolName}}/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;var $=o===e;if(!$)break}}else return n.errors=[{instancePath:a+"/programManagers",schemaPath:"#/properties/programManagers/type",keyword:"type",params:{type:"array"},message:"must be array"}],!1;var r=p===e}else var r=!0;if(r){if(i.projectManagers!==void 0){let t=i.projectManagers;const p=e;if(e===p)if(Array.isArray(t)){var M=!0;const m=t.length;for(let s=0;s<m;s++){const o=e;if(typeof t[s]!="string")return n.errors=[{instancePath:a+"/projectManagers/"+s,schemaPath:"#/$defs/{{000127-000:uniqueSymbolName}}/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;var M=o===e;if(!M)break}}else return n.errors=[{instancePath:a+"/projectManagers",schemaPath:"#/properties/projectManagers/type",keyword:"type",params:{type:"array"},message:"must be array"}],!1;var r=p===e}else var r=!0;if(r){if(i.responsibleMissionDirectorateOrOffice!==void 0){const t=e;if(typeof i.responsibleMissionDirectorateOrOffice!="string")return n.errors=[{instancePath:a+"/responsibleMissionDirectorateOrOffice",schemaPath:"#/properties/responsibleMissionDirectorateOrOffice/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;var r=t===e}else var r=!0;if(r){if(i.responsibleProgram!==void 0){const t=e;if(typeof i.responsibleProgram!="string")return n.errors=[{instancePath:a+"/responsibleProgram",schemaPath:"#/properties/responsibleProgram/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;var r=t===e}else var r=!0;if(r){if(i.startDate!==void 0){const t=e;if(typeof i.startDate!="string")return n.errors=[{instancePath:a+"/startDate",schemaPath:"#/properties/startDate/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;var r=t===e}else var r=!0;if(r){if(i.status!==void 0){const t=e;if(typeof i.status!="string")return n.errors=[{instancePath:a+"/status",schemaPath:"#/properties/status/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;var r=t===e}else var r=!0;if(r){if(i.supportedMissionType!==void 0){const t=e;if(typeof i.supportedMissionType!="string")return n.errors=[{instancePath:a+"/supportedMissionType",schemaPath:"#/properties/supportedMissionType/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;var r=t===e}else var r=!0;if(r){if(i.supportingOrganizations!==void 0){let t=i.supportingOrganizations;const p=e;if(e===p)if(Array.isArray(t)){var z=!0;const m=t.length;for(let s=0;s<m;s++){let o=t[s];const N=e;if(e===e)if(o&&typeof o=="object"&&!Array.isArray(o)){if(o.acronym!==void 0){const y=e;if(typeof o.acronym!="string")return n.errors=[{instancePath:a+"/supportingOrganizations/"+s+"/acronym",schemaPath:"#/$defs/{{00094-000:uniqueSymbolName}}/properties/acronym/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;var b=y===e}else var b=!0;if(b){if(o.city!==void 0){const y=e;if(typeof o.city!="string")return n.errors=[{instancePath:a+"/supportingOrganizations/"+s+"/city",schemaPath:"#/$defs/{{00094-000:uniqueSymbolName}}/properties/city/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;var b=y===e}else var b=!0;if(b){if(o.name!==void 0){const y=e;if(typeof o.name!="string")return n.errors=[{instancePath:a+"/supportingOrganizations/"+s+"/name",schemaPath:"#/$defs/{{00094-000:uniqueSymbolName}}/properties/name/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;var b=y===e}else var b=!0;if(b)if(o.state!==void 0){const y=e;if(typeof o.state!="string")return n.errors=[{instancePath:a+"/supportingOrganizations/"+s+"/state",schemaPath:"#/$defs/{{00094-000:uniqueSymbolName}}/properties/state/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;var b=y===e}else var b=!0}}}else return n.errors=[{instancePath:a+"/supportingOrganizations/"+s,schemaPath:"#/$defs/{{00094-000:uniqueSymbolName}}/type",keyword:"type",params:{type:"object"},message:"must be object"}],!1;var z=N===e;if(!z)break}}else return n.errors=[{instancePath:a+"/supportingOrganizations",schemaPath:"#/properties/supportingOrganizations/type",keyword:"type",params:{type:"array"},message:"must be array"}],!1;var r=p===e}else var r=!0;if(r){if(i.technologyMaturityCurrent!==void 0){const t=e;if(typeof i.technologyMaturityCurrent!="string")return n.errors=[{instancePath:a+"/technologyMaturityCurrent",schemaPath:"#/properties/technologyMaturityCurrent/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;var r=t===e}else var r=!0;if(r){if(i.technologyMaturityEnd!==void 0){const t=e;if(typeof i.technologyMaturityEnd!="string")return n.errors=[{instancePath:a+"/technologyMaturityEnd",schemaPath:"#/properties/technologyMaturityEnd/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;var r=t===e}else var r=!0;if(r){if(i.technologyMaturityStart!==void 0){const t=e;if(typeof i.technologyMaturityStart!="string")return n.errors=[{instancePath:a+"/technologyMaturityStart",schemaPath:"#/properties/technologyMaturityStart/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;var r=t===e}else var r=!0;if(r){if(i.title!==void 0){const t=e;if(typeof i.title!="string")return n.errors=[{instancePath:a+"/title",schemaPath:"#/properties/title/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;var r=t===e}else var r=!0;if(r){if(i.website!==void 0){const t=e;if(typeof i.website!="string")return n.errors=[{instancePath:a+"/website",schemaPath:"#/properties/website/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;var r=t===e}else var r=!0;if(r)if(i.workLocations!==void 0){let t=i.workLocations;const p=e;if(e===p)if(Array.isArray(t)){var O=!0;const m=t.length;for(let s=0;s<m;s++){const o=e;if(typeof t[s]!="string")return n.errors=[{instancePath:a+"/workLocations/"+s,schemaPath:"#/$defs/{{000128-000:uniqueSymbolName}}/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;var O=o===e;if(!O)break}}else return n.errors=[{instancePath:a+"/workLocations",schemaPath:"#/properties/workLocations/type",keyword:"type",params:{type:"array"},message:"must be array"}],!1;var r=p===e}else var r=!0}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}else return n.errors=[{instancePath:a,schemaPath:"#/type",keyword:"type",params:{type:"object"},message:"must be object"}],!1;return n.errors=v,e===0}n.schema=L;export{n as validate10};
",
    "type": "validator",
  },
  {
    "clean": [Function],
    "data": {
      "000116-000": {
        "referenceName": "{{000116-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "LibraryItem",
        "uniqueSymbolName": "{{000116-000:symbolName}}67bb",
      },
      "000123-000": {
        "referenceName": "{{000123-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "File",
        "uniqueSymbolName": "{{000123-000:symbolName}}67bb",
      },
      "000124-000": {
        "referenceName": "{{000124-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "PrincipalInvestigator",
        "uniqueSymbolName": "{{000124-000:symbolName}}67bb",
      },
      "000125-000": {
        "referenceName": "{{000125-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "ProgramDirector",
        "uniqueSymbolName": "{{000125-000:symbolName}}67bb",
      },
      "000126-000": {
        "referenceName": "{{000126-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "ProgramManager",
        "uniqueSymbolName": "{{000126-000:symbolName}}67bb",
      },
      "000127-000": {
        "referenceName": "{{000127-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "ProjectManager",
        "uniqueSymbolName": "{{000127-000:symbolName}}67bb",
      },
      "000128-000": {
        "referenceName": "{{000128-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "WorkLocation",
        "uniqueSymbolName": "{{000128-000:symbolName}}67bb",
      },
      "000133-000": {
        "referenceName": "{{000133-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "GetApiByResponse200",
        "uniqueSymbolName": "{{000133-000:symbolName}}",
      },
      "000134-000": {
        "referenceName": "{{000134-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.ts",
        "symbolName": "Astroids",
        "uniqueSymbolName": "{{000134-000:symbolName}}",
      },
      "000136-000": {
        "referenceName": "{{000136-000:symbolName}}",
        "srcPath": "examples/nasa/apod/nasa.client.type.ts",
        "symbolName": "GetApodResponse",
        "uniqueSymbolName": "{{000136-000:symbolName}}",
      },
      "000137-000": {
        "referenceName": "{{000137-000:symbolName}}",
        "srcPath": "examples/nasa/apod/nasa.client.ts",
        "symbolName": "Apod",
        "uniqueSymbolName": "{{000137-000:symbolName}}",
      },
      "00077-000": {
        "referenceName": "{{00077-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "Project",
        "uniqueSymbolName": "{{00077-000:symbolName}}",
      },
      "00084-000": {
        "referenceName": "{{00084-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "TechnologyArea",
        "uniqueSymbolName": "{{00084-000:symbolName}}67bb",
      },
      "00085-000": {
        "referenceName": "{{00085-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "CloseoutDocument",
        "uniqueSymbolName": "{{00085-000:symbolName}}67bb",
      },
      "00094-000": {
        "referenceName": "{{00094-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "Organization",
        "uniqueSymbolName": "{{00094-000:symbolName}}67bb",
      },
      "00095-000": {
        "referenceName": "{{00095-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "CoInvestigator",
        "uniqueSymbolName": "{{00095-000:symbolName}}67bb",
      },
      "00096-000": {
        "referenceName": "{{00096-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "Destination",
        "uniqueSymbolName": "{{00096-000:symbolName}}67bb",
      },
    },
    "prettify": false,
    "relativeSource": "./../nasa.schema",
    "targetPath": "examples/nasa/astroids/schemas/get-api-by-response200.schema.js",
    "template": "/**
 * Generated by Ajv https://ajv.js.org/guide/managing-schemas.html#standalone-validation-code 
 * eslint-disable
 */
const n={$schema:"http://json-schema.org/draft-07/schema#",title:"getApiByResponse200",type:"object",properties:{id:{type:"integer",title:"id"},lastUpdated:{type:"string",title:"lastUpdated"}},additionalProperties:!0};function s(e,{instancePath:i="",parentData:d,parentDataProperty:l,rootData:y=e}={}){let p=null,t=0;if(t===0)if(e&&typeof e=="object"&&!Array.isArray(e)){if(e.id!==void 0){let r=e.id;const o=t;if(!(typeof r=="number"&&!(r%1)&&!isNaN(r)&&isFinite(r)))return s.errors=[{instancePath:i+"/id",schemaPath:"#/properties/id/type",keyword:"type",params:{type:"integer"},message:"must be integer"}],!1;var a=o===t}else var a=!0;if(a)if(e.lastUpdated!==void 0){const r=t;if(typeof e.lastUpdated!="string")return s.errors=[{instancePath:i+"/lastUpdated",schemaPath:"#/properties/lastUpdated/type",keyword:"type",params:{type:"string"},message:"must be string"}],!1;var a=r===t}else var a=!0}else return s.errors=[{instancePath:i,schemaPath:"#/type",keyword:"type",params:{type:"object"},message:"must be object"}],!1;return s.errors=p,t===0}s.schema=n;export{s as validate10};
",
    "type": "validator",
  },
]
`;
