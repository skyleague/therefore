// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`output generation 1`] = `
[
  {
    "data": {
      "000130-000": {
        "referenceName": "{{000130-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "Project",
        "uniqueSymbolName": "{{000130-000:symbolName}}",
      },
      "000136-000": {
        "referenceName": "{{000136-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "GetApiByResponse",
        "uniqueSymbolName": "{{000136-000:symbolName}}",
      },
      "000138-000": {
        "referenceName": "{{000138-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.ts",
        "symbolName": "Astroids",
        "uniqueSymbolName": "{{000138-000:symbolName}}",
      },
    },
    "prettify": true,
    "relativeSource": "./../nasa.schema",
    "targetPath": "examples/nasa/astroids/nasa.client.ts",
    "template": "/**
* Generated by @skyleague/therefore@v1.0.0-local
* Do not manually touch this
*/
/* eslint-disable */
import got from 'got'
import type { CancelableRequest, Got, Options, Response } from 'got'
import type { ValidateFunction, ErrorObject } from 'ajv'
import {IncomingHttpHeaders} from 'http'
import { GetApiByResponse, Project } from './nasa.client.type'


export class {{000138-000:symbolName}} {
    public client: Got

    public constructor(
    {
        prefixUrl,
        options,
    }: {
        prefixUrl: string | 'http://techport.nasa.gov/api' | 'https://techport.nasa.gov/api',
        options?: Options,
    }) {
        this.client = got.extend(...[{ prefixUrl, throwHttpErrors: false }, options].filter((o): o is Options => o !== undefined))
    }


    /**
     * Returns the swagger specification for the API.
     */
    public async getApi()
    {
        return this.client.get(\`api\`)
    }

    /**
     * Returns information about a specific technology project.
     */
    public async getApiProjectByFormat({path, query}: {path: { id: string, format: string }, query: { format: string }})
    {
        return this.awaitResponse(this.client.get(\`api/projects/\${path.id}\${path.format}\`, {
            searchParams: query,responseType:'json',
        }), {
            200: {{000130-000:symbolName}},
        })
    }

    /**
     * Returns a list of available technology project IDs.
     */
    public async getApiBy({path, query}: {path: { format: string }, query: { updatedSince: string, format: string }})
    {
        return this.awaitResponse(this.client.get(\`api/projects\${path.format}\`, {
            searchParams: query,responseType:'json',
        }), {
            200: {{000136-000:symbolName}},
        })
    }

    public async awaitResponse<T, S extends Record<PropertyKey, undefined | { is: (o: unknown) => o is T; validate: ValidateFunction<T> }>>(response: CancelableRequest<Response<unknown>>, schemas: S)
    {
        type FilterStartingWith<S extends PropertyKey, T extends string> = S extends number | string ? \`\${S}\` extends \`\${T}\${infer _X}\` ? S : never : never
        type InferSchemaType<T> = T extends { is: (o: unknown) => o is infer S } ? S : never
        const result = await response
        const validator = schemas[result.statusCode]
        if (validator?.is(result.body) === false || result.statusCode < 200 || result.statusCode >= 300)
        {
            return {statusCode: result.statusCode, headers: result.headers, left: result.body, validationErrors: validator?.validate.errors ?? undefined } as 
            {statusCode: number, headers: IncomingHttpHeaders, left: InferSchemaType<S[keyof S]>, validationErrors?: ErrorObject[]}
        }
        return {statusCode: result.statusCode, headers: result.headers, right: result.body } as 
        {statusCode: number, headers: IncomingHttpHeaders, right: InferSchemaType<S[keyof Pick<S, FilterStartingWith<keyof S, '2'>>]>}
    }
}

",
    "type": "typescript",
  },
  {
    "data": {
      "00011-000": {
        "referenceName": "{{00011-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "CloseoutDocument",
        "uniqueSymbolName": "{{00011-000:symbolName}}67bb",
      },
      "000130-000": {
        "referenceName": "{{000130-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "Project",
        "uniqueSymbolName": "{{000130-000:symbolName}}",
      },
      "000136-000": {
        "referenceName": "{{000136-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "GetApiByResponse",
        "uniqueSymbolName": "{{000136-000:symbolName}}",
      },
      "000138-000": {
        "referenceName": "{{000138-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.ts",
        "symbolName": "Astroids",
        "uniqueSymbolName": "{{000138-000:symbolName}}",
      },
      "00017-000": {
        "referenceName": "{{00017-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "TechnologyArea",
        "uniqueSymbolName": "{{00017-000:symbolName}}67bb",
      },
      "00023-000": {
        "referenceName": "{{00023-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "CoInvestigator",
        "uniqueSymbolName": "{{00023-000:symbolName}}67bb",
      },
      "00029-000": {
        "referenceName": "{{00029-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "Destination",
        "uniqueSymbolName": "{{00029-000:symbolName}}67bb",
      },
      "00036-000": {
        "referenceName": "{{00036-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "Organization",
        "uniqueSymbolName": "{{00036-000:symbolName}}67bb",
      },
      "00048-000": {
        "referenceName": "{{00048-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "PrincipalInvestigator",
        "uniqueSymbolName": "{{00048-000:symbolName}}67bb",
      },
      "00054-000": {
        "referenceName": "{{00054-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "ProgramDirector",
        "uniqueSymbolName": "{{00054-000:symbolName}}67bb",
      },
      "00059-000": {
        "referenceName": "{{00059-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "ProgramManager",
        "uniqueSymbolName": "{{00059-000:symbolName}}67bb",
      },
      "00065-000": {
        "referenceName": "{{00065-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "ProjectManager",
        "uniqueSymbolName": "{{00065-000:symbolName}}67bb",
      },
      "00070-000": {
        "referenceName": "{{00070-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "File",
        "uniqueSymbolName": "{{00070-000:symbolName}}67bb",
      },
      "00085-000": {
        "referenceName": "{{00085-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "LibraryItem",
        "uniqueSymbolName": "{{00085-000:symbolName}}67bb",
      },
      "00096-000": {
        "referenceName": "{{00096-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "WorkLocation",
        "uniqueSymbolName": "{{00096-000:symbolName}}67bb",
      },
    },
    "prettify": true,
    "relativeSource": "./../nasa.schema",
    "targetPath": "examples/nasa/astroids/nasa.client.type.ts",
    "template": "/**
* Generated by @skyleague/therefore@v1.0.0-local
* Do not manually touch this
*/
/* eslint-disable */
import type { ValidateFunction } from 'ajv'


/**
 * Top-level TechPort object representing a NASA technology project and its associated data.
 */
export interface {{000130-000:symbolName}} {
    /**
     * Abbreviated name of the project.
     */
    acronym?: string
    /**
     * List of additional and cross-cutting technology areas associated with the project.
     */
    additionalTas?: ({{00017-000:referenceName}})[]
    /**
     * Describes the benefits offered to NASA funded and planned missions, unfunded or planned missions, commercial space industry, and to the nation.
     */
    benefits?: string
    /**
     * List of document files or links to the project final report closeout documentation.
     */
    closeoutDocuments?: ({{00011-000:referenceName}})[]
    /**
     * The project closeout summary excerpt.
     */
    closeoutSummary?: string
    /**
     * Other government agencies, NASA Mission Directoratres, universities, or commercial entities performing contributing resources to this project.
     */
    coFundingPartners?: ({{00036-000:referenceName}})[]
    /**
     * Names of the additional investigators who are scientists or engineers for this project.
     */
    coInvestigators?: ({{00023-000:referenceName}})[]
    /**
     * A detailed description of the project.
     */
    description?: string
    /**
     * List of the NASA destinations the technology on this project helps achieve.
     */
    destinations?: ({{00029-000:referenceName}})[]
    /**
     * The month and year the project is expected to complete its work.
     */
    endDate?: string
    /**
     * Unique identifier for the project.
     */
    id?: number
    /**
     * ISO 8601 full-date in the format YYYY-MM-DD describing the last time this project was updated.
     */
    lastUpdated?: string
    leadOrganization?: {{00036-000:referenceName}}
    /**
     * List of library items in the project library.
     */
    libraryItems?: ({{00085-000:referenceName}})[]
    /**
     * List of primary technolgy areas (from the NASA Technology Roadmap) associated with the project.
     */
    primaryTas?: ({{00017-000:referenceName}})[]
    /**
     * Names of the Principal Investigators who are the lead scientists or engineers for this project.
     */
    principalInvestigators?: ({{00048-000:referenceName}})[]
    /**
     * Names of the Program Directors responsible for the management of this project.
     */
    programDirectors?: ({{00054-000:referenceName}})[]
    /**
     * Names of the Program Managers responsible for the management of this project.
     */
    programManagers?: ({{00059-000:referenceName}})[]
    /**
     * Names of the Project Managers responsible for the management of this project.
     */
    projectManagers?: ({{00065-000:referenceName}})[]
    /**
     * The NASA Mission Directorate or Office that is the primary funding source for this project.
     */
    responsibleMissionDirectorateOrOffice?: string
    /**
     * The NASA program that is the primary funding source for this project.
     */
    responsibleProgram?: string
    /**
     * The month and year the project was authorized to proceed.
     */
    startDate?: string
    /**
     * Indicates whether the project is currently active, completed, or canceled.
     */
    status?: string
    /**
     * The supported mission type (Projected Mission, Planned Mission, or Pull).
     */
    supportedMissionType?: string
    /**
     * The supporting organizations for this project that are conducting work on the project.
     */
    supportingOrganizations?: ({{00036-000:referenceName}})[]
    /**
     * The current technology maturity (technology readiness level) of the project.
     */
    technologyMaturityCurrent?: string
    /**
     * The estimated technology maturity (technology readiness level) of the project at its end.
     */
    technologyMaturityEnd?: string
    /**
     * The technology maturity (technology readiness level) of the project at its beginning.
     */
    technologyMaturityStart?: string
    /**
     * Title of the project.
     */
    title?: string
    /**
     * The URL for the associated website.
     */
    website?: string
    /**
     * States and territories with people performing work on this project.
     */
    workLocations?: ({{00096-000:referenceName}})[]
}

export const {{000130-000:symbolName}} = {
    validate: require('./schemas/project.schema.js') as ValidateFunction<{{000130-000:symbolName}}>,
    get schema() { return {{000130-000:symbolName}}.validate.schema},
    is: (o: unknown): o is {{000130-000:symbolName}} => {{000130-000:symbolName}}.validate(o) === true,
} as const

export interface {{000136-000:symbolName}} {
    id?: number
    lastUpdated?: string
}

export const {{000136-000:symbolName}} = {
    validate: require('./schemas/get-api-by-response.schema.js') as ValidateFunction<{{000136-000:symbolName}}>,
    get schema() { return {{000136-000:symbolName}}.validate.schema},
    is: (o: unknown): o is {{000136-000:symbolName}} => {{000136-000:symbolName}}.validate(o) === true,
} as const

/**
 * The Technology Area for a given technology that corresponds to the NASA Technology Roadmap.
 */
export interface {{00017-000:symbolName}} {
    /**
     * The code identifier for the Technology Area.
     */
    code?: string
    /**
     * Unique identifier for the Technology Area.
     */
    id?: number
    /**
     * The name of the Technology Area.
     */
    name?: string
}

/**
 * Represents a file hyperlink or external hyperlink to a project closeout final report artifact.
 */
export type {{00011-000:symbolName}} = string

/**
 * A NASA center/facility associated with an project.
 */
export interface {{00036-000:symbolName}} {
    /**
     * The acronym of the organization.
     */
    acronym?: string
    /**
     * The city in which the organization is located.
     */
    city?: string
    /**
     * The name of the organization.
     */
    name?: string
    /**
     * The state in which the organization is located.
     */
    state?: string
}

/**
 * The name of an investigator who is a scientist or engineer for an project.
 */
export type {{00023-000:symbolName}} = string

/**
 * Represents a destination towards which the technology on this project helps advance the Agency goals.
 */
export type {{00029-000:symbolName}} = string

/**
 * Represents a specific library item that is part of this project.
 */
export interface {{00085-000:symbolName}} {
    /**
     * Date the library item was completed.
     */
    completionDate?: string
    /**
     * Description of the library item.
     */
    description?: string
    /**
     * External URL for the library item.
     */
    externalUrl?: string
    /**
     * List of files associated with the library item.
     */
    files?: ({{00070-000:referenceName}})[]
    /**
     * Unique identifier for the library item.
     */
    id?: number
    /**
     * Publisher of the library item.
     */
    publishedBy?: string
    /**
     * Date the library item was published.
     */
    publishedDate?: string
    /**
     * Title of the library item
     */
    title?: string
    /**
     * Identifies the type of library item, e.g. Image
     */
    type?: string
}

/**
 * Represents a file associated with a library item.
 */
export interface {{00070-000:symbolName}} {
    /**
     * Unique identifier for the file.
     */
    id?: number
    /**
     * The size of the file in bytes.
     */
    size?: string
    /**
     * The TechPort URL at which the file is accessible for download.
     */
    url?: string
}

/**
 * The name of the Principal Investigator who is a lead scientist or engineer for an project.
 */
export type {{00048-000:symbolName}} = string

/**
 * The name of a Program Director responsible for management of an project.
 */
export type {{00054-000:symbolName}} = string

/**
 * The name of a Program Manager responsible for management of an project.
 */
export type {{00059-000:symbolName}} = string

/**
 * The name of a Project Manager responsible for management of an project.
 */
export type {{00065-000:symbolName}} = string

/**
 * A state/territory where work on this project is performed.
 */
export type {{00096-000:symbolName}} = string

",
    "type": "typescript",
  },
  {
    "data": {
      "00011-000": {
        "referenceName": "{{00011-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "CloseoutDocument",
        "uniqueSymbolName": "{{00011-000:symbolName}}67bb",
      },
      "000130-000": {
        "referenceName": "{{000130-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "Project",
        "uniqueSymbolName": "{{000130-000:symbolName}}",
      },
      "000136-000": {
        "referenceName": "{{000136-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "GetApiByResponse",
        "uniqueSymbolName": "{{000136-000:symbolName}}",
      },
      "000138-000": {
        "referenceName": "{{000138-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.ts",
        "symbolName": "Astroids",
        "uniqueSymbolName": "{{000138-000:symbolName}}",
      },
      "00017-000": {
        "referenceName": "{{00017-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "TechnologyArea",
        "uniqueSymbolName": "{{00017-000:symbolName}}67bb",
      },
      "00023-000": {
        "referenceName": "{{00023-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "CoInvestigator",
        "uniqueSymbolName": "{{00023-000:symbolName}}67bb",
      },
      "00029-000": {
        "referenceName": "{{00029-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "Destination",
        "uniqueSymbolName": "{{00029-000:symbolName}}67bb",
      },
      "00036-000": {
        "referenceName": "{{00036-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "Organization",
        "uniqueSymbolName": "{{00036-000:symbolName}}67bb",
      },
      "00048-000": {
        "referenceName": "{{00048-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "PrincipalInvestigator",
        "uniqueSymbolName": "{{00048-000:symbolName}}67bb",
      },
      "00054-000": {
        "referenceName": "{{00054-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "ProgramDirector",
        "uniqueSymbolName": "{{00054-000:symbolName}}67bb",
      },
      "00059-000": {
        "referenceName": "{{00059-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "ProgramManager",
        "uniqueSymbolName": "{{00059-000:symbolName}}67bb",
      },
      "00065-000": {
        "referenceName": "{{00065-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "ProjectManager",
        "uniqueSymbolName": "{{00065-000:symbolName}}67bb",
      },
      "00070-000": {
        "referenceName": "{{00070-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "File",
        "uniqueSymbolName": "{{00070-000:symbolName}}67bb",
      },
      "00085-000": {
        "referenceName": "{{00085-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "LibraryItem",
        "uniqueSymbolName": "{{00085-000:symbolName}}67bb",
      },
      "00096-000": {
        "referenceName": "{{00096-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "WorkLocation",
        "uniqueSymbolName": "{{00096-000:symbolName}}67bb",
      },
    },
    "prettify": false,
    "relativeSource": "./../nasa.schema",
    "targetPath": "examples/nasa/astroids/schemas/project.schema.js",
    "template": "/**
 * Generated by @skyleague/therefore
 * eslint-disable
 */
"use strict";module.exports = validate10;module.exports.default = validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","title":"project","type":"object","description":"Top-level TechPort object representing a NASA technology project and its associated data.","properties":{"acronym":{"type":"string","title":"acronym","description":"Abbreviated name of the project."},"additionalTas":{"type":"array","title":"additionalTas","description":"List of additional and cross-cutting technology areas associated with the project.","items":{"description":"List of additional and cross-cutting technology areas associated with the project.","$ref":"#/$defs/{{00017-000:uniqueSymbolName}}"}},"benefits":{"type":"string","title":"benefits","description":"Describes the benefits offered to NASA funded and planned missions, unfunded or planned missions, commercial space industry, and to the nation."},"closeoutDocuments":{"type":"array","title":"closeoutDocuments","description":"List of document files or links to the project final report closeout documentation.","items":{"description":"List of document files or links to the project final report closeout documentation.","$ref":"#/$defs/{{00011-000:uniqueSymbolName}}"}},"closeoutSummary":{"type":"string","title":"closeoutSummary","description":"The project closeout summary excerpt."},"coFundingPartners":{"type":"array","title":"coFundingPartners","description":"Other government agencies, NASA Mission Directoratres, universities, or commercial entities performing contributing resources to this project.","items":{"description":"Other government agencies, NASA Mission Directoratres, universities, or commercial entities performing contributing resources to this project.","$ref":"#/$defs/{{00036-000:uniqueSymbolName}}"}},"coInvestigators":{"type":"array","title":"coInvestigators","description":"Names of the additional investigators who are scientists or engineers for this project.","items":{"description":"Names of the additional investigators who are scientists or engineers for this project.","$ref":"#/$defs/{{00023-000:uniqueSymbolName}}"}},"description":{"type":"string","title":"description","description":"A detailed description of the project."},"destinations":{"type":"array","title":"destinations","description":"List of the NASA destinations the technology on this project helps achieve.","items":{"description":"List of the NASA destinations the technology on this project helps achieve.","$ref":"#/$defs/{{00029-000:uniqueSymbolName}}"}},"endDate":{"type":"string","title":"endDate","description":"The month and year the project is expected to complete its work."},"id":{"type":"integer","title":"id","description":"Unique identifier for the project."},"lastUpdated":{"type":"string","title":"lastUpdated","description":"ISO 8601 full-date in the format YYYY-MM-DD describing the last time this project was updated.","format":"date"},"leadOrganization":{"title":"leadOrganization","$ref":"#/$defs/{{00036-000:uniqueSymbolName}}"},"libraryItems":{"type":"array","title":"libraryItems","description":"List of library items in the project library.","items":{"description":"List of library items in the project library.","$ref":"#/$defs/{{00085-000:uniqueSymbolName}}"}},"primaryTas":{"type":"array","title":"primaryTas","description":"List of primary technolgy areas (from the NASA Technology Roadmap) associated with the project.","items":{"description":"List of primary technolgy areas (from the NASA Technology Roadmap) associated with the project.","$ref":"#/$defs/{{00017-000:uniqueSymbolName}}"}},"principalInvestigators":{"type":"array","title":"principalInvestigators","description":"Names of the Principal Investigators who are the lead scientists or engineers for this project.","items":{"description":"Names of the Principal Investigators who are the lead scientists or engineers for this project.","$ref":"#/$defs/{{00048-000:uniqueSymbolName}}"}},"programDirectors":{"type":"array","title":"programDirectors","description":"Names of the Program Directors responsible for the management of this project.","items":{"description":"Names of the Program Directors responsible for the management of this project.","$ref":"#/$defs/{{00054-000:uniqueSymbolName}}"}},"programManagers":{"type":"array","title":"programManagers","description":"Names of the Program Managers responsible for the management of this project.","items":{"description":"Names of the Program Managers responsible for the management of this project.","$ref":"#/$defs/{{00059-000:uniqueSymbolName}}"}},"projectManagers":{"type":"array","title":"projectManagers","description":"Names of the Project Managers responsible for the management of this project.","items":{"description":"Names of the Project Managers responsible for the management of this project.","$ref":"#/$defs/{{00065-000:uniqueSymbolName}}"}},"responsibleMissionDirectorateOrOffice":{"type":"string","title":"responsibleMissionDirectorateOrOffice","description":"The NASA Mission Directorate or Office that is the primary funding source for this project."},"responsibleProgram":{"type":"string","title":"responsibleProgram","description":"The NASA program that is the primary funding source for this project."},"startDate":{"type":"string","title":"startDate","description":"The month and year the project was authorized to proceed."},"status":{"type":"string","title":"status","description":"Indicates whether the project is currently active, completed, or canceled."},"supportedMissionType":{"type":"string","title":"supportedMissionType","description":"The supported mission type (Projected Mission, Planned Mission, or Pull)."},"supportingOrganizations":{"type":"array","title":"supportingOrganizations","description":"The supporting organizations for this project that are conducting work on the project.","items":{"description":"The supporting organizations for this project that are conducting work on the project.","$ref":"#/$defs/{{00036-000:uniqueSymbolName}}"}},"technologyMaturityCurrent":{"type":"string","title":"technologyMaturityCurrent","description":"The current technology maturity (technology readiness level) of the project."},"technologyMaturityEnd":{"type":"string","title":"technologyMaturityEnd","description":"The estimated technology maturity (technology readiness level) of the project at its end."},"technologyMaturityStart":{"type":"string","title":"technologyMaturityStart","description":"The technology maturity (technology readiness level) of the project at its beginning."},"title":{"type":"string","title":"title","description":"Title of the project."},"website":{"type":"string","title":"website","description":"The URL for the associated website."},"workLocations":{"type":"array","title":"workLocations","description":"States and territories with people performing work on this project.","items":{"description":"States and territories with people performing work on this project.","$ref":"#/$defs/{{00096-000:uniqueSymbolName}}"}}},"additionalProperties":false,"$defs":{"{{00017-000:uniqueSymbolName}}":{"type":"object","title":"{{00017-000:uniqueSymbolName}}","description":"The Technology Area for a given technology that corresponds to the NASA Technology Roadmap.","properties":{"code":{"type":"string","title":"code","description":"The code identifier for the Technology Area."},"id":{"type":"integer","title":"id","description":"Unique identifier for the Technology Area."},"name":{"type":"string","title":"name","description":"The name of the Technology Area."}},"additionalProperties":false},"{{00011-000:uniqueSymbolName}}":{"type":"string","title":"{{00011-000:uniqueSymbolName}}","description":"Represents a file hyperlink or external hyperlink to a project closeout final report artifact."},"{{00036-000:uniqueSymbolName}}":{"type":"object","title":"{{00036-000:uniqueSymbolName}}","description":"A NASA center/facility associated with an project.","properties":{"acronym":{"type":"string","title":"acronym","description":"The acronym of the organization."},"city":{"type":"string","title":"city","description":"The city in which the organization is located."},"name":{"type":"string","title":"name","description":"The name of the organization."},"state":{"type":"string","title":"state","description":"The state in which the organization is located."}},"additionalProperties":false},"{{00023-000:uniqueSymbolName}}":{"type":"string","title":"{{00023-000:uniqueSymbolName}}","description":"The name of an investigator who is a scientist or engineer for an project."},"{{00029-000:uniqueSymbolName}}":{"type":"string","title":"{{00029-000:uniqueSymbolName}}","description":"Represents a destination towards which the technology on this project helps advance the Agency goals."},"{{00085-000:uniqueSymbolName}}":{"type":"object","title":"{{00085-000:uniqueSymbolName}}","description":"Represents a specific library item that is part of this project.","properties":{"completionDate":{"type":"string","title":"completionDate","description":"Date the library item was completed."},"description":{"type":"string","title":"description","description":"Description of the library item."},"externalUrl":{"type":"string","title":"externalUrl","description":"External URL for the library item."},"files":{"type":"array","title":"files","description":"List of files associated with the library item.","items":{"description":"List of files associated with the library item.","$ref":"#/$defs/{{00070-000:uniqueSymbolName}}"}},"id":{"type":"integer","title":"id","description":"Unique identifier for the library item."},"publishedBy":{"type":"string","title":"publishedBy","description":"Publisher of the library item."},"publishedDate":{"type":"string","title":"publishedDate","description":"Date the library item was published."},"title":{"type":"string","title":"title","description":"Title of the library item"},"type":{"type":"string","title":"type","description":"Identifies the type of library item, e.g. Image"}},"additionalProperties":false},"{{00070-000:uniqueSymbolName}}":{"type":"object","title":"{{00070-000:uniqueSymbolName}}","description":"Represents a file associated with a library item.","properties":{"id":{"type":"integer","title":"id","description":"Unique identifier for the file."},"size":{"type":"string","title":"size","description":"The size of the file in bytes."},"url":{"type":"string","title":"url","description":"The TechPort URL at which the file is accessible for download."}},"additionalProperties":false},"{{00048-000:uniqueSymbolName}}":{"type":"string","title":"{{00048-000:uniqueSymbolName}}","description":"The name of the Principal Investigator who is a lead scientist or engineer for an project."},"{{00054-000:uniqueSymbolName}}":{"type":"string","title":"{{00054-000:uniqueSymbolName}}","description":"The name of a Program Director responsible for management of an project."},"{{00059-000:uniqueSymbolName}}":{"type":"string","title":"{{00059-000:uniqueSymbolName}}","description":"The name of a Program Manager responsible for management of an project."},"{{00065-000:uniqueSymbolName}}":{"type":"string","title":"{{00065-000:uniqueSymbolName}}","description":"The name of a Project Manager responsible for management of an project."},"{{00096-000:uniqueSymbolName}}":{"type":"string","title":"{{00096-000:uniqueSymbolName}}","description":"A state/territory where work on this project is performed."}}};const schema12 = {"type":"object","title":"{{00017-000:uniqueSymbolName}}","description":"The Technology Area for a given technology that corresponds to the NASA Technology Roadmap.","properties":{"code":{"type":"string","title":"code","description":"The code identifier for the Technology Area."},"id":{"type":"integer","title":"id","description":"Unique identifier for the Technology Area."},"name":{"type":"string","title":"name","description":"The name of the Technology Area."}},"additionalProperties":false};const schema13 = {"type":"string","title":"{{00011-000:uniqueSymbolName}}","description":"Represents a file hyperlink or external hyperlink to a project closeout final report artifact."};const schema14 = {"type":"object","title":"{{00036-000:uniqueSymbolName}}","description":"A NASA center/facility associated with an project.","properties":{"acronym":{"type":"string","title":"acronym","description":"The acronym of the organization."},"city":{"type":"string","title":"city","description":"The city in which the organization is located."},"name":{"type":"string","title":"name","description":"The name of the organization."},"state":{"type":"string","title":"state","description":"The state in which the organization is located."}},"additionalProperties":false};const schema15 = {"type":"string","title":"{{00023-000:uniqueSymbolName}}","description":"The name of an investigator who is a scientist or engineer for an project."};const schema16 = {"type":"string","title":"{{00029-000:uniqueSymbolName}}","description":"Represents a destination towards which the technology on this project helps advance the Agency goals."};const schema21 = {"type":"string","title":"{{00048-000:uniqueSymbolName}}","description":"The name of the Principal Investigator who is a lead scientist or engineer for an project."};const schema22 = {"type":"string","title":"{{00054-000:uniqueSymbolName}}","description":"The name of a Program Director responsible for management of an project."};const schema23 = {"type":"string","title":"{{00059-000:uniqueSymbolName}}","description":"The name of a Program Manager responsible for management of an project."};const schema24 = {"type":"string","title":"{{00065-000:uniqueSymbolName}}","description":"The name of a Project Manager responsible for management of an project."};const schema26 = {"type":"string","title":"{{00096-000:uniqueSymbolName}}","description":"A state/territory where work on this project is performed."};const func4 = Object.prototype.hasOwnProperty;const schema18 = {"type":"object","title":"{{00085-000:uniqueSymbolName}}","description":"Represents a specific library item that is part of this project.","properties":{"completionDate":{"type":"string","title":"completionDate","description":"Date the library item was completed."},"description":{"type":"string","title":"description","description":"Description of the library item."},"externalUrl":{"type":"string","title":"externalUrl","description":"External URL for the library item."},"files":{"type":"array","title":"files","description":"List of files associated with the library item.","items":{"description":"List of files associated with the library item.","$ref":"#/$defs/{{00070-000:uniqueSymbolName}}"}},"id":{"type":"integer","title":"id","description":"Unique identifier for the library item."},"publishedBy":{"type":"string","title":"publishedBy","description":"Publisher of the library item."},"publishedDate":{"type":"string","title":"publishedDate","description":"Date the library item was published."},"title":{"type":"string","title":"title","description":"Title of the library item"},"type":{"type":"string","title":"type","description":"Identifies the type of library item, e.g. Image"}},"additionalProperties":false};const schema19 = {"type":"object","title":"{{00070-000:uniqueSymbolName}}","description":"Represents a file associated with a library item.","properties":{"id":{"type":"integer","title":"id","description":"Unique identifier for the file."},"size":{"type":"string","title":"size","description":"The size of the file in bytes."},"url":{"type":"string","title":"url","description":"The TechPort URL at which the file is accessible for download."}},"additionalProperties":false};function validate11(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){const _errs1 = errors;for(const key0 in data){if(!(func4.call(schema18.properties, key0))){validate11.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.completionDate !== undefined){const _errs2 = errors;if(typeof data.completionDate !== "string"){validate11.errors = [{instancePath:instancePath+"/completionDate",schemaPath:"#/properties/completionDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.description !== undefined){const _errs4 = errors;if(typeof data.description !== "string"){validate11.errors = [{instancePath:instancePath+"/description",schemaPath:"#/properties/description/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs4 === errors;}else {var valid0 = true;}if(valid0){if(data.externalUrl !== undefined){const _errs6 = errors;if(typeof data.externalUrl !== "string"){validate11.errors = [{instancePath:instancePath+"/externalUrl",schemaPath:"#/properties/externalUrl/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs6 === errors;}else {var valid0 = true;}if(valid0){if(data.files !== undefined){let data3 = data.files;const _errs8 = errors;if(errors === _errs8){if(Array.isArray(data3)){var valid1 = true;const len0 = data3.length;for(let i0=0; i0<len0; i0++){let data4 = data3[i0];const _errs10 = errors;const _errs11 = errors;if(errors === _errs11){if(data4 && typeof data4 == "object" && !Array.isArray(data4)){const _errs13 = errors;for(const key1 in data4){if(!(((key1 === "id") || (key1 === "size")) || (key1 === "url"))){validate11.errors = [{instancePath:instancePath+"/files/" + i0,schemaPath:"#/$defs/{{00070-000:uniqueSymbolName}}/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key1},message:"must NOT have additional properties"}];return false;break;}}if(_errs13 === errors){if(data4.id !== undefined){let data5 = data4.id;const _errs14 = errors;if(!(((typeof data5 == "number") && (!(data5 % 1) && !isNaN(data5))) && (isFinite(data5)))){validate11.errors = [{instancePath:instancePath+"/files/" + i0+"/id",schemaPath:"#/$defs/{{00070-000:uniqueSymbolName}}/properties/id/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid3 = _errs14 === errors;}else {var valid3 = true;}if(valid3){if(data4.size !== undefined){const _errs16 = errors;if(typeof data4.size !== "string"){validate11.errors = [{instancePath:instancePath+"/files/" + i0+"/size",schemaPath:"#/$defs/{{00070-000:uniqueSymbolName}}/properties/size/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs16 === errors;}else {var valid3 = true;}if(valid3){if(data4.url !== undefined){const _errs18 = errors;if(typeof data4.url !== "string"){validate11.errors = [{instancePath:instancePath+"/files/" + i0+"/url",schemaPath:"#/$defs/{{00070-000:uniqueSymbolName}}/properties/url/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs18 === errors;}else {var valid3 = true;}}}}}else {validate11.errors = [{instancePath:instancePath+"/files/" + i0,schemaPath:"#/$defs/{{00070-000:uniqueSymbolName}}/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid1 = _errs10 === errors;if(!valid1){break;}}}else {validate11.errors = [{instancePath:instancePath+"/files",schemaPath:"#/properties/files/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs8 === errors;}else {var valid0 = true;}if(valid0){if(data.id !== undefined){let data8 = data.id;const _errs20 = errors;if(!(((typeof data8 == "number") && (!(data8 % 1) && !isNaN(data8))) && (isFinite(data8)))){validate11.errors = [{instancePath:instancePath+"/id",schemaPath:"#/properties/id/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid0 = _errs20 === errors;}else {var valid0 = true;}if(valid0){if(data.publishedBy !== undefined){const _errs22 = errors;if(typeof data.publishedBy !== "string"){validate11.errors = [{instancePath:instancePath+"/publishedBy",schemaPath:"#/properties/publishedBy/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs22 === errors;}else {var valid0 = true;}if(valid0){if(data.publishedDate !== undefined){const _errs24 = errors;if(typeof data.publishedDate !== "string"){validate11.errors = [{instancePath:instancePath+"/publishedDate",schemaPath:"#/properties/publishedDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs24 === errors;}else {var valid0 = true;}if(valid0){if(data.title !== undefined){const _errs26 = errors;if(typeof data.title !== "string"){validate11.errors = [{instancePath:instancePath+"/title",schemaPath:"#/properties/title/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs26 === errors;}else {var valid0 = true;}if(valid0){if(data.type !== undefined){const _errs28 = errors;if(typeof data.type !== "string"){validate11.errors = [{instancePath:instancePath+"/type",schemaPath:"#/properties/type/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs28 === errors;}else {var valid0 = true;}}}}}}}}}}}else {validate11.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate11.errors = vErrors;return errors === 0;}function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){const _errs1 = errors;for(const key0 in data){if(!(func4.call(schema11.properties, key0))){validate10.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.acronym !== undefined){const _errs2 = errors;if(typeof data.acronym !== "string"){validate10.errors = [{instancePath:instancePath+"/acronym",schemaPath:"#/properties/acronym/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.additionalTas !== undefined){let data1 = data.additionalTas;const _errs4 = errors;if(errors === _errs4){if(Array.isArray(data1)){var valid1 = true;const len0 = data1.length;for(let i0=0; i0<len0; i0++){let data2 = data1[i0];const _errs6 = errors;const _errs7 = errors;if(errors === _errs7){if(data2 && typeof data2 == "object" && !Array.isArray(data2)){const _errs9 = errors;for(const key1 in data2){if(!(((key1 === "code") || (key1 === "id")) || (key1 === "name"))){validate10.errors = [{instancePath:instancePath+"/additionalTas/" + i0,schemaPath:"#/$defs/{{00017-000:uniqueSymbolName}}/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key1},message:"must NOT have additional properties"}];return false;break;}}if(_errs9 === errors){if(data2.code !== undefined){const _errs10 = errors;if(typeof data2.code !== "string"){validate10.errors = [{instancePath:instancePath+"/additionalTas/" + i0+"/code",schemaPath:"#/$defs/{{00017-000:uniqueSymbolName}}/properties/code/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs10 === errors;}else {var valid3 = true;}if(valid3){if(data2.id !== undefined){let data4 = data2.id;const _errs12 = errors;if(!(((typeof data4 == "number") && (!(data4 % 1) && !isNaN(data4))) && (isFinite(data4)))){validate10.errors = [{instancePath:instancePath+"/additionalTas/" + i0+"/id",schemaPath:"#/$defs/{{00017-000:uniqueSymbolName}}/properties/id/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid3 = _errs12 === errors;}else {var valid3 = true;}if(valid3){if(data2.name !== undefined){const _errs14 = errors;if(typeof data2.name !== "string"){validate10.errors = [{instancePath:instancePath+"/additionalTas/" + i0+"/name",schemaPath:"#/$defs/{{00017-000:uniqueSymbolName}}/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs14 === errors;}else {var valid3 = true;}}}}}else {validate10.errors = [{instancePath:instancePath+"/additionalTas/" + i0,schemaPath:"#/$defs/{{00017-000:uniqueSymbolName}}/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid1 = _errs6 === errors;if(!valid1){break;}}}else {validate10.errors = [{instancePath:instancePath+"/additionalTas",schemaPath:"#/properties/additionalTas/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs4 === errors;}else {var valid0 = true;}if(valid0){if(data.benefits !== undefined){const _errs16 = errors;if(typeof data.benefits !== "string"){validate10.errors = [{instancePath:instancePath+"/benefits",schemaPath:"#/properties/benefits/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs16 === errors;}else {var valid0 = true;}if(valid0){if(data.closeoutDocuments !== undefined){let data7 = data.closeoutDocuments;const _errs18 = errors;if(errors === _errs18){if(Array.isArray(data7)){var valid4 = true;const len1 = data7.length;for(let i1=0; i1<len1; i1++){const _errs20 = errors;if(typeof data7[i1] !== "string"){validate10.errors = [{instancePath:instancePath+"/closeoutDocuments/" + i1,schemaPath:"#/$defs/{{00011-000:uniqueSymbolName}}/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid4 = _errs20 === errors;if(!valid4){break;}}}else {validate10.errors = [{instancePath:instancePath+"/closeoutDocuments",schemaPath:"#/properties/closeoutDocuments/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs18 === errors;}else {var valid0 = true;}if(valid0){if(data.closeoutSummary !== undefined){const _errs23 = errors;if(typeof data.closeoutSummary !== "string"){validate10.errors = [{instancePath:instancePath+"/closeoutSummary",schemaPath:"#/properties/closeoutSummary/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs23 === errors;}else {var valid0 = true;}if(valid0){if(data.coFundingPartners !== undefined){let data10 = data.coFundingPartners;const _errs25 = errors;if(errors === _errs25){if(Array.isArray(data10)){var valid6 = true;const len2 = data10.length;for(let i2=0; i2<len2; i2++){let data11 = data10[i2];const _errs27 = errors;const _errs28 = errors;if(errors === _errs28){if(data11 && typeof data11 == "object" && !Array.isArray(data11)){const _errs30 = errors;for(const key2 in data11){if(!((((key2 === "acronym") || (key2 === "city")) || (key2 === "name")) || (key2 === "state"))){validate10.errors = [{instancePath:instancePath+"/coFundingPartners/" + i2,schemaPath:"#/$defs/{{00036-000:uniqueSymbolName}}/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key2},message:"must NOT have additional properties"}];return false;break;}}if(_errs30 === errors){if(data11.acronym !== undefined){const _errs31 = errors;if(typeof data11.acronym !== "string"){validate10.errors = [{instancePath:instancePath+"/coFundingPartners/" + i2+"/acronym",schemaPath:"#/$defs/{{00036-000:uniqueSymbolName}}/properties/acronym/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid8 = _errs31 === errors;}else {var valid8 = true;}if(valid8){if(data11.city !== undefined){const _errs33 = errors;if(typeof data11.city !== "string"){validate10.errors = [{instancePath:instancePath+"/coFundingPartners/" + i2+"/city",schemaPath:"#/$defs/{{00036-000:uniqueSymbolName}}/properties/city/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid8 = _errs33 === errors;}else {var valid8 = true;}if(valid8){if(data11.name !== undefined){const _errs35 = errors;if(typeof data11.name !== "string"){validate10.errors = [{instancePath:instancePath+"/coFundingPartners/" + i2+"/name",schemaPath:"#/$defs/{{00036-000:uniqueSymbolName}}/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid8 = _errs35 === errors;}else {var valid8 = true;}if(valid8){if(data11.state !== undefined){const _errs37 = errors;if(typeof data11.state !== "string"){validate10.errors = [{instancePath:instancePath+"/coFundingPartners/" + i2+"/state",schemaPath:"#/$defs/{{00036-000:uniqueSymbolName}}/properties/state/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid8 = _errs37 === errors;}else {var valid8 = true;}}}}}}else {validate10.errors = [{instancePath:instancePath+"/coFundingPartners/" + i2,schemaPath:"#/$defs/{{00036-000:uniqueSymbolName}}/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid6 = _errs27 === errors;if(!valid6){break;}}}else {validate10.errors = [{instancePath:instancePath+"/coFundingPartners",schemaPath:"#/properties/coFundingPartners/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs25 === errors;}else {var valid0 = true;}if(valid0){if(data.coInvestigators !== undefined){let data16 = data.coInvestigators;const _errs39 = errors;if(errors === _errs39){if(Array.isArray(data16)){var valid9 = true;const len3 = data16.length;for(let i3=0; i3<len3; i3++){const _errs41 = errors;if(typeof data16[i3] !== "string"){validate10.errors = [{instancePath:instancePath+"/coInvestigators/" + i3,schemaPath:"#/$defs/{{00023-000:uniqueSymbolName}}/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid9 = _errs41 === errors;if(!valid9){break;}}}else {validate10.errors = [{instancePath:instancePath+"/coInvestigators",schemaPath:"#/properties/coInvestigators/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs39 === errors;}else {var valid0 = true;}if(valid0){if(data.description !== undefined){const _errs44 = errors;if(typeof data.description !== "string"){validate10.errors = [{instancePath:instancePath+"/description",schemaPath:"#/properties/description/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs44 === errors;}else {var valid0 = true;}if(valid0){if(data.destinations !== undefined){let data19 = data.destinations;const _errs46 = errors;if(errors === _errs46){if(Array.isArray(data19)){var valid11 = true;const len4 = data19.length;for(let i4=0; i4<len4; i4++){const _errs48 = errors;if(typeof data19[i4] !== "string"){validate10.errors = [{instancePath:instancePath+"/destinations/" + i4,schemaPath:"#/$defs/{{00029-000:uniqueSymbolName}}/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid11 = _errs48 === errors;if(!valid11){break;}}}else {validate10.errors = [{instancePath:instancePath+"/destinations",schemaPath:"#/properties/destinations/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs46 === errors;}else {var valid0 = true;}if(valid0){if(data.endDate !== undefined){const _errs51 = errors;if(typeof data.endDate !== "string"){validate10.errors = [{instancePath:instancePath+"/endDate",schemaPath:"#/properties/endDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs51 === errors;}else {var valid0 = true;}if(valid0){if(data.id !== undefined){let data22 = data.id;const _errs53 = errors;if(!(((typeof data22 == "number") && (!(data22 % 1) && !isNaN(data22))) && (isFinite(data22)))){validate10.errors = [{instancePath:instancePath+"/id",schemaPath:"#/properties/id/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid0 = _errs53 === errors;}else {var valid0 = true;}if(valid0){if(data.lastUpdated !== undefined){const _errs55 = errors;if(errors === _errs55){if(errors === _errs55){if(!(typeof data.lastUpdated === "string")){validate10.errors = [{instancePath:instancePath+"/lastUpdated",schemaPath:"#/properties/lastUpdated/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid0 = _errs55 === errors;}else {var valid0 = true;}if(valid0){if(data.leadOrganization !== undefined){let data24 = data.leadOrganization;const _errs57 = errors;const _errs58 = errors;if(errors === _errs58){if(data24 && typeof data24 == "object" && !Array.isArray(data24)){const _errs60 = errors;for(const key3 in data24){if(!((((key3 === "acronym") || (key3 === "city")) || (key3 === "name")) || (key3 === "state"))){validate10.errors = [{instancePath:instancePath+"/leadOrganization",schemaPath:"#/$defs/{{00036-000:uniqueSymbolName}}/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key3},message:"must NOT have additional properties"}];return false;break;}}if(_errs60 === errors){if(data24.acronym !== undefined){const _errs61 = errors;if(typeof data24.acronym !== "string"){validate10.errors = [{instancePath:instancePath+"/leadOrganization/acronym",schemaPath:"#/$defs/{{00036-000:uniqueSymbolName}}/properties/acronym/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid14 = _errs61 === errors;}else {var valid14 = true;}if(valid14){if(data24.city !== undefined){const _errs63 = errors;if(typeof data24.city !== "string"){validate10.errors = [{instancePath:instancePath+"/leadOrganization/city",schemaPath:"#/$defs/{{00036-000:uniqueSymbolName}}/properties/city/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid14 = _errs63 === errors;}else {var valid14 = true;}if(valid14){if(data24.name !== undefined){const _errs65 = errors;if(typeof data24.name !== "string"){validate10.errors = [{instancePath:instancePath+"/leadOrganization/name",schemaPath:"#/$defs/{{00036-000:uniqueSymbolName}}/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid14 = _errs65 === errors;}else {var valid14 = true;}if(valid14){if(data24.state !== undefined){const _errs67 = errors;if(typeof data24.state !== "string"){validate10.errors = [{instancePath:instancePath+"/leadOrganization/state",schemaPath:"#/$defs/{{00036-000:uniqueSymbolName}}/properties/state/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid14 = _errs67 === errors;}else {var valid14 = true;}}}}}}else {validate10.errors = [{instancePath:instancePath+"/leadOrganization",schemaPath:"#/$defs/{{00036-000:uniqueSymbolName}}/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs57 === errors;}else {var valid0 = true;}if(valid0){if(data.libraryItems !== undefined){let data29 = data.libraryItems;const _errs69 = errors;if(errors === _errs69){if(Array.isArray(data29)){var valid15 = true;const len5 = data29.length;for(let i5=0; i5<len5; i5++){const _errs71 = errors;if(!(validate11(data29[i5], {instancePath:instancePath+"/libraryItems/" + i5,parentData:data29,parentDataProperty:i5,rootData}))){vErrors = vErrors === null ? validate11.errors : vErrors.concat(validate11.errors);errors = vErrors.length;}var valid15 = _errs71 === errors;if(!valid15){break;}}}else {validate10.errors = [{instancePath:instancePath+"/libraryItems",schemaPath:"#/properties/libraryItems/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs69 === errors;}else {var valid0 = true;}if(valid0){if(data.primaryTas !== undefined){let data31 = data.primaryTas;const _errs72 = errors;if(errors === _errs72){if(Array.isArray(data31)){var valid16 = true;const len6 = data31.length;for(let i6=0; i6<len6; i6++){let data32 = data31[i6];const _errs74 = errors;const _errs75 = errors;if(errors === _errs75){if(data32 && typeof data32 == "object" && !Array.isArray(data32)){const _errs77 = errors;for(const key4 in data32){if(!(((key4 === "code") || (key4 === "id")) || (key4 === "name"))){validate10.errors = [{instancePath:instancePath+"/primaryTas/" + i6,schemaPath:"#/$defs/{{00017-000:uniqueSymbolName}}/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key4},message:"must NOT have additional properties"}];return false;break;}}if(_errs77 === errors){if(data32.code !== undefined){const _errs78 = errors;if(typeof data32.code !== "string"){validate10.errors = [{instancePath:instancePath+"/primaryTas/" + i6+"/code",schemaPath:"#/$defs/{{00017-000:uniqueSymbolName}}/properties/code/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid18 = _errs78 === errors;}else {var valid18 = true;}if(valid18){if(data32.id !== undefined){let data34 = data32.id;const _errs80 = errors;if(!(((typeof data34 == "number") && (!(data34 % 1) && !isNaN(data34))) && (isFinite(data34)))){validate10.errors = [{instancePath:instancePath+"/primaryTas/" + i6+"/id",schemaPath:"#/$defs/{{00017-000:uniqueSymbolName}}/properties/id/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid18 = _errs80 === errors;}else {var valid18 = true;}if(valid18){if(data32.name !== undefined){const _errs82 = errors;if(typeof data32.name !== "string"){validate10.errors = [{instancePath:instancePath+"/primaryTas/" + i6+"/name",schemaPath:"#/$defs/{{00017-000:uniqueSymbolName}}/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid18 = _errs82 === errors;}else {var valid18 = true;}}}}}else {validate10.errors = [{instancePath:instancePath+"/primaryTas/" + i6,schemaPath:"#/$defs/{{00017-000:uniqueSymbolName}}/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid16 = _errs74 === errors;if(!valid16){break;}}}else {validate10.errors = [{instancePath:instancePath+"/primaryTas",schemaPath:"#/properties/primaryTas/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs72 === errors;}else {var valid0 = true;}if(valid0){if(data.principalInvestigators !== undefined){let data36 = data.principalInvestigators;const _errs84 = errors;if(errors === _errs84){if(Array.isArray(data36)){var valid19 = true;const len7 = data36.length;for(let i7=0; i7<len7; i7++){const _errs86 = errors;if(typeof data36[i7] !== "string"){validate10.errors = [{instancePath:instancePath+"/principalInvestigators/" + i7,schemaPath:"#/$defs/{{00048-000:uniqueSymbolName}}/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid19 = _errs86 === errors;if(!valid19){break;}}}else {validate10.errors = [{instancePath:instancePath+"/principalInvestigators",schemaPath:"#/properties/principalInvestigators/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs84 === errors;}else {var valid0 = true;}if(valid0){if(data.programDirectors !== undefined){let data38 = data.programDirectors;const _errs89 = errors;if(errors === _errs89){if(Array.isArray(data38)){var valid21 = true;const len8 = data38.length;for(let i8=0; i8<len8; i8++){const _errs91 = errors;if(typeof data38[i8] !== "string"){validate10.errors = [{instancePath:instancePath+"/programDirectors/" + i8,schemaPath:"#/$defs/{{00054-000:uniqueSymbolName}}/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid21 = _errs91 === errors;if(!valid21){break;}}}else {validate10.errors = [{instancePath:instancePath+"/programDirectors",schemaPath:"#/properties/programDirectors/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs89 === errors;}else {var valid0 = true;}if(valid0){if(data.programManagers !== undefined){let data40 = data.programManagers;const _errs94 = errors;if(errors === _errs94){if(Array.isArray(data40)){var valid23 = true;const len9 = data40.length;for(let i9=0; i9<len9; i9++){const _errs96 = errors;if(typeof data40[i9] !== "string"){validate10.errors = [{instancePath:instancePath+"/programManagers/" + i9,schemaPath:"#/$defs/{{00059-000:uniqueSymbolName}}/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid23 = _errs96 === errors;if(!valid23){break;}}}else {validate10.errors = [{instancePath:instancePath+"/programManagers",schemaPath:"#/properties/programManagers/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs94 === errors;}else {var valid0 = true;}if(valid0){if(data.projectManagers !== undefined){let data42 = data.projectManagers;const _errs99 = errors;if(errors === _errs99){if(Array.isArray(data42)){var valid25 = true;const len10 = data42.length;for(let i10=0; i10<len10; i10++){const _errs101 = errors;if(typeof data42[i10] !== "string"){validate10.errors = [{instancePath:instancePath+"/projectManagers/" + i10,schemaPath:"#/$defs/{{00065-000:uniqueSymbolName}}/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid25 = _errs101 === errors;if(!valid25){break;}}}else {validate10.errors = [{instancePath:instancePath+"/projectManagers",schemaPath:"#/properties/projectManagers/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs99 === errors;}else {var valid0 = true;}if(valid0){if(data.responsibleMissionDirectorateOrOffice !== undefined){const _errs104 = errors;if(typeof data.responsibleMissionDirectorateOrOffice !== "string"){validate10.errors = [{instancePath:instancePath+"/responsibleMissionDirectorateOrOffice",schemaPath:"#/properties/responsibleMissionDirectorateOrOffice/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs104 === errors;}else {var valid0 = true;}if(valid0){if(data.responsibleProgram !== undefined){const _errs106 = errors;if(typeof data.responsibleProgram !== "string"){validate10.errors = [{instancePath:instancePath+"/responsibleProgram",schemaPath:"#/properties/responsibleProgram/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs106 === errors;}else {var valid0 = true;}if(valid0){if(data.startDate !== undefined){const _errs108 = errors;if(typeof data.startDate !== "string"){validate10.errors = [{instancePath:instancePath+"/startDate",schemaPath:"#/properties/startDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs108 === errors;}else {var valid0 = true;}if(valid0){if(data.status !== undefined){const _errs110 = errors;if(typeof data.status !== "string"){validate10.errors = [{instancePath:instancePath+"/status",schemaPath:"#/properties/status/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs110 === errors;}else {var valid0 = true;}if(valid0){if(data.supportedMissionType !== undefined){const _errs112 = errors;if(typeof data.supportedMissionType !== "string"){validate10.errors = [{instancePath:instancePath+"/supportedMissionType",schemaPath:"#/properties/supportedMissionType/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs112 === errors;}else {var valid0 = true;}if(valid0){if(data.supportingOrganizations !== undefined){let data49 = data.supportingOrganizations;const _errs114 = errors;if(errors === _errs114){if(Array.isArray(data49)){var valid27 = true;const len11 = data49.length;for(let i11=0; i11<len11; i11++){let data50 = data49[i11];const _errs116 = errors;const _errs117 = errors;if(errors === _errs117){if(data50 && typeof data50 == "object" && !Array.isArray(data50)){const _errs119 = errors;for(const key5 in data50){if(!((((key5 === "acronym") || (key5 === "city")) || (key5 === "name")) || (key5 === "state"))){validate10.errors = [{instancePath:instancePath+"/supportingOrganizations/" + i11,schemaPath:"#/$defs/{{00036-000:uniqueSymbolName}}/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key5},message:"must NOT have additional properties"}];return false;break;}}if(_errs119 === errors){if(data50.acronym !== undefined){const _errs120 = errors;if(typeof data50.acronym !== "string"){validate10.errors = [{instancePath:instancePath+"/supportingOrganizations/" + i11+"/acronym",schemaPath:"#/$defs/{{00036-000:uniqueSymbolName}}/properties/acronym/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid29 = _errs120 === errors;}else {var valid29 = true;}if(valid29){if(data50.city !== undefined){const _errs122 = errors;if(typeof data50.city !== "string"){validate10.errors = [{instancePath:instancePath+"/supportingOrganizations/" + i11+"/city",schemaPath:"#/$defs/{{00036-000:uniqueSymbolName}}/properties/city/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid29 = _errs122 === errors;}else {var valid29 = true;}if(valid29){if(data50.name !== undefined){const _errs124 = errors;if(typeof data50.name !== "string"){validate10.errors = [{instancePath:instancePath+"/supportingOrganizations/" + i11+"/name",schemaPath:"#/$defs/{{00036-000:uniqueSymbolName}}/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid29 = _errs124 === errors;}else {var valid29 = true;}if(valid29){if(data50.state !== undefined){const _errs126 = errors;if(typeof data50.state !== "string"){validate10.errors = [{instancePath:instancePath+"/supportingOrganizations/" + i11+"/state",schemaPath:"#/$defs/{{00036-000:uniqueSymbolName}}/properties/state/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid29 = _errs126 === errors;}else {var valid29 = true;}}}}}}else {validate10.errors = [{instancePath:instancePath+"/supportingOrganizations/" + i11,schemaPath:"#/$defs/{{00036-000:uniqueSymbolName}}/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid27 = _errs116 === errors;if(!valid27){break;}}}else {validate10.errors = [{instancePath:instancePath+"/supportingOrganizations",schemaPath:"#/properties/supportingOrganizations/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs114 === errors;}else {var valid0 = true;}if(valid0){if(data.technologyMaturityCurrent !== undefined){const _errs128 = errors;if(typeof data.technologyMaturityCurrent !== "string"){validate10.errors = [{instancePath:instancePath+"/technologyMaturityCurrent",schemaPath:"#/properties/technologyMaturityCurrent/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs128 === errors;}else {var valid0 = true;}if(valid0){if(data.technologyMaturityEnd !== undefined){const _errs130 = errors;if(typeof data.technologyMaturityEnd !== "string"){validate10.errors = [{instancePath:instancePath+"/technologyMaturityEnd",schemaPath:"#/properties/technologyMaturityEnd/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs130 === errors;}else {var valid0 = true;}if(valid0){if(data.technologyMaturityStart !== undefined){const _errs132 = errors;if(typeof data.technologyMaturityStart !== "string"){validate10.errors = [{instancePath:instancePath+"/technologyMaturityStart",schemaPath:"#/properties/technologyMaturityStart/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs132 === errors;}else {var valid0 = true;}if(valid0){if(data.title !== undefined){const _errs134 = errors;if(typeof data.title !== "string"){validate10.errors = [{instancePath:instancePath+"/title",schemaPath:"#/properties/title/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs134 === errors;}else {var valid0 = true;}if(valid0){if(data.website !== undefined){const _errs136 = errors;if(typeof data.website !== "string"){validate10.errors = [{instancePath:instancePath+"/website",schemaPath:"#/properties/website/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs136 === errors;}else {var valid0 = true;}if(valid0){if(data.workLocations !== undefined){let data60 = data.workLocations;const _errs138 = errors;if(errors === _errs138){if(Array.isArray(data60)){var valid30 = true;const len12 = data60.length;for(let i12=0; i12<len12; i12++){const _errs140 = errors;if(typeof data60[i12] !== "string"){validate10.errors = [{instancePath:instancePath+"/workLocations/" + i12,schemaPath:"#/$defs/{{00096-000:uniqueSymbolName}}/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid30 = _errs140 === errors;if(!valid30){break;}}}else {validate10.errors = [{instancePath:instancePath+"/workLocations",schemaPath:"#/properties/workLocations/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs138 === errors;}else {var valid0 = true;}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate10.errors = vErrors;return errors === 0;};validate10.schema=schema11;",
    "type": "validator",
  },
  {
    "data": {
      "00011-000": {
        "referenceName": "{{00011-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "CloseoutDocument",
        "uniqueSymbolName": "{{00011-000:symbolName}}67bb",
      },
      "000130-000": {
        "referenceName": "{{000130-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "Project",
        "uniqueSymbolName": "{{000130-000:symbolName}}",
      },
      "000136-000": {
        "referenceName": "{{000136-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "GetApiByResponse",
        "uniqueSymbolName": "{{000136-000:symbolName}}",
      },
      "000138-000": {
        "referenceName": "{{000138-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.ts",
        "symbolName": "Astroids",
        "uniqueSymbolName": "{{000138-000:symbolName}}",
      },
      "00017-000": {
        "referenceName": "{{00017-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "TechnologyArea",
        "uniqueSymbolName": "{{00017-000:symbolName}}67bb",
      },
      "00023-000": {
        "referenceName": "{{00023-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "CoInvestigator",
        "uniqueSymbolName": "{{00023-000:symbolName}}67bb",
      },
      "00029-000": {
        "referenceName": "{{00029-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "Destination",
        "uniqueSymbolName": "{{00029-000:symbolName}}67bb",
      },
      "00036-000": {
        "referenceName": "{{00036-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "Organization",
        "uniqueSymbolName": "{{00036-000:symbolName}}67bb",
      },
      "00048-000": {
        "referenceName": "{{00048-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "PrincipalInvestigator",
        "uniqueSymbolName": "{{00048-000:symbolName}}67bb",
      },
      "00054-000": {
        "referenceName": "{{00054-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "ProgramDirector",
        "uniqueSymbolName": "{{00054-000:symbolName}}67bb",
      },
      "00059-000": {
        "referenceName": "{{00059-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "ProgramManager",
        "uniqueSymbolName": "{{00059-000:symbolName}}67bb",
      },
      "00065-000": {
        "referenceName": "{{00065-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "ProjectManager",
        "uniqueSymbolName": "{{00065-000:symbolName}}67bb",
      },
      "00070-000": {
        "referenceName": "{{00070-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "File",
        "uniqueSymbolName": "{{00070-000:symbolName}}67bb",
      },
      "00085-000": {
        "referenceName": "{{00085-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "LibraryItem",
        "uniqueSymbolName": "{{00085-000:symbolName}}67bb",
      },
      "00096-000": {
        "referenceName": "{{00096-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "WorkLocation",
        "uniqueSymbolName": "{{00096-000:symbolName}}67bb",
      },
    },
    "prettify": false,
    "relativeSource": "./../nasa.schema",
    "targetPath": "examples/nasa/astroids/schemas/get-api-by-response.schema.js",
    "template": "/**
 * Generated by @skyleague/therefore
 * eslint-disable
 */
"use strict";module.exports = validate10;module.exports.default = validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","title":"getApiByResponse","type":"object","properties":{"id":{"type":"integer","title":"id"},"lastUpdated":{"type":"string","title":"lastUpdated"}},"additionalProperties":false};function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){const _errs1 = errors;for(const key0 in data){if(!((key0 === "id") || (key0 === "lastUpdated"))){validate10.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.id !== undefined){let data0 = data.id;const _errs2 = errors;if(!(((typeof data0 == "number") && (!(data0 % 1) && !isNaN(data0))) && (isFinite(data0)))){validate10.errors = [{instancePath:instancePath+"/id",schemaPath:"#/properties/id/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.lastUpdated !== undefined){const _errs4 = errors;if(typeof data.lastUpdated !== "string"){validate10.errors = [{instancePath:instancePath+"/lastUpdated",schemaPath:"#/properties/lastUpdated/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs4 === errors;}else {var valid0 = true;}}}}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate10.errors = vErrors;return errors === 0;};validate10.schema=schema11;",
    "type": "validator",
  },
  {
    "data": {
      "00011-000": {
        "referenceName": "{{00011-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "CloseoutDocument",
        "uniqueSymbolName": "{{00011-000:symbolName}}67bb",
      },
      "000130-000": {
        "referenceName": "{{000130-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "Project",
        "uniqueSymbolName": "{{000130-000:symbolName}}",
      },
      "000136-000": {
        "referenceName": "{{000136-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "GetApiByResponse",
        "uniqueSymbolName": "{{000136-000:symbolName}}",
      },
      "000138-000": {
        "referenceName": "{{000138-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.ts",
        "symbolName": "Astroids",
        "uniqueSymbolName": "{{000138-000:symbolName}}",
      },
      "000140-000": {
        "referenceName": "{{000140-000:symbolName}}",
        "srcPath": "examples/nasa/apod/nasa.client.type.ts",
        "symbolName": "GetApodResponse",
        "uniqueSymbolName": "{{000140-000:symbolName}}",
      },
      "000142-000": {
        "referenceName": "{{000142-000:symbolName}}",
        "srcPath": "examples/nasa/apod/nasa.client.ts",
        "symbolName": "Apod",
        "uniqueSymbolName": "{{000142-000:symbolName}}",
      },
      "00017-000": {
        "referenceName": "{{00017-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "TechnologyArea",
        "uniqueSymbolName": "{{00017-000:symbolName}}67bb",
      },
      "00023-000": {
        "referenceName": "{{00023-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "CoInvestigator",
        "uniqueSymbolName": "{{00023-000:symbolName}}67bb",
      },
      "00029-000": {
        "referenceName": "{{00029-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "Destination",
        "uniqueSymbolName": "{{00029-000:symbolName}}67bb",
      },
      "00036-000": {
        "referenceName": "{{00036-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "Organization",
        "uniqueSymbolName": "{{00036-000:symbolName}}67bb",
      },
      "00048-000": {
        "referenceName": "{{00048-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "PrincipalInvestigator",
        "uniqueSymbolName": "{{00048-000:symbolName}}67bb",
      },
      "00054-000": {
        "referenceName": "{{00054-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "ProgramDirector",
        "uniqueSymbolName": "{{00054-000:symbolName}}67bb",
      },
      "00059-000": {
        "referenceName": "{{00059-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "ProgramManager",
        "uniqueSymbolName": "{{00059-000:symbolName}}67bb",
      },
      "00065-000": {
        "referenceName": "{{00065-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "ProjectManager",
        "uniqueSymbolName": "{{00065-000:symbolName}}67bb",
      },
      "00070-000": {
        "referenceName": "{{00070-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "File",
        "uniqueSymbolName": "{{00070-000:symbolName}}67bb",
      },
      "00085-000": {
        "referenceName": "{{00085-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "LibraryItem",
        "uniqueSymbolName": "{{00085-000:symbolName}}67bb",
      },
      "00096-000": {
        "referenceName": "{{00096-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "WorkLocation",
        "uniqueSymbolName": "{{00096-000:symbolName}}67bb",
      },
    },
    "prettify": true,
    "relativeSource": "./../nasa.schema",
    "targetPath": "examples/nasa/apod/nasa.client.ts",
    "template": "/**
* Generated by @skyleague/therefore@v1.0.0-local
* Do not manually touch this
*/
/* eslint-disable */
import got from 'got'
import type { CancelableRequest, Got, Options, Response } from 'got'
import type { ValidateFunction, ErrorObject } from 'ajv'
import {IncomingHttpHeaders} from 'http'
import { GetApodResponse } from './nasa.client.type'


export class {{000142-000:symbolName}} {
    public client: Got

    public auth: {
        apiKey?: string | (() => Promise<string>)
    }

    public availableAuth: Set<string>
    public defaultAuth: string[][] | string[] | undefined

    public constructor(
    {
        prefixUrl,
        options,
        auth = {},
        defaultAuth,
    }: {
        prefixUrl: string | 'https://api.nasa.gov/planetary' | 'http://api.nasa.gov/planetary',
        options?: Options,
        auth: {
            apiKey?: string | (() => Promise<string>)
        }
        defaultAuth?: string[][] | string[]
    }) {
        this.client = got.extend(...[{ prefixUrl, throwHttpErrors: false }, options].filter((o): o is Options => o !== undefined))
        this.auth = auth
        this.availableAuth = new Set(Object.keys(auth))
        this.defaultAuth = defaultAuth
    }


    /**
     * Returns images
     * 
     * Returns the picture of the day
     */
    public async getApod({query, auth = [['apiKey']]}: {query?: { date?: string, hd?: string }, auth?: string[][] | string[]} = {})
    {
        return this.awaitResponse(this.buildClient(auth).get(\`apod\`, {
            searchParams: query ?? {},responseType:'json',
        }), {
            200: {{000140-000:symbolName}},
        })
    }

    public async awaitResponse<T, S extends Record<PropertyKey, undefined | { is: (o: unknown) => o is T; validate: ValidateFunction<T> }>>(response: CancelableRequest<Response<unknown>>, schemas: S)
    {
        type FilterStartingWith<S extends PropertyKey, T extends string> = S extends number | string ? \`\${S}\` extends \`\${T}\${infer _X}\` ? S : never : never
        type InferSchemaType<T> = T extends { is: (o: unknown) => o is infer S } ? S : never
        const result = await response
        const validator = schemas[result.statusCode]
        if (validator?.is(result.body) === false || result.statusCode < 200 || result.statusCode >= 300)
        {
            return {statusCode: result.statusCode, headers: result.headers, left: result.body, validationErrors: validator?.validate.errors ?? undefined } as 
            {statusCode: number, headers: IncomingHttpHeaders, left: InferSchemaType<S[keyof S]>, validationErrors?: ErrorObject[]}
        }
        return {statusCode: result.statusCode, headers: result.headers, right: result.body } as 
        {statusCode: number, headers: IncomingHttpHeaders, right: InferSchemaType<S[keyof Pick<S, FilterStartingWith<keyof S, '2'>>]>}
    }

    protected buildApiKeyClient(client: Got)
    {
        return client.extend({
        hooks: {
        beforeRequest: [
        async (options) => 
        {
            const apiKey = this.auth.apiKey
            const key = typeof apiKey === 'function' ? await apiKey() : apiKey
            options.headers['api_key'] = key
        }
        ],},})
    }

    protected buildClient(auths: string[][] | string[] | undefined = this.defaultAuth, client: Got = this.client): Got
    {
        const auth = (auths ?? []).map(auth => Array.isArray(auth) ? auth : [auth]).filter((auth) => auth.every((a) => this.availableAuth.has(a)))
        for (const chosen of auth[0] ?? [])
        {
            if (chosen === 'apiKey')
            {
                client = this.buildApiKeyClient(client)
            }
        }
        return client
    }
}

",
    "type": "typescript",
  },
  {
    "data": {
      "00011-000": {
        "referenceName": "{{00011-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "CloseoutDocument",
        "uniqueSymbolName": "{{00011-000:symbolName}}67bb",
      },
      "000130-000": {
        "referenceName": "{{000130-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "Project",
        "uniqueSymbolName": "{{000130-000:symbolName}}",
      },
      "000136-000": {
        "referenceName": "{{000136-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "GetApiByResponse",
        "uniqueSymbolName": "{{000136-000:symbolName}}",
      },
      "000138-000": {
        "referenceName": "{{000138-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.ts",
        "symbolName": "Astroids",
        "uniqueSymbolName": "{{000138-000:symbolName}}",
      },
      "000140-000": {
        "referenceName": "{{000140-000:symbolName}}",
        "srcPath": "examples/nasa/apod/nasa.client.type.ts",
        "symbolName": "GetApodResponse",
        "uniqueSymbolName": "{{000140-000:symbolName}}",
      },
      "000142-000": {
        "referenceName": "{{000142-000:symbolName}}",
        "srcPath": "examples/nasa/apod/nasa.client.ts",
        "symbolName": "Apod",
        "uniqueSymbolName": "{{000142-000:symbolName}}",
      },
      "00017-000": {
        "referenceName": "{{00017-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "TechnologyArea",
        "uniqueSymbolName": "{{00017-000:symbolName}}67bb",
      },
      "00023-000": {
        "referenceName": "{{00023-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "CoInvestigator",
        "uniqueSymbolName": "{{00023-000:symbolName}}67bb",
      },
      "00029-000": {
        "referenceName": "{{00029-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "Destination",
        "uniqueSymbolName": "{{00029-000:symbolName}}67bb",
      },
      "00036-000": {
        "referenceName": "{{00036-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "Organization",
        "uniqueSymbolName": "{{00036-000:symbolName}}67bb",
      },
      "00048-000": {
        "referenceName": "{{00048-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "PrincipalInvestigator",
        "uniqueSymbolName": "{{00048-000:symbolName}}67bb",
      },
      "00054-000": {
        "referenceName": "{{00054-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "ProgramDirector",
        "uniqueSymbolName": "{{00054-000:symbolName}}67bb",
      },
      "00059-000": {
        "referenceName": "{{00059-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "ProgramManager",
        "uniqueSymbolName": "{{00059-000:symbolName}}67bb",
      },
      "00065-000": {
        "referenceName": "{{00065-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "ProjectManager",
        "uniqueSymbolName": "{{00065-000:symbolName}}67bb",
      },
      "00070-000": {
        "referenceName": "{{00070-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "File",
        "uniqueSymbolName": "{{00070-000:symbolName}}67bb",
      },
      "00085-000": {
        "referenceName": "{{00085-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "LibraryItem",
        "uniqueSymbolName": "{{00085-000:symbolName}}67bb",
      },
      "00096-000": {
        "referenceName": "{{00096-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "WorkLocation",
        "uniqueSymbolName": "{{00096-000:symbolName}}67bb",
      },
    },
    "prettify": true,
    "relativeSource": "./../nasa.schema",
    "targetPath": "examples/nasa/apod/nasa.client.type.ts",
    "template": "/**
* Generated by @skyleague/therefore@v1.0.0-local
* Do not manually touch this
*/
/* eslint-disable */
import type { ValidateFunction } from 'ajv'


export type {{000140-000:symbolName}} = (unknown)[]

export const {{000140-000:symbolName}} = {
    validate: require('./schemas/get-apod-response.schema.js') as ValidateFunction<{{000140-000:symbolName}}>,
    get schema() { return {{000140-000:symbolName}}.validate.schema},
    is: (o: unknown): o is {{000140-000:symbolName}} => {{000140-000:symbolName}}.validate(o) === true,
} as const

",
    "type": "typescript",
  },
  {
    "data": {
      "00011-000": {
        "referenceName": "{{00011-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "CloseoutDocument",
        "uniqueSymbolName": "{{00011-000:symbolName}}67bb",
      },
      "000130-000": {
        "referenceName": "{{000130-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "Project",
        "uniqueSymbolName": "{{000130-000:symbolName}}",
      },
      "000136-000": {
        "referenceName": "{{000136-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "GetApiByResponse",
        "uniqueSymbolName": "{{000136-000:symbolName}}",
      },
      "000138-000": {
        "referenceName": "{{000138-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.ts",
        "symbolName": "Astroids",
        "uniqueSymbolName": "{{000138-000:symbolName}}",
      },
      "000140-000": {
        "referenceName": "{{000140-000:symbolName}}",
        "srcPath": "examples/nasa/apod/nasa.client.type.ts",
        "symbolName": "GetApodResponse",
        "uniqueSymbolName": "{{000140-000:symbolName}}",
      },
      "000142-000": {
        "referenceName": "{{000142-000:symbolName}}",
        "srcPath": "examples/nasa/apod/nasa.client.ts",
        "symbolName": "Apod",
        "uniqueSymbolName": "{{000142-000:symbolName}}",
      },
      "00017-000": {
        "referenceName": "{{00017-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "TechnologyArea",
        "uniqueSymbolName": "{{00017-000:symbolName}}67bb",
      },
      "00023-000": {
        "referenceName": "{{00023-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "CoInvestigator",
        "uniqueSymbolName": "{{00023-000:symbolName}}67bb",
      },
      "00029-000": {
        "referenceName": "{{00029-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "Destination",
        "uniqueSymbolName": "{{00029-000:symbolName}}67bb",
      },
      "00036-000": {
        "referenceName": "{{00036-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "Organization",
        "uniqueSymbolName": "{{00036-000:symbolName}}67bb",
      },
      "00048-000": {
        "referenceName": "{{00048-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "PrincipalInvestigator",
        "uniqueSymbolName": "{{00048-000:symbolName}}67bb",
      },
      "00054-000": {
        "referenceName": "{{00054-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "ProgramDirector",
        "uniqueSymbolName": "{{00054-000:symbolName}}67bb",
      },
      "00059-000": {
        "referenceName": "{{00059-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "ProgramManager",
        "uniqueSymbolName": "{{00059-000:symbolName}}67bb",
      },
      "00065-000": {
        "referenceName": "{{00065-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "ProjectManager",
        "uniqueSymbolName": "{{00065-000:symbolName}}67bb",
      },
      "00070-000": {
        "referenceName": "{{00070-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "File",
        "uniqueSymbolName": "{{00070-000:symbolName}}67bb",
      },
      "00085-000": {
        "referenceName": "{{00085-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "LibraryItem",
        "uniqueSymbolName": "{{00085-000:symbolName}}67bb",
      },
      "00096-000": {
        "referenceName": "{{00096-000:symbolName}}",
        "srcPath": "examples/nasa/astroids/nasa.client.type.ts",
        "symbolName": "WorkLocation",
        "uniqueSymbolName": "{{00096-000:symbolName}}67bb",
      },
    },
    "prettify": false,
    "relativeSource": "./../nasa.schema",
    "targetPath": "examples/nasa/apod/schemas/get-apod-response.schema.js",
    "template": "/**
 * Generated by @skyleague/therefore
 * eslint-disable
 */
"use strict";module.exports = validate10;module.exports.default = validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","title":"getApodResponse","type":"array","items":{}};function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(!(Array.isArray(data))){validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}validate10.errors = vErrors;return errors === 0;};validate10.schema=schema11;",
    "type": "validator",
  },
]
`;
