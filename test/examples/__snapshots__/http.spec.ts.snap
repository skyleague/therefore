// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`http 1`] = `
{
  "cleanFn": [Function],
  "outputFiles": {
    "examples/http/http.type.ts": "/**
 * Generated by @skyleague/therefore@v1.0.0-local
 * Do not manually touch this
 */
/* eslint-disable */

import type { DefinedError, ValidateFunction } from 'ajv'

import { validate as DepValidator } from './schemas/dep.schema.js'
import { validate as HeadersValidator } from './schemas/headers.schema.js'
import { validate as QueryValidator } from './schemas/query.schema.js'

export interface Dep {
    authorization: string
}

export const Dep = {
    validate: DepValidator as ValidateFunction<Dep>,
    get schema() {
        return Dep.validate.schema
    },
    get errors() {
        return Dep.validate.errors ?? undefined
    },
    is: (o: unknown): o is Dep => Dep.validate(o) === true,
    parse: (o: unknown): { right: Dep } | { left: DefinedError[] } => {
        if (Dep.is(o)) {
            return { right: o }
        }
        return { left: (Dep.errors ?? []) as DefinedError[] }
    },
} as const

export interface Headers {
    authorization: string
}

export const Headers = {
    validate: HeadersValidator as ValidateFunction<Headers>,
    get schema() {
        return Headers.validate.schema
    },
    get errors() {
        return Headers.validate.errors ?? undefined
    },
    is: (o: unknown): o is Headers => Headers.validate(o) === true,
    parse: (o: unknown): { right: Headers } | { left: DefinedError[] } => {
        if (Headers.is(o)) {
            return { right: o }
        }
        return { left: (Headers.errors ?? []) as DefinedError[] }
    },
} as const

export interface Query {
    limit: number
}

export const Query = {
    validate: QueryValidator as ValidateFunction<Query>,
    get schema() {
        return Query.validate.schema
    },
    get errors() {
        return Query.validate.errors ?? undefined
    },
    is: (o: unknown): o is Query => Query.validate(o) === true,
    parse: (o: unknown): { right: Query } | { left: DefinedError[] } => {
        if (Query.is(o)) {
            return { right: o }
        }
        return { left: (Query.errors ?? []) as DefinedError[] }
    },
} as const
",
    "examples/http/schemas/dep.schema.js": "/* eslint-disable */
// @ts-nocheck
/**
 * Generated by Ajv https://ajv.js.org/guide/managing-schemas.html#standalone-validation-code
 */
"use strict";
/** @type {unknown} */
export const validate = validate10;export default validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","title":"Dep","type":"object","properties":{"authorization":{"type":"string"}},"required":["authorization"],"additionalProperties":true};function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.authorization === undefined) && (missing0 = "authorization")){validate10.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.authorization !== undefined){let data0 = data.authorization;if(typeof data0 !== "string"){let dataType0 = typeof data0;let coerced0 = undefined;if(!(coerced0 !== undefined)){if(dataType0 == "number" || dataType0 == "boolean"){coerced0 = "" + data0;}else if(data0 === null){coerced0 = "";}else {validate10.errors = [{instancePath:instancePath+"/authorization",schemaPath:"#/properties/authorization/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}if(coerced0 !== undefined){data0 = coerced0;if(data !== undefined){data["authorization"] = coerced0;}}}}}}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate10.errors = vErrors;return errors === 0;};validate.schema=schema11;",
    "examples/http/schemas/headers.schema.js": "/* eslint-disable */
// @ts-nocheck
/**
 * Generated by Ajv https://ajv.js.org/guide/managing-schemas.html#standalone-validation-code
 */
"use strict";
/** @type {unknown} */
export const validate = validate10;export default validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","title":"Headers","type":"object","properties":{"authorization":{"type":"string"}},"required":["authorization"],"additionalProperties":true};function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.authorization === undefined) && (missing0 = "authorization")){validate10.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.authorization !== undefined){let data0 = data.authorization;if(typeof data0 !== "string"){let dataType0 = typeof data0;let coerced0 = undefined;if(!(coerced0 !== undefined)){if(dataType0 == "number" || dataType0 == "boolean"){coerced0 = "" + data0;}else if(data0 === null){coerced0 = "";}else {validate10.errors = [{instancePath:instancePath+"/authorization",schemaPath:"#/properties/authorization/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}if(coerced0 !== undefined){data0 = coerced0;if(data !== undefined){data["authorization"] = coerced0;}}}}}}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate10.errors = vErrors;return errors === 0;};validate.schema=schema11;",
    "examples/http/schemas/query.schema.js": "/* eslint-disable */
// @ts-nocheck
/**
 * Generated by Ajv https://ajv.js.org/guide/managing-schemas.html#standalone-validation-code
 */
"use strict";
/** @type {unknown} */
export const validate = validate10;export default validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","title":"Query","type":"object","properties":{"limit":{"type":"number"}},"required":["limit"],"additionalProperties":true};function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.limit === undefined) && (missing0 = "limit")){validate10.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.limit !== undefined){let data0 = data.limit;if(!((typeof data0 == "number") && (isFinite(data0)))){let dataType0 = typeof data0;let coerced0 = undefined;if(!(coerced0 !== undefined)){if(dataType0 == "boolean" || data0 === null
              || (dataType0 == "string" && data0 && data0 == +data0)){coerced0 = +data0;}else {validate10.errors = [{instancePath:instancePath+"/limit",schemaPath:"#/properties/limit/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}}if(coerced0 !== undefined){data0 = coerced0;if(data !== undefined){data["limit"] = coerced0;}}}}}}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate10.errors = vErrors;return errors === 0;};validate.schema=schema11;",
  },
}
`;
