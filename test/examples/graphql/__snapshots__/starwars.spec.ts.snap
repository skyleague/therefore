// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`output generation 1`] = `
{
  "cleanFn": [Function],
  "outputFiles": {
    "examples/graphql/star-wars/query/hero.type.ts": "/**
* Generated by @skyleague/therefore@v1.0.0-local
* Do not manually touch this
*/
/* eslint-disable */

import type { Character } from '../types/character.type.js'
import type { Droid } from '../types/droid.type.js'
import type { Human } from '../types/human.type.js'
import type { CharacterArgs, HeroArgs } from '../types/input.type.js'

export type DroidFieldArgs = CharacterArgs

export type DroidFieldType = Droid

export type DroidField = (args: DroidFieldArgs) => DroidFieldType

export type HeroFieldArgs = HeroArgs

export type HeroFieldType = Character

export type HeroField = (input: HeroFieldArgs) => HeroFieldType

export type HumanFieldArgs = CharacterArgs

export type HumanFieldType = Human

export type HumanField = (args: HumanFieldArgs) => HumanFieldType

",
    "examples/graphql/star-wars/star-wars.graphql": "type Query {
  droid(id: String!): Droid!
  hero(input: HeroArgs!): Character!
  human(id: String!): Human!
}

type Character {
  """Which movies they appear in."""
  appearsIn(id: String!): [Episode!]!

  """The friends of the character, or an empty list if they have none."""
  friends: [Character!]!

  """The id of the character"""
  id: String!

  """The name of the character"""
  name: String!
}

"""A mechanical creature in the Star Wars universe."""
type Droid {
  """Which movies they appear in."""
  appearsIn(id: String!): [Episode!]!

  """The friends of the character, or an empty list if they have none."""
  friends: [Character!]!

  """The id of the character"""
  id: String!

  """The name of the character"""
  name: String!

  """The primary function of the droid."""
  primaryFunction: String!
}

"""One of the films in the Star Wars Trilogy"""
enum Episode {
  EMPIRE
  JEDI
  NEWHOPE
}

input HeroArgs {
  """
  If omitted, returns the hero of the whole saga. If provided, returns the hero of that particular episode.
  """
  episode: Episode!
}

"""A humanoid creature in the Star Wars universe."""
type Human {
  """Which movies they appear in."""
  appearsIn(id: String!): [Episode!]!

  """The friends of the character, or an empty list if they have none."""
  friends: [Character!]!

  """The home planet of the human, or null if unknown."""
  homePlanet: String

  """The id of the character"""
  id: String!

  """The name of the character"""
  name: String!
}",
    "examples/graphql/star-wars/star-wars.type.ts": "/**
* Generated by @skyleague/therefore@v1.0.0-local
* Do not manually touch this
*/
/* eslint-disable */

export const introspection = {"__schema":{"queryType":{"name":"Query"},"mutationType":null,"subscriptionType":null,"types":[{"kind":"OBJECT","name":"Query","fields":[{"name":"droid","type":{"kind":"NON_NULL","ofType":{"kind":"OBJECT","name":"Droid","ofType":null}},"args":[{"name":"id","type":{"kind":"NON_NULL","ofType":{"kind":"SCALAR","name":"Any"}}}]},{"name":"hero","type":{"kind":"NON_NULL","ofType":{"kind":"OBJECT","name":"Character","ofType":null}},"args":[{"name":"input","type":{"kind":"NON_NULL","ofType":{"kind":"SCALAR","name":"Any"}}}]},{"name":"human","type":{"kind":"NON_NULL","ofType":{"kind":"OBJECT","name":"Human","ofType":null}},"args":[{"name":"id","type":{"kind":"NON_NULL","ofType":{"kind":"SCALAR","name":"Any"}}}]}],"interfaces":[]},{"kind":"OBJECT","name":"Character","fields":[{"name":"appearsIn","type":{"kind":"NON_NULL","ofType":{"kind":"LIST","ofType":{"kind":"NON_NULL","ofType":{"kind":"SCALAR","name":"Any"}}}},"args":[{"name":"id","type":{"kind":"NON_NULL","ofType":{"kind":"SCALAR","name":"Any"}}}]},{"name":"friends","type":{"kind":"NON_NULL","ofType":{"kind":"LIST","ofType":{"kind":"NON_NULL","ofType":{"kind":"OBJECT","name":"Character","ofType":null}}}},"args":[]},{"name":"id","type":{"kind":"NON_NULL","ofType":{"kind":"SCALAR","name":"Any"}},"args":[]},{"name":"name","type":{"kind":"NON_NULL","ofType":{"kind":"SCALAR","name":"Any"}},"args":[]}],"interfaces":[]},{"kind":"OBJECT","name":"Droid","fields":[{"name":"appearsIn","type":{"kind":"NON_NULL","ofType":{"kind":"LIST","ofType":{"kind":"NON_NULL","ofType":{"kind":"SCALAR","name":"Any"}}}},"args":[{"name":"id","type":{"kind":"NON_NULL","ofType":{"kind":"SCALAR","name":"Any"}}}]},{"name":"friends","type":{"kind":"NON_NULL","ofType":{"kind":"LIST","ofType":{"kind":"NON_NULL","ofType":{"kind":"OBJECT","name":"Character","ofType":null}}}},"args":[]},{"name":"id","type":{"kind":"NON_NULL","ofType":{"kind":"SCALAR","name":"Any"}},"args":[]},{"name":"name","type":{"kind":"NON_NULL","ofType":{"kind":"SCALAR","name":"Any"}},"args":[]},{"name":"primaryFunction","type":{"kind":"NON_NULL","ofType":{"kind":"SCALAR","name":"Any"}},"args":[]}],"interfaces":[]},{"kind":"OBJECT","name":"Human","fields":[{"name":"appearsIn","type":{"kind":"NON_NULL","ofType":{"kind":"LIST","ofType":{"kind":"NON_NULL","ofType":{"kind":"SCALAR","name":"Any"}}}},"args":[{"name":"id","type":{"kind":"NON_NULL","ofType":{"kind":"SCALAR","name":"Any"}}}]},{"name":"friends","type":{"kind":"NON_NULL","ofType":{"kind":"LIST","ofType":{"kind":"NON_NULL","ofType":{"kind":"OBJECT","name":"Character","ofType":null}}}},"args":[]},{"name":"homePlanet","type":{"kind":"SCALAR","name":"Any"},"args":[]},{"name":"id","type":{"kind":"NON_NULL","ofType":{"kind":"SCALAR","name":"Any"}},"args":[]},{"name":"name","type":{"kind":"NON_NULL","ofType":{"kind":"SCALAR","name":"Any"}},"args":[]}],"interfaces":[]},{"kind":"SCALAR","name":"Any"}],"directives":[]}} as const

",
    "examples/graphql/star-wars/types/character.type.ts": "/**
* Generated by @skyleague/therefore@v1.0.0-local
* Do not manually touch this
*/
/* eslint-disable */

import type { Episode } from './episode.type.js'
import type { CharacterArgs } from './input.type.js'

export type AppearsInResolverArgs = CharacterArgs

export type AppearsInResolverType = (Episode)[]

/**
 * Which movies they appear in.
 */
export type AppearsInResolver = (args: AppearsInResolverArgs) => AppearsInResolverType

export interface Character {
    /**
     * The id of the character
     */
    id: string
    /**
     * The name of the character
     */
    name: string
}

/**
 * The friends of the character, or an empty list if they have none.
 */
export type FriendsResolverType = (Character)[]

/**
 * The friends of the character, or an empty list if they have none.
 */
export type FriendsResolver = () => FriendsResolverType

",
    "examples/graphql/star-wars/types/droid.type.ts": "/**
* Generated by @skyleague/therefore@v1.0.0-local
* Do not manually touch this
*/
/* eslint-disable */

/**
 * A mechanical creature in the Star Wars universe.
 */
export interface Droid {
    /**
     * The id of the character
     */
    id: string
    /**
     * The name of the character
     */
    name: string
}

export type PrimaryFunctionResolverType = string

/**
 * The primary function of the droid.
 */
export type PrimaryFunctionResolver = () => PrimaryFunctionResolverType

",
    "examples/graphql/star-wars/types/episode.type.ts": "/**
* Generated by @skyleague/therefore@v1.0.0-local
* Do not manually touch this
*/
/* eslint-disable */

/**
 * One of the films in the Star Wars Trilogy
 */
export type Episode = 'NEWHOPE' | 'EMPIRE' | 'JEDI'

export type MoreEpisodes = (Episode | 'OTHER')

",
    "examples/graphql/star-wars/types/human.type.ts": "/**
* Generated by @skyleague/therefore@v1.0.0-local
* Do not manually touch this
*/
/* eslint-disable */

export type HomePlanetResolverType = (string | undefined)

/**
 * The home planet of the human, or null if unknown.
 */
export type HomePlanetResolver = () => HomePlanetResolverType

/**
 * A humanoid creature in the Star Wars universe.
 */
export interface Human {
    /**
     * The id of the character
     */
    id: string
    /**
     * The name of the character
     */
    name: string
}

",
    "examples/graphql/star-wars/types/input.type.ts": "/**
* Generated by @skyleague/therefore@v1.0.0-local
* Do not manually touch this
*/
/* eslint-disable */

import type { Episode } from './episode.type.js'

/**
 * The id of the character
 */
export interface CharacterArgs {
    id: string
}

export interface HeroArgs {
    /**
     * If omitted, returns the hero of the whole saga. If provided, returns the hero of that particular episode.
     */
    episode: Episode
}

",
  },
}
`;
