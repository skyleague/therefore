// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`output generation 1`] = `
{
  "cleanFn": [Function],
  "outputFiles": {
    "examples/restclients/openbanking/banking.client.ts": "/**
 * Generated by @skyleague/therefore@v1.0.0-local
 * Do not manually touch this
 */
/* eslint-disable */

import type { IncomingHttpHeaders } from 'node:http'

import type { DefinedError } from 'ajv'
import { got } from 'got'
import type { CancelableRequest, Got, Options, OptionsInit, Response } from 'got'

import { File, OBErrorResponse1 } from './banking.type.js'

/**
 * Payment Initiation API
 *
 * Swagger for Payment Initiation API Specification
 */
export class Banking {
    public client: Got

    public auth: {
        psuoAuth2Security?: string | (() => Promise<string>)
        tppoAuth2Security?: string | (() => Promise<string>)
    }

    public availableAuth: Set<string>
    public defaultAuth: string[][] | string[] | undefined

    public constructor({
        prefixUrl = 'https://openbanking.org.uk',
        options,
        auth = {},
        defaultAuth,
    }: {
        prefixUrl?: string | 'https://openbanking.org.uk' | \`\${string}/open-banking/v3.1/pisp\`
        options?: Options | OptionsInit
        auth: {
            psuoAuth2Security?: string | (() => Promise<string>)
            tppoAuth2Security?: string | (() => Promise<string>)
        }
        defaultAuth?: string[][] | string[]
    }) {
        this.client = got.extend(...[{ prefixUrl, throwHttpErrors: false }, options].filter((o): o is Options => o !== undefined))
        this.auth = auth
        this.availableAuth = new Set(Object.keys(auth))
        this.defaultAuth = defaultAuth
    }

    /**
     * Create File Payment Consents
     */
    public createFilePaymentConsentsConsentIdFile({
        body,
        path,
        headers,
        auth = [['tppoAuth2Security']],
    }: {
        body: File
        path: { consentId: string }
        headers: {
            'x-fapi-auth-date'?: string
            'x-fapi-customer-ip-address'?: string
            'x-fapi-interaction-id'?: string
            Authorization: string
            'x-idempotency-key': string
            'x-jws-signature': string
            'x-customer-user-agent'?: string
        }
        auth?: string[][] | string[]
    }): Promise<
        | SuccessResponse<'200', unknown>
        | FailureResponse<'400', OBErrorResponse1, 'response:statuscode'>
        | FailureResponse<'401', unknown, 'response:statuscode'>
        | FailureResponse<'403', OBErrorResponse1, 'response:statuscode'>
        | FailureResponse<'404', unknown, 'response:statuscode'>
        | FailureResponse<'405', unknown, 'response:statuscode'>
        | FailureResponse<'406', unknown, 'response:statuscode'>
        | FailureResponse<'415', unknown, 'response:statuscode'>
        | FailureResponse<'429', unknown, 'response:statuscode'>
        | FailureResponse<'500', OBErrorResponse1, 'response:statuscode'>
        | FailureResponse<undefined, unknown, 'request:body', undefined>
        | FailureResponse<StatusCode<2>, string, 'response:body', IncomingHttpHeaders>
        | FailureResponse<
              Exclude<StatusCode<1 | 3 | 4 | 5>, '400' | '401' | '403' | '404' | '405' | '406' | '415' | '429' | '500'>,
              string,
              'response:statuscode',
              IncomingHttpHeaders
          >
    > {
        const _body = this.validateRequestBody(File, body)
        if ('left' in _body) {
            return Promise.resolve(_body)
        }

        return this.awaitResponse(
            this.buildClient(auth).post(\`file-payment-consents/\${path.consentId}/file\`, {
                json: body,
                headers: headers,
                responseType: 'text',
            }),
            {
                200: { parse: (x: unknown) => ({ right: x }) },
                400: OBErrorResponse1,
                401: { parse: (x: unknown) => ({ right: x }) },
                403: OBErrorResponse1,
                404: { parse: (x: unknown) => ({ right: x }) },
                405: { parse: (x: unknown) => ({ right: x }) },
                406: { parse: (x: unknown) => ({ right: x }) },
                415: { parse: (x: unknown) => ({ right: x }) },
                429: { parse: (x: unknown) => ({ right: x }) },
                500: OBErrorResponse1,
            },
        ) as ReturnType<this['createFilePaymentConsentsConsentIdFile']>
    }

    /**
     * Get File Payment Consents
     */
    public getFilePaymentConsentsConsentIdFile({
        path,
        headers,
        auth = [['tppoAuth2Security']],
    }: {
        path: { consentId: string }
        headers: {
            'x-fapi-auth-date'?: string
            'x-fapi-customer-ip-address'?: string
            'x-fapi-interaction-id'?: string
            Authorization: string
            'x-customer-user-agent'?: string
        }
        auth?: string[][] | string[]
    }): Promise<
        | SuccessResponse<'200', File>
        | FailureResponse<'400', OBErrorResponse1, 'response:statuscode'>
        | FailureResponse<'401', unknown, 'response:statuscode'>
        | FailureResponse<'403', OBErrorResponse1, 'response:statuscode'>
        | FailureResponse<'404', unknown, 'response:statuscode'>
        | FailureResponse<'405', unknown, 'response:statuscode'>
        | FailureResponse<'406', unknown, 'response:statuscode'>
        | FailureResponse<'429', unknown, 'response:statuscode'>
        | FailureResponse<'500', OBErrorResponse1, 'response:statuscode'>
        | FailureResponse<StatusCode<2>, string, 'response:body', IncomingHttpHeaders>
        | FailureResponse<
              Exclude<StatusCode<1 | 3 | 4 | 5>, '400' | '401' | '403' | '404' | '405' | '406' | '429' | '500'>,
              string,
              'response:statuscode',
              IncomingHttpHeaders
          >
    > {
        return this.awaitResponse(
            this.buildClient(auth).get(\`file-payment-consents/\${path.consentId}/file\`, {
                headers: headers,
                responseType: 'json',
            }),
            {
                200: File,
                400: OBErrorResponse1,
                401: { parse: (x: unknown) => ({ right: x }) },
                403: OBErrorResponse1,
                404: { parse: (x: unknown) => ({ right: x }) },
                405: { parse: (x: unknown) => ({ right: x }) },
                406: { parse: (x: unknown) => ({ right: x }) },
                429: { parse: (x: unknown) => ({ right: x }) },
                500: OBErrorResponse1,
            },
        ) as ReturnType<this['getFilePaymentConsentsConsentIdFile']>
    }

    public validateRequestBody<Parser extends { parse: (o: unknown) => { left: DefinedError[] } | { right: Body } }, Body>(
        parser: Parser,
        body: unknown,
    ) {
        const _body = parser.parse(body)
        if ('left' in _body) {
            return {
                statusCode: undefined,
                status: undefined,
                headers: undefined,
                left: body,
                validationErrors: _body.left,
                where: 'request:body',
            } satisfies FailureResponse<undefined, unknown, 'request:body', undefined>
        }
        return _body
    }

    public async awaitResponse<
        I,
        S extends Record<PropertyKey, { parse: (o: I) => { left: DefinedError[] } | { right: unknown } } | undefined>,
    >(response: CancelableRequest<Response<I>>, schemas: S) {
        const result = await response
        const status =
            result.statusCode < 200
                ? 'informational'
                : result.statusCode < 300
                  ? 'success'
                  : result.statusCode < 400
                    ? 'redirection'
                    : result.statusCode < 500
                      ? 'client-error'
                      : 'server-error'
        const validator = schemas[result.statusCode] ?? schemas.default
        const body = validator?.parse?.(result.body)
        if (result.statusCode < 200 || result.statusCode >= 300) {
            return {
                statusCode: result.statusCode.toString(),
                status,
                headers: result.headers,
                left: body !== undefined && 'right' in body ? body.right : result.body,
                validationErrors: body !== undefined && 'left' in body ? body.left : undefined,
                where: 'response:statuscode',
            }
        }
        if (body === undefined || 'left' in body) {
            return {
                statusCode: result.statusCode.toString(),
                status,
                headers: result.headers,
                left: result.body,
                validationErrors: body?.left,
                where: 'response:body',
            }
        }
        return { statusCode: result.statusCode.toString(), status, headers: result.headers, right: result.body }
    }

    protected buildPsuoAuth2SecurityClient(client: Got) {
        return client
    }

    protected buildTppoAuth2SecurityClient(client: Got) {
        return client
    }

    protected buildClient(auths: string[][] | string[] | undefined = this.defaultAuth, client?: Got): Got {
        const auth = (auths ?? [...this.availableAuth])
            .map((auth) => (Array.isArray(auth) ? auth : [auth]))
            .filter((auth) => auth.every((a) => this.availableAuth.has(a)))
        let chosenClient = client ?? this.client
        for (const chosen of auth[0] ?? []) {
            if (chosen === 'psuoAuth2Security') {
                chosenClient = this.buildPsuoAuth2SecurityClient(chosenClient)
            } else if (chosen === 'tppoAuth2Security') {
                chosenClient = this.buildTppoAuth2SecurityClient(chosenClient)
            }
        }
        return chosenClient
    }
}

export type Status<Major> = Major extends string
    ? Major extends \`1\${number}\`
        ? 'informational'
        : Major extends \`2\${number}\`
          ? 'success'
          : Major extends \`3\${number}\`
            ? 'redirection'
            : Major extends \`4\${number}\`
              ? 'client-error'
              : 'server-error'
    : undefined
export interface SuccessResponse<StatusCode extends string, T> {
    statusCode: StatusCode
    status: Status<StatusCode>
    headers: IncomingHttpHeaders
    right: T
}
export interface FailureResponse<StatusCode = string, T = unknown, Where = never, Headers = IncomingHttpHeaders> {
    statusCode: StatusCode
    status: Status<StatusCode>
    headers: Headers
    validationErrors: DefinedError[] | undefined
    left: T
    where: Where
}
export type StatusCode<Major extends number = 1 | 2 | 3 | 4 | 5> = \`\${Major}\${number}\`
",
    "examples/restclients/openbanking/banking.type.ts": "/**
 * Generated by @skyleague/therefore@v1.0.0-local
 * Do not manually touch this
 */
/* eslint-disable */

import type { DefinedError, ValidateFunction } from 'ajv'

import { validate as FileValidator } from './schemas/file.schema.js'
import { validate as OBErrorResponse1Validator } from './schemas/ob-error-response1.schema.js'

export interface File {}

export const File = {
    validate: FileValidator as ValidateFunction<File>,
    get schema() {
        return File.validate.schema
    },
    get errors() {
        return File.validate.errors ?? undefined
    },
    is: (o: unknown): o is File => File.validate(o) === true,
    parse: (o: unknown): { right: File } | { left: DefinedError[] } => {
        if (File.is(o)) {
            return { right: o }
        }
        return { left: (File.errors ?? []) as DefinedError[] }
    },
} as const

export interface OBError1 {
    /**
     * Low level textual error code, e.g., UK.OBIE.Field.Missing
     */
    ErrorCode: string
    /**
     * A description of the error that occurred. e.g., 'A mandatory field isn't supplied' or 'RequestedExecutionDateTime must be in future'
     * OBIE doesn't standardise this field
     */
    Message: string
    /**
     * Recommended but optional reference to the JSON Path of the field with error, e.g., Data.Initiation.InstructedAmount.Currency
     */
    Path?: string | undefined
    /**
     * URL to help remediate the problem, or provide more information, or to API Reference, or help etc
     */
    Url?: string | undefined
}

/**
 * An array of detail error codes, and messages, and URLs to documentation to help remediation.
 */
export interface OBErrorResponse1 {
    /**
     * High level textual error code, to help categorize the errors.
     */
    Code: string
    Errors: [OBError1, ...OBError1[]]
    /**
     * A unique reference for the error instance, for audit purposes, in case of unknown/unclassified errors.
     */
    Id?: string | undefined
    /**
     * Brief Error message, e.g., 'There is something wrong with the request parameters provided'
     */
    Message: string
}

export const OBErrorResponse1 = {
    validate: OBErrorResponse1Validator as ValidateFunction<OBErrorResponse1>,
    get schema() {
        return OBErrorResponse1.validate.schema
    },
    get errors() {
        return OBErrorResponse1.validate.errors ?? undefined
    },
    is: (o: unknown): o is OBErrorResponse1 => OBErrorResponse1.validate(o) === true,
    parse: (o: unknown): { right: OBErrorResponse1 } | { left: DefinedError[] } => {
        if (OBErrorResponse1.is(o)) {
            return { right: o }
        }
        return { left: (OBErrorResponse1.errors ?? []) as DefinedError[] }
    },
} as const
",
    "examples/restclients/openbanking/schemas/file.schema.js": "/* eslint-disable */
// @ts-nocheck
/**
 * Generated by Ajv https://ajv.js.org/guide/managing-schemas.html#standalone-validation-code
 */
"use strict";
/** @type {unknown} */
export const validate = validate10;export default validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","title":"File","type":"object","additionalProperties":true};function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate10.errors = vErrors;return errors === 0;};validate.schema=schema11;",
    "examples/restclients/openbanking/schemas/ob-error-response1.schema.js": "/* eslint-disable */
// @ts-nocheck
/**
 * Generated by Ajv https://ajv.js.org/guide/managing-schemas.html#standalone-validation-code
 */
import { default as ajvDistRuntimeUcs2LengthDefault } from 'ajv/dist/runtime/ucs2length.js';
"use strict";
/** @type {unknown} */
export const validate = validate10;export default validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","title":"OBErrorResponse1","type":"object","description":"An array of detail error codes, and messages, and URLs to documentation to help remediation.","properties":{"Code":{"type":"string","description":"High level textual error code, to help categorize the errors.","minLength":1,"maxLength":40},"Errors":{"type":"array","items":{"$ref":"#/$defs/OBError1"},"minItems":1},"Id":{"type":"string","description":"A unique reference for the error instance, for audit purposes, in case of unknown/unclassified errors.","minLength":1,"maxLength":40},"Message":{"type":"string","description":"Brief Error message, e.g., 'There is something wrong with the request parameters provided'","minLength":1,"maxLength":500}},"required":["Code","Errors","Message"],"additionalProperties":true,"$defs":{"OBError1":{"type":"object","properties":{"ErrorCode":{"type":"string","description":"Low level textual error code, e.g., UK.OBIE.Field.Missing"},"Message":{"type":"string","description":"A description of the error that occurred. e.g., 'A mandatory field isn't supplied' or 'RequestedExecutionDateTime must be in future'\\nOBIE doesn't standardise this field","minLength":1,"maxLength":500},"Path":{"type":"string","description":"Recommended but optional reference to the JSON Path of the field with error, e.g., Data.Initiation.InstructedAmount.Currency","minLength":1,"maxLength":500},"Url":{"type":"string","description":"URL to help remediate the problem, or provide more information, or to API Reference, or help etc"}},"required":["ErrorCode","Message"],"additionalProperties":true}}};const schema12 = {"type":"object","properties":{"ErrorCode":{"type":"string","description":"Low level textual error code, e.g., UK.OBIE.Field.Missing"},"Message":{"type":"string","description":"A description of the error that occurred. e.g., 'A mandatory field isn't supplied' or 'RequestedExecutionDateTime must be in future'\\nOBIE doesn't standardise this field","minLength":1,"maxLength":500},"Path":{"type":"string","description":"Recommended but optional reference to the JSON Path of the field with error, e.g., Data.Initiation.InstructedAmount.Currency","minLength":1,"maxLength":500},"Url":{"type":"string","description":"URL to help remediate the problem, or provide more information, or to API Reference, or help etc"}},"required":["ErrorCode","Message"],"additionalProperties":true};const func4 = ajvDistRuntimeUcs2LengthDefault;function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((((data.Code === undefined) && (missing0 = "Code")) || ((data.Errors === undefined) && (missing0 = "Errors"))) || ((data.Message === undefined) && (missing0 = "Message"))){validate10.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.Code !== undefined){let data0 = data.Code;const _errs2 = errors;if(errors === _errs2){if(typeof data0 === "string"){if(func4(data0) > 40){validate10.errors = [{instancePath:instancePath+"/Code",schemaPath:"#/properties/Code/maxLength",keyword:"maxLength",params:{limit: 40},message:"must NOT have more than 40 characters"}];return false;}else {if(func4(data0) < 1){validate10.errors = [{instancePath:instancePath+"/Code",schemaPath:"#/properties/Code/minLength",keyword:"minLength",params:{limit: 1},message:"must NOT have fewer than 1 characters"}];return false;}}}else {validate10.errors = [{instancePath:instancePath+"/Code",schemaPath:"#/properties/Code/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.Errors !== undefined){let data1 = data.Errors;const _errs4 = errors;if(errors === _errs4){if(Array.isArray(data1)){if(data1.length < 1){validate10.errors = [{instancePath:instancePath+"/Errors",schemaPath:"#/properties/Errors/minItems",keyword:"minItems",params:{limit: 1},message:"must NOT have fewer than 1 items"}];return false;}else {var valid1 = true;const len0 = data1.length;for(let i0=0; i0<len0; i0++){let data2 = data1[i0];const _errs6 = errors;const _errs7 = errors;if(errors === _errs7){if(data2 && typeof data2 == "object" && !Array.isArray(data2)){let missing1;if(((data2.ErrorCode === undefined) && (missing1 = "ErrorCode")) || ((data2.Message === undefined) && (missing1 = "Message"))){validate10.errors = [{instancePath:instancePath+"/Errors/" + i0,schemaPath:"#/$defs/OBError1/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];return false;}else {if(data2.ErrorCode !== undefined){const _errs10 = errors;if(typeof data2.ErrorCode !== "string"){validate10.errors = [{instancePath:instancePath+"/Errors/" + i0+"/ErrorCode",schemaPath:"#/$defs/OBError1/properties/ErrorCode/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs10 === errors;}else {var valid3 = true;}if(valid3){if(data2.Message !== undefined){let data4 = data2.Message;const _errs12 = errors;if(errors === _errs12){if(typeof data4 === "string"){if(func4(data4) > 500){validate10.errors = [{instancePath:instancePath+"/Errors/" + i0+"/Message",schemaPath:"#/$defs/OBError1/properties/Message/maxLength",keyword:"maxLength",params:{limit: 500},message:"must NOT have more than 500 characters"}];return false;}else {if(func4(data4) < 1){validate10.errors = [{instancePath:instancePath+"/Errors/" + i0+"/Message",schemaPath:"#/$defs/OBError1/properties/Message/minLength",keyword:"minLength",params:{limit: 1},message:"must NOT have fewer than 1 characters"}];return false;}}}else {validate10.errors = [{instancePath:instancePath+"/Errors/" + i0+"/Message",schemaPath:"#/$defs/OBError1/properties/Message/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid3 = _errs12 === errors;}else {var valid3 = true;}if(valid3){if(data2.Path !== undefined){let data5 = data2.Path;const _errs14 = errors;if(errors === _errs14){if(typeof data5 === "string"){if(func4(data5) > 500){validate10.errors = [{instancePath:instancePath+"/Errors/" + i0+"/Path",schemaPath:"#/$defs/OBError1/properties/Path/maxLength",keyword:"maxLength",params:{limit: 500},message:"must NOT have more than 500 characters"}];return false;}else {if(func4(data5) < 1){validate10.errors = [{instancePath:instancePath+"/Errors/" + i0+"/Path",schemaPath:"#/$defs/OBError1/properties/Path/minLength",keyword:"minLength",params:{limit: 1},message:"must NOT have fewer than 1 characters"}];return false;}}}else {validate10.errors = [{instancePath:instancePath+"/Errors/" + i0+"/Path",schemaPath:"#/$defs/OBError1/properties/Path/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid3 = _errs14 === errors;}else {var valid3 = true;}if(valid3){if(data2.Url !== undefined){const _errs16 = errors;if(typeof data2.Url !== "string"){validate10.errors = [{instancePath:instancePath+"/Errors/" + i0+"/Url",schemaPath:"#/$defs/OBError1/properties/Url/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs16 === errors;}else {var valid3 = true;}}}}}}else {validate10.errors = [{instancePath:instancePath+"/Errors/" + i0,schemaPath:"#/$defs/OBError1/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid1 = _errs6 === errors;if(!valid1){break;}}}}else {validate10.errors = [{instancePath:instancePath+"/Errors",schemaPath:"#/properties/Errors/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs4 === errors;}else {var valid0 = true;}if(valid0){if(data.Id !== undefined){let data7 = data.Id;const _errs18 = errors;if(errors === _errs18){if(typeof data7 === "string"){if(func4(data7) > 40){validate10.errors = [{instancePath:instancePath+"/Id",schemaPath:"#/properties/Id/maxLength",keyword:"maxLength",params:{limit: 40},message:"must NOT have more than 40 characters"}];return false;}else {if(func4(data7) < 1){validate10.errors = [{instancePath:instancePath+"/Id",schemaPath:"#/properties/Id/minLength",keyword:"minLength",params:{limit: 1},message:"must NOT have fewer than 1 characters"}];return false;}}}else {validate10.errors = [{instancePath:instancePath+"/Id",schemaPath:"#/properties/Id/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs18 === errors;}else {var valid0 = true;}if(valid0){if(data.Message !== undefined){let data8 = data.Message;const _errs20 = errors;if(errors === _errs20){if(typeof data8 === "string"){if(func4(data8) > 500){validate10.errors = [{instancePath:instancePath+"/Message",schemaPath:"#/properties/Message/maxLength",keyword:"maxLength",params:{limit: 500},message:"must NOT have more than 500 characters"}];return false;}else {if(func4(data8) < 1){validate10.errors = [{instancePath:instancePath+"/Message",schemaPath:"#/properties/Message/minLength",keyword:"minLength",params:{limit: 1},message:"must NOT have fewer than 1 characters"}];return false;}}}else {validate10.errors = [{instancePath:instancePath+"/Message",schemaPath:"#/properties/Message/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs20 === errors;}else {var valid0 = true;}}}}}}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate10.errors = vErrors;return errors === 0;};validate.schema=schema11;",
  },
}
`;
